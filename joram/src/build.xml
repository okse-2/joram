<?xml version="1.0" standalone="yes"?>

<project default="ship.joram" basedir=".">
  <!-- Initializes properties -->
  <target name="init">
    <!-- Creates the time stamp -->
    <tstamp/>
    <!-- Initializes the environment properties, uses ${env.name} -->
    <property environment="env"/>
  
    <!-- Gets the user defined properties from file -->
    <property file="build.properties"/>

    <!-- Initializes the directory structure properties -->
    <property name="src.dir" location="."/>
    <property name="obj.dir" location="../classes"/>
    <property name="lib.dir" location="../lib"/>
    <property name="build.dir" location="../build"/>
    <property name="doc.dir" location="../javadoc"/>
    <property name="conf.dir" location="../config"/>
    <property name="licenses.dir" location="../licenses"/>
    <property name="samples.dir" location="../samples"/>
    <property name="releases.dir" location="../releases"/>
    <property name="readme.file" location="../README"/>

    <!-- Base classpath needed for execution -->
    <path id="base.class.path">
      <pathelement path="${java.class.path}/"/>
      <fileset dir="${lib.dir}">
        <include name="jakarta-regexp-1.2.jar"/>
        <include name="JCup.jar"/>
        <include name="jms.jar"/>
        <include name="jndi.jar"/>
        <include name="jta.jar"/>
        <include name="log4j.jar"/>
	<include name="ow_util_log_wrp_log4j.jar" />
        <include name="xerces.jar"/>
      </fileset>
    </path>

    <!-- Project classpath needed for compilation -->
    <path id="project.class.path">
      <path refid="base.class.path"/>
      <pathelement path="${obj.dir}"/>
      <pathelement path="${additional.path}"/>
    </path>
  </target>

  <!-- Cleans all generated files -->
  <target name="clean" depends="init"
      description="--> Clean all generated files">
    <delete dir="${obj.dir}"/>
    <delete dir="${build.dir}"/>
    <delete dir="${doc.dir}"/>
    <!-- Deletes generated jar files -->
    <delete file="${lib.dir}/mom.jar" />
    <delete file="${lib.dir}/joram.jar" />
  </target>

  <!-- Prepares compilation phase -->
  <target name="prepare" depends="init">
    <!-- Creates the directory structure -->
    <mkdir dir="${obj.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${doc.dir}"/>
  </target>

  <!-- Compilation phase -->
  <target name="compile" depends="prepare"
      description="--> Compiles Joram sources.">
    <javac srcdir="${src.dir}:${obj.dir}"
           destdir="${obj.dir}"
           debug="on"
           deprecation="${deprecation}"
           optimize="false"
           nowarn="${nowarn}"
           verbose="${verbose}">

      <classpath refid="project.class.path"/>

      <include name="**/*.java"/>

      <!-- Excludes tests and CVS directories -->
      <exclude name="fr/dyade/aaa/**/CVS/**/*.java"/>
    </javac>
  </target>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     - Joram specific build target
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- JARS BUILDING -->
  <target name="build.joram" depends="init,compile"
      description="--> Builds Joram server and client jars.">
    <jar jarfile="${build.dir}/mom.jar"
         manifest="${src.dir}/mom.mf">
      <fileset dir="${obj.dir}">
        <include name="fr/dyade/aaa/agent/*.class"/>
        <include name="fr/dyade/aaa/ip/*.class"/>
        <include name="fr/dyade/aaa/jndi/*.class"/>
        <include name="fr/dyade/aaa/mom/*.class"/>
        <include name="fr/dyade/aaa/mom/comm/*.class"/>
        <include name="fr/dyade/aaa/mom/dest/*.class"/>
        <include name="fr/dyade/aaa/mom/excepts/*.class"/>
        <include name="fr/dyade/aaa/mom/jms/*.class"/>
        <include name="fr/dyade/aaa/mom/messages/*.class"/>
        <include name="fr/dyade/aaa/mom/proxies/*.class"/>
        <include name="fr/dyade/aaa/mom/selectors/*.class"/>
        <include name="fr/dyade/aaa/ns/*.class"/>
        <include name="fr/dyade/aaa/task/*.class"/>
        <include name="fr/dyade/aaa/util/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${build.dir}/joram.jar">
      <fileset dir="${obj.dir}">
        <include name="fr/dyade/aaa/jndi/MessageContext.class"/>
        <include name="fr/dyade/aaa/jndi/NamingContext.class"/>
        <include name="fr/dyade/aaa/jndi/NamingContextFactory.class"/>
        <include name="fr/dyade/aaa/joram/*.class"/>
        <include name="fr/dyade/aaa/joram/admin/*.class"/>
        <include name="fr/dyade/aaa/mom/excepts/*.class"/>
        <include name="fr/dyade/aaa/mom/jms/*.class"/>
        <include name="fr/dyade/aaa/mom/messages/*.class"/>
        <include name="fr/dyade/aaa/mom/selectors/*.class"/>
        <include name="fr/dyade/aaa/util/*.class"/>
      </fileset>
    </jar>
  </target>

  <!-- SHIPMENT -->
  <target name="ship.joram" depends="build.joram"
      description="--> Creates a Joram shipment.">
    <copy file="${build.dir}/joram.jar" todir="${lib.dir}"/>
    <copy file="${build.dir}/mom.jar" todir="${lib.dir}"/>
  </target>

  <!-- JAVADOC --> 
  <target name="javadoc" depends="prepare"
      description="--> Generates the Javadoc.">
  <!-- Path needed to create the javadoc  -->
  <path id="doc.class.path">
    <fileset dir="${lib.dir}">
      <include name="jms.jar"/>
      <include name="log4j.jar"/>
      <include name="ow_util_log_wrp_log4j.jar" />
      <include name="xerces.jar"/>
      <include name="jndi.jar"/>
    </fileset>
    </path>
    
    <javadoc packagenames="fr.dyade.aaa.*"
      sourcepath="${src.dir}"
      classpathref="project.class.path"
      defaultexcludes="yes"
      destdir="${doc.dir}"
      author="true"
      version="true"
      use="false"
      windowtitle="Joram Documentation">	   
      <doctitle><![CDATA[<h1>Joram Documentation</h1>]]></doctitle>
      <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api/" />
      <link href="http://java.sun.com/j2se/1.3/docs/api/" />
    </javadoc>
  </target>

  <!-- RELEASES -->
  <target name="releases" depends="release.src, release.jar"
    if="version"
    description="--> Creates two releases (sources and jars) (version is specified by -Dversion=x.y.z)." />
  
  <target name="release.jar" depends="clean,ship.joram" if="version"
    description="--> Creates a jars only release (version is specified by -Dversion=x.y.z).">
    <copy todir="../../joram-${version}" includeEmptyDirs="no">
      <fileset dir="../../joram">
	<exclude name="build/**" />
	<exclude name="src/**" />
	<exclude name="classes/**" />
	<exclude name="releases/**" />
      </fileset>
    </copy>
    <tar tarfile="joram-${version}.tar"
      longfile="gnu"
      basedir="../.."
      includes="joram-${version}/**" />
    <gzip zipfile="joram-${version}.tgz" src="joram-${version}.tar" />
    <delete file="joram-${version}.tar" /> 
    <delete dir="../../joram-${version}" /> 
    <mkdir dir="${releases.dir}" />
    <move file="joram-${version}.tgz" todir="${releases.dir}" />
  </target>

  <target name="release.src" depends="clean" if="version"
    description="--> Creates a sources release (version is specified by -Dversion=x.y.z)">
    <copy todir="../../joram-${version}-src" includeEmptyDirs="no">
      <fileset dir="../../joram">
	<exclude name="build/**" />
	<exclude name="classes/**" />
	<exclude name="releases/**" />
      </fileset>
    </copy>
    <tar tarfile="joram-${version}-src.tar"
      longfile="gnu"
      basedir="../.."
      includes="joram-${version}-src/**" />
    <gzip zipfile="joram-${version}-src.tgz" src="joram-${version}-src.tar" />
    <delete file="joram-${version}-src.tar" /> 
    <delete dir="../../joram-${version}-src" /> 
    <mkdir dir="${releases.dir}" />
    <move file="joram-${version}-src.tgz" todir="${releases.dir}" />
  </target>
</project>
