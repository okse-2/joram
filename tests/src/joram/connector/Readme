Use Connector
			    
			    
See sample : Test1.java 

First instantiate JoramAdapter. 

To run JoramAdapter using start() method, you need : 
	
	- An implementation of javax.resource.spi.BootstrapContext 
(see ResourceBootstrapContext.java). Then BootstrapContext need an implementation of  javax.resource.spi.work.WorkManager (see JWorker.java)
	
	- A configuration file of joram (see samples/config/joramAdmin.xml 

Then run JoramAdapter using start() method.

You can use a Context to lookup destination ( Queue, Topic).

Instantiate a ManagedConnectionFactoryImpl and specify JoramAdapter use setResourceAdapter() method.
ManagedConnectionFactoryImpl's instance permit to create a ManagedConnectionImpl.
With a ManagedConnectionImpl can get a connection : OutboundConnection.
Then with an OutboundConnection can create an OutboundSession.
With an OutboundSession can create :
				OutboundProducer
				OutboundConsumer

With OutboundProducer you can use send() method to send a message and with OutboundConsumer you can use receive() method to receive message send by OutboundProducer.



	If you want to use a listener, you need to use endpointActivation method of JoramAdapter.
So you need to implements : javax.resource.spi.endpoint.MessageEndpointFactory and javax.resource.spi.endpoint.MessageEndpoint
The first permit to create the second with createEndpoint() method. see (MessagePointFactory.java).
The second implement onMessage() method. see  (MessagePoint.java)

Instantiate ActivationSpecImpl and fix parameter :
	spec.setResourceAdapter(ja);
	spec.setDestinationType("javax.jms.Queue"); or spec.setDestinationType("javax.jms.Topic");
	spec.setDestination("sampleQueue"); or spec.setDestination("sampleTopic");
then use the endpointActivation method.
Finally send message with OutboundProducer, and messages are automatically receive on method onMessage.


