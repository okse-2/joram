<?xml version="1.0"?>

<!DOCTYPE project [
    <!ENTITY common SYSTEM "../common.xml">
]>

<project default="tests.all" basedir=".">
  <!-- Includes generic stuff -->
  &common;

  <target name="init.src">
    <!-- Tests specific sources set -->
    <patternset id="specific">
      <include name="a3/**/*.java"/>
    </patternset>
  </target>

  <target name="tests"
          description=" --> launch all tests with default configuration: base, recovery, perf">
    <ant dir="." antfile="build.xml" target="tests.base"/>
    <ant dir="." antfile="build.xml" target="tests.recovery"/>
    <ant dir="." antfile="build.xml" target="tests.perf"/>
  </target>

  <target name="tests.http"
          description=" -->  launch all http tests">
    <ant dir="." antfile="build.xml" target="tests.http.base"/>
    <ant dir="." antfile="build.xml" target="tests.http.recovery"/>
  </target>

  <!--
    - Launch all a3 tests with various network 'standard' configuration.
    -->

  <target name="tests.all"
          description=" --> launch all a3 tests with various 'standard' configuration">
    <!-- SimpleNetwork + JTransaction -->
    <antcall target="tests">
      <param name="transaction" value="fr.dyade.aaa.util.JTransaction"/>
      <param name="network" value="fr.dyade.aaa.agent.SimpleNetwork"/>
    </antcall>
    <!-- SimpleNetwork + NTransaction -->
    <antcall target="tests">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="network" value="fr.dyade.aaa.agent.SimpleNetwork"/>
    </antcall>
    <!-- PoolNetwork + NTransaction -->
    <antcall target="tests">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
    </antcall>
    <!-- HttpNetwork + NTransaction -->
    <antcall target="tests.http"/>
    <!-- PoolNetwork + NGTransaction
    <antcall target="tests">
      <param name="transaction" value="fr.dyade.aaa.util.NGTransaction"/>
      <param name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
    </antcall>
  	 -->
  </target>

  <!--
    - Launch all a3 tests with various network implementation.
    - We should exclude centralized tests.
    -->
	
  <target name="tests.network"
          description=" --> launch all a3 tests with various network implementation">
    <ant dir="." antfile="build.xml" target="tests.simple"/>
    <ant dir="." antfile="build.xml" target="tests.pool"/>
    <ant dir="." antfile="build.xml" target="tests.ng"/>
    <ant dir="." antfile="build.xml" target="tests.udp"/>
    <ant dir="." antfile="build.xml" target="tests.http"/>
  </target>

  <target name="tests.simple"
          description=" --> launch tests with SimpleNetwork">
    <antcall target="tests">
      <param name="network" value="fr.dyade.aaa.agent.SimpleNetwork"/>
    </antcall>
  </target>

  <target name="tests.pool"
          description=" --> launch tests with PoolNetwork">
    <antcall target="tests">
      <param name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
    </antcall>
  </target>

  <target name="tests.ng"
          description=" --> launch tests with NGNetwork">
    <antcall target="tests">
      <param name="network" value="fr.dyade.aaa.agent.NGNetwork"/>
    </antcall>
  </target>

  <target name="tests.udp"
          description=" --> launch tests with UDPNetwork">
    <antcall target="tests">
      <param name="network" value="fr.dyade.aaa.agent.UDPNetwork"/>
    </antcall>
  </target>

  <!--
    - Launch all a3 tests with various transaction implementation.
    - We should exclude tests defined with NullTransaction.
    -->

  <target name="tests.transaction"
          description=" --> launch all a3 tests with various transaction implementation">
    <ant dir="." antfile="build.xml" target="tests.jtransaction"/>
    <ant dir="." antfile="build.xml" target="tests.ntransaction"/>
    <ant dir="." antfile="build.xml" target="tests.ngtransaction"/>
  </target>
	
  <target name="tests.jtransaction"
          description=" --> launch tests with JTransaction">
    <antcall target="tests">
      <param name="transaction" value="fr.dyade.aaa.util.JTransaction"/>
    </antcall>
  </target>
	
  <target name="tests.atransaction"
          description=" --> launch tests with ATransaction">
    <antcall target="tests">
      <param name="transaction" value="fr.dyade.aaa.util.ATransaction"/>
    </antcall>
  </target>
	
  <target name="tests.ntransaction"
          description=" --> launch tests with NTransaction">
    <antcall target="tests">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
    </antcall>
  </target>
	
  <target name="tests.ngtransaction"
          description=" --> launch tests with NGTransaction">
    <antcall target="tests">
      <param name="transaction" value="fr.dyade.aaa.util.NGTransaction"/>
    </antcall>
  </target>
  
  <target name="tests.base.osgi"
          description=" --> launch all a3 tests">
    <property name="SCAdminClass" value="framework.SCAdminOSGi"/>
    <antcall target="tests.base"/>
  </target>

  <target name="tests.base">
    <ant dir="." antfile="build.xml" target="test1.base"/>
    <ant dir="." antfile="build.xml" target="test2.base"/>
    <ant dir="." antfile="build.xml" target="test3.base"/>
    <ant dir="." antfile="build.xml" target="test4.base"/>
    <ant dir="." antfile="build.xml" target="test5.base"/>
    <ant dir="." antfile="build.xml" target="test6.base"/>
    <ant dir="." antfile="build.xml" target="test8.base"/>
    <ant dir="." antfile="build.xml" target="test9.base"/>
    <ant dir="." antfile="build.xml" target="test11.base"/>
    <ant dir="." antfile="build.xml" target="test12.base"/>
    <ant dir="." antfile="build.xml" target="test14.base"/>
    <ant dir="." antfile="build.xml" target="test15.base"/>
    <ant dir="." antfile="build.xml" target="test18.base"/>
    <ant dir="." antfile="build.xml" target="test19.base"/>
    <ant dir="." antfile="build.xml" target="test20.base"/>
  	<ant dir="." antfile="build.xml" target="test21.base"/>
  	<ant dir="." antfile="build.xml" target="test22.base"/>
  </target>

  <target name="tests.http.base">
    <ant dir="." antfile="build.xml" target="test3.http.base"/>
    <ant dir="." antfile="build.xml" target="test4.http.base"/>
    <ant dir="." antfile="build.xml" target="test5.http.base"/>
    <ant dir="." antfile="build.xml" target="test5-3.http.base"/>
    <ant dir="." antfile="build.xml" target="test11.http.base"/>
    <ant dir="." antfile="build.xml" target="test15.http.base"/>
    <ant dir="." antfile="build.xml" target="test16.http.base"/>
    <ant dir="." antfile="build.xml" target="test17.http.base"/>
  </target>

  <target name="tests.recovery">
    <ant dir="." antfile="build.xml" target="test1.recovery"/>
    <ant dir="." antfile="build.xml" target="test2.recovery"/>
    <ant dir="." antfile="build.xml" target="test3.recovery"/>
    <ant dir="." antfile="build.xml" target="test4.recovery"/>
    <ant dir="." antfile="build.xml" target="test5.recovery"/>
    <ant dir="." antfile="build.xml" target="test6.recovery"/>
    <ant dir="." antfile="build.xml" target="test7.recovery"/>
    <ant dir="." antfile="build.xml" target="test8.recovery"/>
    <ant dir="." antfile="build.xml" target="test9.recovery"/>
    <ant dir="." antfile="build.xml" target="test10.recovery"/>
  </target>

  <target name="tests.http.recovery">
    <ant dir="." antfile="build.xml" target="test1.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test2-1.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test2-2.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test3.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test4.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test5.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test8-1.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test8-2.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test9.http.recovery"/>
    <ant dir="." antfile="build.xml" target="test10.http.recovery"/>
  </target>

  <target name="tests.perf">
    <ant dir="." antfile="build.xml" target="test1.perf"/>
    <ant dir="." antfile="build.xml" target="test2.perf"/>
    <ant dir="." antfile="build.xml" target="test5.perf"/>
  </target>

  <!--
    - Generic test launcher
    -->

  <target name="init.test">
    <!-- Initialization of the run directory -->
    <delete dir="${test.dir}"/>
    <mkdir dir="${test.dir}"/>
    
    <copy file="config.properties" todir="${test.dir}"/>
    <property name="bundle.dir" location="${ship.dir}/bundle" />
    <replace file="${test.dir}/config.properties" token="@BUNDLE_DIR@" value="${bundle.dir}" />
    <replace file="${test.dir}/config.properties" token="\" value="/" />
    <replace file="${test.dir}/config.properties" token="@@@" value="\" />

    <copy file="${a3conf}" tofile="${test.dir}/a3servers.xml"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@engine@" value="${engine}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@transaction@" value="${transaction}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@network@" value="${network}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@nbMaxCnx@" value="${nbMaxCnx}"/>
  	<replace file="${test.dir}/a3servers.xml"
           	 token="@compressedFlows@" value="${compressedFlows}"/>
  	<replace file="${test.dir}/a3servers.xml"
           	 token="@maxMessageInFlow@" value="${maxMessageInFlow}"/>

    <copy file="a3debug.cfg" tofile="${test.dir}/a3debug.cfg"/>
    
    <jar jarfile="${obj.dir}/test-bundle.jar" manifest="${src.dir}/a3/manifest.mf">
      <fileset dir="${obj.dir}">
        <include name="a3/**/*.class"/>
        <include name="framework/*.class"/>
      </fileset>
    </jar>
  </target>

  <target name="init.a3props">
    <!-- Theses default properties can be overidden by param defines
      -  in specific target.
     -->
    <property name="engine" value="fr.dyade.aaa.agent.Engine"/>
    <property name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
    <property name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
    <property name="nbMaxCnx" value="5"/>
    <property name="compressedFlows" value="false"/>
    <property name="maxMessageInFlow" value="10"/>
  </target>

  <!-- Empty target used for undefined postinit handling (see test.run target) -->
  <target name="${postinit}"/>

  <target name="test.start">
    <!-- Launch test without initialization -->
    <java classname="${classname}"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg value="-Dframework.TestCase.TestId=${testid}"/>
      <jvmarg value="-Dframework.TestCase.OutFile=${report.file}"/>
      <jvmarg line="-DSCAdminClass=${SCAdminClass} -Dfelix.dir=${felix.dir} -Dfelix.config.properties=file:config.properties -Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer ${jvmargs}"/>
      <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y ${jvmargs}" -->
      <arg line="0 ./s0"/>
    </java>
  </target>

  <target name="test.run">
    <!-- Launch test with initialization: init.test + test.start -->
    <antcall target="init.test" inheritAll="true"/>
    <antcall target="${postinit}"/>
    <antcall target="test.start" inheritAll="true"/>
  </target>

  <!--
    - Scalagent middleware base tests
    -->

  <!-- A simple Agent test -->
  <target name="test1.base" depends="init.a3props,compile">
    <!-- NTransaction -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test1"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Another simple Agent test [Echo] -->
  <target name="test2.base" depends="init.a3props,compile">
    <!-- NTransaction -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test2"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!--
    - A distributed Echo test between 2 servers
    -->
  <target name="test3.base" depends="test3-1.base,test3-2.base"/>

  <target name="test3-1.base" depends="init.a3props,compile">
    <!-- 1 domain -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test3"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value="-DRouter=false"/>
    </antcall>
  </target>

  <!-- 1 domain with http network -->
  <target name="test3.http.base" depends="test3-1a.http.base,test3-1b.http.base,test3-2.http.base"/>
  <target name="test3-1a.http.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test3"/>
      <param name="testid" value="http-a"/>
      <param name="a3conf" value="base/a3servers2e1.xml"/>
      <param name="jvmargs" value="-DRouter=false"/>
    </antcall>
  </target>
  <target name="test3-1b.http.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test3"/>
      <param name="testid" value="http-b"/>
      <param name="a3conf" value="base/a3servers2e2.xml"/>
      <param name="jvmargs" value="-DRouter=false"/>
    </antcall>
  </target>

  <!-- 1 domain with http network -->
  <target name="postinit.https">
    <java classname="a3.base.genks"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
    </java>
    <replace file="${test.dir}/a3servers.xml"
             token="HttpNetwork" value="HttpsNetwork"/>
  </target>

  <target name="test3.https.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test3"/>
      <param name="testid" value="https-a"/>
      <param name="a3conf" value="base/a3servers2e1.xml"/>
      <param name="jvmargs" value="-DRouter=false"/>
      <param name="postinit" value="postinit.https"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test3"/>
      <param name="testid" value="https-b"/>
      <param name="a3conf" value="base/a3servers2e2.xml"/>
      <param name="jvmargs" value="-DRouter=false"/>
      <param name="postinit" value="postinit.https"/>
    </antcall>
  </target>

  <!-- 1 domain with ssl network -->
  <target name="postinit.ssl">
    <java classname="a3.base.genks"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
    </java>
  </target>

  <target name="test3.ssl.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test3"/>
      <param name="testid" value="ssl-1"/>
      <param name="a3conf" value="base/a3serversSSL1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="postinit" value="postinit.ssl"/>
    </antcall>
  </target>

  <!-- Routing in a http domain -->
  <target name="test3-2.http.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test3"/>
      <param name="testid" value="2-http"/>
      <param name="a3conf" value="base/a3servers4.http.xml"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

  <!-- 2 servers in 2 different domain, with a router -->
  <target name="test3-2.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test3"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="base/a3servers4.xml"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

  <!--
    - A "graph" test between n servers
    -->
  <target name="test4.base" depends="test4-1.base,test4-2.base"/>

  <target name="test4-1.base" depends="init.a3props,compile">
    <!-- 1 server, NTransaction -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test4"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value="-DNbNode=1"/>
    </antcall>
  </target>

  <target name="test4-2.base" depends="init.a3props,compile">
    <!-- 2 servers, single domain -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test4"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value="-DNbNode=2"/>
    </antcall>
  </target>

  <target name="test4.http.base" depends="init.a3props,compile">
    <!-- 2 servers, single domain (HTTPNetwork) -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test4"/>
      <param name="testid" value="2a"/>
      <param name="a3conf" value="base/a3servers2e1.xml"/>
      <param name="jvmargs" value="-DNbNode=2"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test4"/>
      <param name="testid" value="2b"/>
      <param name="a3conf" value="base/a3servers2e2.xml"/>
      <param name="jvmargs" value="-DNbNode=2"/>
    </antcall>
  </target>

  <!--
    - A "ping-pong" test.
    -->
  <target name="test5.base" depends="test5-1.base,test5-2.base,test5-3.base"/>

  <!-- 1 server -->
  <target name="test5-1.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test5"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value="-DRouter=false -DPong=0"/>
    </antcall>
  </target>

  <!-- 2 servers, 1 domain -->
  <target name="test5-2.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test5"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value="-DRouter=false -DPong=1"/>
    </antcall>
  </target>

  <target name="test5.http.base" depends="init.a3props,compile">
    <!-- HttpNetwork -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test5"/>
      <param name="testid" value="2a"/>
      <param name="a3conf" value="base/a3servers2e1.xml"/>
      <param name="jvmargs" value="-DRouter=false -DPong=1"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test5"/>
      <param name="testid" value="2b"/>
      <param name="a3conf" value="base/a3servers2e1.xml"/>
      <param name="jvmargs" value="-DRouter=false -DPong=1"/>
    </antcall>
  </target>

  <!-- Routing in a http domain -->
  <target name="test5-3.http.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test5"/>
      <param name="testid" value="3-http"/>
      <param name="a3conf" value="base/a3servers4.http.xml"/>
      <param name="jvmargs" value="-DRouter=true -DPong=1"/>
    </antcall>
  </target>

  <!-- 3 servers, 2 domain -->
  <target name="test5-3.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test5"/>
      <param name="testid" value="3"/>
      <param name="a3conf" value="base/a3servers4.xml"/>
      <param name="jvmargs" value="-DRouter=true -DPong=1"/>
    </antcall>
  </target>

  <!--
    - Configuration tests
    -->
  <target name="test6.base" depends="test6-1.base,test6-2.base"/>

  <target name="test6-1.base" depends="init.a3props,compile">
    <!-- server S0 #0 inaccessible -->
    <antcall target="init.test" inheritAll="true">
      <param name="a3conf" value="base/a3serversCfg1.xml"/>
    </antcall>        
    <java classname="a3.base.test6"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg value="-Dframework.TestCase.TestId=1"/>
      <jvmarg value="-Dframework.TestCase.OutFile=${report.file}"/>
      <jvmarg value="-DExcType=java.lang.Exception"/>
      <jvmarg value="-DExcMsg=Can't configure server"/>
      <arg line="1 ./s1"/>
    </java>
  </target>

  <target name="test6-2.base" depends="init.a3props,compile">
    <!-- Try to run twice an AgentServer -->
    <antcall target="init.test" inheritAll="true">
      <param name="a3conf" value="base/a3servers1.xml"/>
    </antcall>
    <parallel>
      <java classname="fr.dyade.aaa.agent.AgentServer"
            failonerror="no" fork="yes"
            dir="${test.dir}">
        <classpath path="${project.class.path}"/>
        <arg line="0 ./s0"/>
      </java>
      <!--<antcall target="server.start" inheritAll="true">
        <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
        <param name="sid" value="0"/>
      </antcall>-->
      <sequential>
        <sleep seconds="5"/>
        <java classname="a3.base.test6"
              failonerror="no" fork="yes"
              dir="${test.dir}">
          <classpath path="${project.class.path}"/>
          <jvmarg value="-Dframework.TestCase.TestId=2"/>
          <jvmarg value="-Dframework.TestCase.OutFile=${report.file}"/>
          <jvmarg value="-DExcType=java.lang.Exception"/>
          <jvmarg value="-DExcMsg=Can't start transaction manager"/>
          <arg line="0 ./s0"/>
        </java>
        <java classname="a3.base.askiller"
              failonerror="no" fork="yes"
              dir="${test.dir}">
          <classpath path="${project.class.path}"/>
          <arg line="8090"/>
        </java>
      </sequential>
    </parallel>
  </target>

  <!-- Test a sendTo to an unkonwn server -->
  <target name="test8.base" depends="init.a3props,compile">
    <!-- NTransaction -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test8"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers8.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Test the agent deletion, simple -->
  <target name="test9.base" depends="init.a3props,compile">
    <!-- NTransaction -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test9"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- -->
  <target name="test11.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test11"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value="-DSend=0 -DRecv=1 -Dbounce=99"/>
    </antcall>
  </target>


  <target name="test11.http.base"  depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test11"/>
      <param name="testid" value="a"/>
      <param name="a3conf" value="base/a3servers2e1.xml"/>
      <param name="jvmargs" value="-DSend=0 -DRecv=1 -Dbounce=99"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test11"/>
      <param name="testid" value="b"/>
      <param name="a3conf" value="base/a3servers2e2.xml"/>
      <param name="jvmargs" value="-DSend=0 -DRecv=1 -Dbounce=99"/>
    </antcall>
  </target>

  <!--  -->
  <target name="test12.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test12"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers12.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="test13.base" depends="test13-1.base,test13-2.base"/>

  <target name="test13-1.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test13"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="test13-2.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test13"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="base/a3servers13.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!--
    - A test to verify that from field is correctly set in agentInitialize
    -->
  <target name="test14.base" depends="init.a3props,compile">
    <!-- NTransaction -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test14"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!--
    - A test using expiration time for notification.
    -->
  <target name="test15.base" depends="test15-1.base,test15-2.base"/>

  <!-- 1 server -->
  <target name="test15-1.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test15"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value="-DEcho=0"/>
    </antcall>
  </target>

  <!-- 2 servers, 1 domain -->
  <target name="test15-2.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test15"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value="-DEcho=1"/>
    </antcall>
  </target>

  <!-- 1 domain with http network -->
  <target name="test15.http.base" depends="test15-2a.http.base,test15-2b.http.base,test3-2.http.base"/>
  <target name="test15-2a.http.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test15"/>
      <param name="testid" value="http-a"/>
      <param name="a3conf" value="base/a3servers2e1.xml"/>
      <param name="jvmargs" value="-DEcho=1"/>
    </antcall>
  </target>
  <target name="test15-2b.http.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test15"/>
      <param name="testid" value="http-b"/>
      <param name="a3conf" value="base/a3servers2e2.xml"/>
      <param name="jvmargs" value="-DEcho=1"/>
    </antcall>
  </target>

  <target name="test16.http.base"  depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test16"/>
      <param name="testid" value="a"/>
      <param name="a3conf" value="base/a3servers5.http.xml"/>
      <param name="jvmargs" value="-Dbounce=500"/>
    </antcall>
  </target>

  <target name="test17.http.base"  depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test17"/>
      <param name="testid" value="a"/>
      <param name="a3conf" value="base/a3servers5.http.xml"/>
      <param name="jvmargs" value="-Dbounce=1000"/>
    </antcall>
  </target>

  <!-- Test forwarding of expired notification with different networks -->
  <target name="test18.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test18"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="test18.http.base" depends="init.a3props,compile">
    <!-- 2 server, NTransaction, HttpNetwork -->
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test18"/>
      <param name="testid" value="3"/>
      <param name="a3conf" value="base/a3servers2e1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Test forwarding of expired notification within the engine -->
  <target name="test19.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test19"/>
      <param name="testid" value="test19.base"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Test notification sending during agentInitialize -->
  <target name="test20.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test20"/>
      <param name="testid" value="test20.base"/>
      <param name="a3conf" value="base/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

	<!-- Test ping-pong with numerous servers -->
  <target name="test21.base" depends="test21A.base,test21B.base"/>

  <!-- Test ping-pong with numerous servers (more than nbMaxCnx)-->
  <target name="test21A.base" depends="test21A-1.base,test21A-2.base,test21A-3.base,test21A-4.base"/>
	
  <!-- Test ping-pong with numerous servers -->
  <target name="test21A-1.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test21"/>
      <param name="testid" value="test21A-1.base"/>
      <param name="a3conf" value="base/a3servers21a.xml"/>
      <param name="nbMaxCnx" value="5"/>
      <param name="compressedFlows" value="false"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
	
  <!-- Test ping-pong with numerous servers and compressed flows -->
  <target name="test21A-2.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test21"/>
      <param name="testid" value="test21A-2.base"/>
      <param name="a3conf" value="base/a3servers21a.xml"/>
      <param name="nbMaxCnx" value="5"/>
      <param name="compressedFlows" value="true"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Test ping-pong with numerous servers, 2 domains and a router -->
  <target name="test21A-3.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test21"/>
      <param name="testid" value="test21A-3.base"/>
      <param name="a3conf" value="base/a3servers21c.xml"/>
      <param name="nbMaxCnx" value="3"/>
      <param name="compressedFlows" value="false"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

  <!-- Test ping-pong with numerous servers and compressed flows, 2 domains and a router -->
  <target name="test21A-4.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test21"/>
      <param name="testid" value="test21A-4.base"/>
      <param name="a3conf" value="base/a3servers21c.xml"/>
      <param name="nbMaxCnx" value="3"/>
      <param name="compressedFlows" value="true"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

	<!-- Test ping-pong with numerous servers (less than nbMaxCnx)-->
  <target name="test21B.base" depends="test21B-1.base,test21B-2.base,test21B-3.base,test21B-4.base"/>
	
  <!-- Test ping-pong with numerous servers -->
  <target name="test21B-1.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test21"/>
      <param name="testid" value="test21B-1.base"/>
      <param name="a3conf" value="base/a3servers21a.xml"/>
      <param name="nbMaxCnx" value="10"/>
      <param name="compressedFlows" value="false"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
	
  <!-- Test ping-pong with numerous servers and compressed flows -->
  <target name="test21B-2.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test21"/>
      <param name="testid" value="test21B-2.base"/>
      <param name="a3conf" value="base/a3servers21a.xml"/>
      <param name="nbMaxCnx" value="10"/>
      <param name="compressedFlows" value="true"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Test ping-pong with numerous servers, 2 domains and a router -->
  <target name="test21B-3.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test21"/>
      <param name="testid" value="test21B-3.base"/>
      <param name="a3conf" value="base/a3servers21c.xml"/>
      <param name="nbMaxCnx" value="6"/>
      <param name="compressedFlows" value="false"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

  <!-- Test ping-pong with numerous servers and compressed flows, 2 domains and a router -->
  <target name="test21B-4.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test21"/>
      <param name="testid" value="test21B-4.base"/>
      <param name="a3conf" value="base/a3servers21c.xml"/>
      <param name="nbMaxCnx" value="6"/>
      <param name="compressedFlows" value="true"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

	<!-- Test ping-pong with numerous servers -->
  <target name="test22.base" depends="test22A.base,test22B.base"/>

  <!-- Test ping-pong with numerous servers (more than nbMaxCnx)-->
  <target name="test22A.base" depends="test22A-1.base,test22A-2.base,test22A-3.base,test22A-4.base"/>
	
  <!-- Test ping-pong with numerous servers -->
  <target name="test22A-1.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test22"/>
      <param name="testid" value="test22A-1.base"/>
      <param name="a3conf" value="base/a3servers22a.xml"/>
      <param name="nbMaxCnx" value="5"/>
      <param name="maxMessageInFlow" value="10"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
	
  <!-- Test ping-pong with numerous servers and compressed flows -->
  <target name="test22A-2.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test22"/>
      <param name="testid" value="test22A-2.base"/>
      <param name="a3conf" value="base/a3servers22a.xml"/>
      <param name="nbMaxCnx" value="5"/>
      <param name="maxMessageInFlow" value="2"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Test ping-pong with numerous servers, 2 domains and a router -->
  <target name="test22A-3.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test22"/>
      <param name="testid" value="test22A-3.base"/>
      <param name="a3conf" value="base/a3servers22c.xml"/>
      <param name="nbMaxCnx" value="3"/>
      <param name="maxMessageInFlow" value="10"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

  <!-- Test ping-pong with numerous servers and compressed flows, 2 domains and a router -->
  <target name="test22A-4.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test22"/>
      <param name="testid" value="test22A-4.base"/>
      <param name="a3conf" value="base/a3servers22c.xml"/>
      <param name="nbMaxCnx" value="3"/>
      <param name="maxMessageInFlow" value="2"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

	<!-- Test ping-pong with numerous servers (less than nbMaxCnx)-->
  <target name="test22B.base" depends="test22B-1.base,test22B-2.base,test22B-3.base,test22B-4.base"/>
	
  <!-- Test ping-pong with numerous servers -->
  <target name="test22B-1.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test22"/>
      <param name="testid" value="test22B-1.base"/>
      <param name="a3conf" value="base/a3servers22a.xml"/>
      <param name="nbMaxCnx" value="10"/>
      <param name="maxMessageInFlow" value="10"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
	
  <!-- Test ping-pong with numerous servers and compressed flows -->
  <target name="test22B-2.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test22"/>
      <param name="testid" value="test22B-2.base"/>
      <param name="a3conf" value="base/a3servers22a.xml"/>
      <param name="nbMaxCnx" value="10"/>
      <param name="maxMessageInFlow" value="2"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Test ping-pong with numerous servers, 2 domains and a router -->
  <target name="test22B-3.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test22"/>
      <param name="testid" value="test22B-3.base"/>
      <param name="a3conf" value="base/a3servers22c.xml"/>
      <param name="nbMaxCnx" value="6"/>
      <param name="maxMessageInFlow" value="10"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

  <!-- Test ping-pong with numerous servers and compressed flows, 2 domains and a router -->
  <target name="test22B-4.base" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.base.test22"/>
      <param name="testid" value="test22B-4.base"/>
      <param name="a3conf" value="base/a3servers22c.xml"/>
      <param name="nbMaxCnx" value="6"/>
      <param name="maxMessageInFlow" value="2"/>
      <param name="jvmargs" value="-DRouter=true"/>
    </antcall>
  </target>

  <!--
     - test for real distributed test.
     -
     - a3servers1.xml -> HttpNetwork
     - a3servers2.xml -> PoolNetwork
     -->
  <target name="test.init">
    <antcall target="init.test" inheritAll="true">
      <param name="a3conf" value="test/a3servers1.xml"/>
    </antcall>
  </target>

  <target name="test.receiver" depends="init,compile,test.init">
    <java classname="a3.test.Receiver"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="0 ./s0"/>
    </java>
  </target>

  <target name="test.sender1" depends="init">
    <java classname="a3.test.Sender"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="1 ./s1"/>
    </java>
  </target>

  <target name="test.sender2" depends="init,compile,test.init">
    <java classname="a3.test.Sender"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="2 ./s2"/>
    </java>
  </target>

  <target name="test.restart1" depends="init">
    <java classname="fr.dyade.aaa.agent.AgentServer"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="1 ./s1"/>
    </java>
  </target>

  <target name="test.restart2" depends="init">
    <java classname="fr.dyade.aaa.agent.AgentServer"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="2 ./s2"/>
    </java>
  </target>

  <!--
     - test for CSSI.
     -->
  <target name="cssi.init" depends="init,compile">
    <antcall target="init.test" inheritAll="true">
      <param name="a3conf" value="cssi/a3servers.xml"/>
    </antcall>
    <mkdir dir="${test.dir}/server0"/>
    <mkdir dir="${test.dir}/server1"/>
    <mkdir dir="${test.dir}/server2"/>
  </target>

  <target name="cssi.sender" depends="init">
    <delete file="${test.dir}/server0/s0/lock"/>
    <java classname="a3.cssi.Sender"
          failonerror="no" fork="yes"
          dir="${test.dir}/server0">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="0 ./s0"/>
    </java>
  </target>

  <target name="cssi.server0" depends="init">
    <delete file="${test.dir}/server0/s0/lock"/>
    <java classname="fr.dyade.aaa.agent.AgentServer"
          failonerror="no" fork="yes"
          dir="${test.dir}/server0">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="0 ./s0"/>
    </java>
  </target>

  <target name="cssi.server1" depends="init">
    <delete file="${test.dir}/server1/s1/lock"/>
    <java classname="fr.dyade.aaa.agent.AgentServer"
          failonerror="no" fork="yes"
          dir="${test.dir}/server1">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="1 ./s1"/>
    </java>
  </target>

  <target name="cssi.server2" depends="init">
    <delete file="${test.dir}/server2/s2/lock"/>
    <java classname="fr.dyade.aaa.agent.AgentServer"
          failonerror="no" fork="yes"
          dir="${test.dir}/server2">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="2 ./s2"/>
    </java>
  </target>

  <!--
    - Scalagent middleware recovery tests
    -->

  <!--
    - Test the recovery capability (using ping-pong)
    -->
  <target name="test1.recovery" depends="test1-3.recovery"/>

  <!-- 1 domain -->
  <target name="test1-3.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test1"/>
      <param name="testid" value="3"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
    </antcall>
  </target>

  <!-- 1 domain, HttpNetwork -->
  <target name="test1.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test1"/>
      <param name="testid" value="http-a"/>
      <param name="a3conf" value="recovery/a3servers1.http.1.xml"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test1"/>
      <param name="testid" value="http-b"/>
      <param name="a3conf" value="recovery/a3servers1.http.2.xml"/>
    </antcall>
  </target>

  <target name="test2.recovery" depends="test2-1.recovery"/>

  <!-- 2 domains -->
  <target name="test2-1.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test2"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="recovery/a3servers2.xml"/>
    </antcall>
  </target>

  <!-- 3 http servers, 1! domain -->
  <target name="test2-1.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test2"/>
      <param name="testid" value="1.http"/>
      <param name="a3conf" value="recovery/a3servers3.http.xml"/>
    </antcall>
  </target>

  <!-- 3 http servers, 2 domains -->
  <target name="test2-2.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test2"/>
      <param name="testid" value="2a.http"/>
      <param name="a3conf" value="recovery/a3servers2.http.1.xml"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test2"/>
      <param name="testid" value="2b.http"/>
      <param name="a3conf" value="recovery/a3servers2.http.1.xml"/>
    </antcall>
  </target>

  <!--
    - Test various mechanism in case of failure/recovery.
    -->

  <!-- Test the agent deletion -->
  <target name="test3.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test3"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="test3.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test3"/>
      <param name="testid" value="1.http-a"/>
      <param name="a3conf" value="recovery/a3servers1.http.1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test3"/>
      <param name="testid" value="1.http-b"/>
      <param name="a3conf" value="recovery/a3servers1.http.2.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!--
    - Test the connection to a server launched after a failure.
    -->
  <target name="test4.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test4"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
      <param name="jvmargs" value="-Dpause=15000"/>
    </antcall>
  </target>

  <target name="test4.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test4"/>
      <param name="testid" value="1.http-a"/>
      <param name="a3conf" value="recovery/a3servers1.http.1.xml"/>
      <param name="jvmargs" value="-Dpause=15000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test4"/>
      <param name="testid" value="1.http-b"/>
      <param name="a3conf" value="recovery/a3servers1.http.2.xml"/>
      <param name="jvmargs" value="-Dpause=15000"/>
    </antcall>
  </target>

  <!--
    - Test the connection to a server launched after a big time.
    -->
  <target name="test5.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test5"/>
      <param name="testid" value="test5.recovery"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
      <param name="jvmargs" value="-Dpause=20000"/>
    </antcall>
  </target>

  <target name="test5.http.recovery" depends="test5.http-a.recovery,test5.http-b.recovery"/>

  <target name="test5.http-a.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test5"/>
      <param name="testid" value="test5.http-a.recovery"/>
      <param name="a3conf" value="recovery/a3servers1.http.1.xml"/>
      <param name="jvmargs" value="-Dpause=20000"/>
    </antcall>
  </target>

  <target name="test5.http-b.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test5"/>
      <param name="testid" value="test5.http-b.recovery"/>
      <param name="a3conf" value="recovery/a3servers1.http.2.xml"/>
      <param name="jvmargs" value="-Dpause=20000"/>
    </antcall>
  </target>

  <!--
    - Test the recovery capability (using ping-pong)
    -->
  <target name="test6.recovery" depends="test6-1.recovery"/>

  <target name="test6-1.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test6"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!--
    - Test the connection to a server launched after a failure
    - without persistancy.
    -->
  <target name="test7.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test7"/>
      <param name="testid" value="1"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
      <param name="jvmargs" value="-Dpause=15000"/>
    </antcall>
  </target>

  <target name="test7-2a.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test7"/>
      <param name="testid" value="2a"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="a3conf" value="recovery/a3servers1e1.xml"/>
      <param name="jvmargs" value="-Dpause=15000"/>
    </antcall>
  </target>

  <target name="test7-2b.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test7"/>
      <param name="testid" value="2b"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="a3conf" value="recovery/a3servers1e2.xml"/>
      <param name="jvmargs" value="-Dpause=15000"/>
    </antcall>
  </target>

  <!--
    - Test the connection to a double Ping/Pong in case of failure.
    -->
  <target name="test8.recovery" depends="test8-1.recovery,test8-2.recovery"/>

  <!-- 1 domain -->
  <target name="test8-1.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test8"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
    </antcall>
  </target>

  <target name="test8-2.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test8"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="recovery/a3servers3.xml"/>
    </antcall>
  </target>

  <!-- 3 servers HttpNetwork, 1! domain -->
  <target name="test8-1.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test8"/>
      <param name="testid" value="1a.http"/>
      <param name="a3conf" value="recovery/a3servers2.http.xml"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test8"/>
      <param name="testid" value="1b.http"/>
      <param name="a3conf" value="recovery/a3servers3.http.xml"/>
    </antcall>
  </target>

  <!-- 3 servers HttpNetwork, 2 domains -->
  <target name="test8-2.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test8"/>
      <param name="testid" value="2a.http"/>
      <param name="a3conf" value="recovery/a3servers2.http.1.xml"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test8"/>
      <param name="testid" value="2b.http"/>
      <param name="a3conf" value="recovery/a3servers2.http.2.xml"/>
    </antcall>
  </target>

  <!--
    - Test the detachable property of Notification in case of failure.
    -->
  <target name="test9.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test9"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
    </antcall>
  </target>

  <!-- 1 domain, HttpNetwork -->
  <target name="test9.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test9"/>
      <param name="testid" value="3a"/>
      <param name="a3conf" value="recovery/a3servers1.http.1.xml"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test9"/>
      <param name="testid" value="3b"/>
      <param name="a3conf" value="recovery/a3servers1.http.2.xml"/>
    </antcall>
  </target>

  <!--
    - Test the expiration property of Notification in case of failure.
    -->
  <target name="test10.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test10"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="recovery/a3servers1.xml"/>
    </antcall>
  </target>

  <!-- 1 domain, HttpNetwork -->
  <target name="test10.http.recovery" depends="test10a.http.recovery,test10b.http.recovery"/>

  <target name="test10a.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test10"/>
      <param name="testid" value="test10a.http.recovery"/>
      <param name="a3conf" value="recovery/a3servers1.http.1.xml"/>
    </antcall>
  </target>

  <target name="test10b.http.recovery" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.recovery.test10"/>
      <param name="testid" value="test10b.http.recovery"/>
      <param name="a3conf" value="recovery/a3servers1.http.2.xml"/>
    </antcall>
  </target>

  <!--
    - Simple performance tests
    -->

  <!-- A simple Agent test [Ping/Pong] -->
  <target name="test1.perf" depends="test1-1.perf,test1-2.perf,test1-3.perf"/>

  <!-- Centralized -->
  <target name="test1-1.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test1"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="perf/a3servers0.xml"/>
      <param name="jvmargs" value="-DPing=0 -DPong=0 -Dbounce=499"/>
    </antcall>
  </target>

  <!-- Distributed -->
  <target name="test1-2.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test1"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="perf/a3servers1.xml"/>
      <param name="jvmargs" value="-DPing=0 -DPong=1 -Dbounce=99"/>
    </antcall>
  </target>

  <!-- Centralized + NullTransaction -->
  <target name="test1-3.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test1"/>
      <param name="testid" value="3"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="a3conf" value="perf/a3servers0.xml"/>
      <param name="jvmargs" value="-DPing=0 -DPong=0 -Dbounce=24999"/>
    </antcall>
  </target>

  <!-- Another simple Agent test [Counter] -->
  <target name="test2.perf" depends="test2-1.perf,test2-2.perf,test2-3.perf"/>

  <!-- Centralized -->
  <target name="test2-1.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test2"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="perf/a3servers0.xml"/>
      <param name="jvmargs" value="-DRecv=0 -DSend=0 -Dbounce=99"/>
    </antcall>
  </target>

  <!-- Distributed -->
  <target name="test2-2.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test2"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="perf/a3servers1.xml"/>
      <param name="jvmargs" value="-DRecv=1 -DSend=0 -Dbounce=99"/>
    </antcall>
  </target>

  <!-- Centralized + NullTransaction -->
  <target name="test2-3.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test2"/>
      <param name="testid" value="3"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="a3conf" value="perf/a3servers0.xml"/>
      <param name="jvmargs" value="-DRecv=0 -DSend=0 -Dbounce=99"/>
    </antcall>
  </target>
	
  <!--  -->
  <target name="test4.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test4"/>
      <param name="testid" value="test4.perf"/>
      <param name="a3conf" value="perf/a3serversX.xml"/>
    	<param name="transaction" value="fr.dyade.aaa.util.NGTransaction"/>
      <param name="jvmargs" value="-DnbRound=50 -DnbMsgPerRound=1000 -Dballast=10000"/>
    </antcall>
  <!-- 
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test4"/>
      <param name="testid" value="test4.perf"/>
      <param name="a3conf" value="perf/a3serversX.xml"/>
    	<param name="transaction" value="fr.dyade.aaa.util.NGTransaction"/>
      <param name="jvmargs" value="-DnbRound=20 -DnbMsgPerRound=1000 -Dballast=5000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test4"/>
      <param name="testid" value="test4.perf"/>
      <param name="a3conf" value="perf/a3serversX.xml"/>
    	<param name="transaction" value="fr.dyade.aaa.util.NGTransaction"/>
      <param name="jvmargs" value="-DnbRound=20 -DnbMsgPerRound=1000 -Dballast=10000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test4"/>
      <param name="testid" value="test4.perf"/>
      <param name="a3conf" value="perf/a3serversX.xml"/>
    	<param name="transaction" value="fr.dyade.aaa.util.NGTransaction"/>
      <param name="jvmargs" value="-DnbRound=15 -DnbMsgPerRound=1000 -Dballast=50000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test4"/>
      <param name="testid" value="test4.perf"/>
      <param name="a3conf" value="perf/a3serversX.xml"/>
    	<param name="transaction" value="fr.dyade.aaa.util.NGTransaction"/>
      <param name="jvmargs" value="-DnbRound=10 -DnbMsgPerRound=1000 -Dballast=100000"/>
    </antcall>
    
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test4"/>
      <param name="testid" value="test4.perf"/>
      <param name="a3conf" value="perf/a3serversX.xml"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jvmargs" value="-DnbRound=10 -DnbMsgPerRound=20000 -Dballast=100000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test4"/>
      <param name="testid" value="test4.perf"/>
      <param name="a3conf" value="perf/a3serversX.xml"/>
      <param name="transaction" value="fr.dyade.aaa.util.NGTransaction"/>
      <param name="jvmargs" value="-DnbRound=10 -DnbMsgPerRound=20000 -Dballast=100000"/>
    </antcall>
 -->
  </target>

  <!-- Another Agent test [Tree] -->
  <target name="test5.perf" depends="test5-1.perf,test5-2.perf"/>

  <target name="test5-1.optit" depends="init.a3props,compile">
    <antcall target="init.test" inheritAll="true">
      <param name="a3conf" value="perf/a3servers0.xml"/>
    </antcall>
  </target>

  <!-- Centralized -->
  <target name="test5-1.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test5"/>
      <param name="testid" value="1"/>
      <param name="a3conf" value="perf/a3servers0.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- Distributed -->
  <target name="test5-2.perf" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="classname" value="a3.perf.test5"/>
      <param name="testid" value="2"/>
      <param name="a3conf" value="perf/a3servers1.xml"/>
      <param name="jvmargs" value="-DNbNode=2"/>
    </antcall>
  </target>

  <target name="httpinit">
    <antcall target="init.test" inheritAll="true">
      <param name="a3conf" value="base/a3serversX.http.xml"/>
    </antcall>
  </target>

  <target name="httpserver" depends="init,compile,httpinit">
    <java classname="a3.base.httpserver"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="0 ./s0"/>
    </java>
  </target>

  <target name="httpclient" depends="init,compile,httpinit">
    <java classname="a3.base.httpclient"
          failonerror="no" fork="yes"
          dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dcom.sun.management.jmxremote -DMXServer=com.scalagent.jmx.JMXServer"/>
      <arg line="0 ./s0"/>
    </java>
  </target>

</project>
