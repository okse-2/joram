<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>

<!DOCTYPE document SYSTEM '../../../common/dtd/objectweb.dtd'>

<document>
  <properties>
    <author email="joram-team@ow2.org">JORAM team</author>
    <title>Documentation</title>
    <filename>index.xml</filename>
    <pathtoroot>..</pathtoroot>
  </properties>

  <body>

    <s1 name="JORAM tutorials">
    
      <s2 name="Have fun using Joram on Raspberry PI with Java 8.">
      <p>Joram requires very few resources to run, this simple tutorial shows how to launch
      a Joram server on a Raspberry PI and test it.</p>
      <ul>
        <li>First you need a <a href="http://www.raspberrypi.org/">Raspberry PI</a> with Java 8, you can
        find documentation instructions to setup JDK 8 on a Raspberry Pi device
        <a href="http://jdk8.java.net/fxarmpreview/javafx-arm-developer-preview.html">here</a>.
        </li>
        <li>Second download a <a href="http://bamboo.ow2.org/artifact/JORAM-ANT/JOB1/build-latest/Releases/release/target/joram-release-5.9.1-SNAPSHOT.zip">snapshot</a>
        of Joram's distribution, then unzip it on your Raspberry PI.
        </li>
        <li>Third, follow the tutorial instructions : <a href="doc/tutorials/raspberry/raspberry.htm">here</a>.</li>
      </ul>
      </s2>
    
      <s2 name="Samples">
    
      <p>Tutorials about the samples included in the Joram distribution:</p>
      <ul>
        <li><a href="tutorials/classic/classic.htm">Classic</a> sample: this
        example simply demonstrates sending and receiving messages either on queues or topics.</li>
        <li><a href="tutorials/clusterq/clusterQ.htm">Clustered queue</a> sample: this
        example shows the use of clustered queues either for load-balancing or availability.</li>
        <li><a href="tutorials/monitoring/monitoring.htm">Monitoring destination</a> sample: this
        example shows the use of monitoring queue and topic.</li>
        <li><a href="tutorials/bridge/bridge.htm">JMS bridge destination</a> sample: this
        example shows the use of JMS bridge queue and topic. It allows interoperability between
        Joram and another JMS provider.</li>
        <li><a href="tutorials/stomp/stomp.htm">JASP: Joram Access using STOMP Protocol</a> sample: this
        sample shows the configuration of the Joram's STOMP bridge. Be careful this tutorial needs Joram 5.4.</li>
        <li><a href="tutorials/perfs/perfs.htm">Performances</a> sample: this example demonstrates the
        Joram's performances.</li>
      </ul>
			</s2>
			
      <s2 name="Joram Monitoring and Administration">
      <p>Tutorials about the Joram monitoring and administration:</p>
      <ul>
        <li><a href="tutorials/adminjmx/adminjmx.htm">JMX Administration</a>: This tutorial demonstrates
        the administration of Joram using a generic JMX console.</li>
        <li><a href="tutorials/webconsole/webconsole.htm">GWT Web Console</a>: This tutorial shows
        the use of the web administration console of Joram.</li>
      </ul>
      </s2>
			
      <s2 name="Joram's over OSGi">
      <p>First steps with Joram / OSGi: This tutorial allows to discover the dynamic extension of
      Joram capabilities and introduces the Command Line Interface (CLI) administration of Joram
      through Telnet:</p>
      <ul>
        <li><a href="tutorials/osgi/osgi1st.htm">1st steps</a>.</li>
      </ul>
      <p>Note: This tutorial uses some features of development release of Joram.</p>
      </s2>
      
      <s2 name="Joram's JMX over JMS connector">
      <p>JMX (Java Management Extensions) provides a standard framework for managing Java applications.
      It allows the use of multiple protocols to transport its requests.</p>
      <p>The Joram JMX/JMS connector allows JMX administration over JMS. It requires a single Joram server
      or cluster of servers to act as the reliable hub through which management communications will travel.
      This tutorial depicts the use of the JORAM JMX/JMS connector.</p>
      <p>The main advantages to use JORAM JMX/JMS connector for the communication protocol are:</p>
      <ul>
        <li>Decoupling between management applications and distributed JMX agents.</li>
        <li>Easy management of WAN or Cloud based applications.</li>
        <li>Federation of MBeanServer in a single view.</li>
        <li>Performance.</li>
      </ul>
      <ul>
        <li><a href="tutorials/jmxconnector/JMXConnector.htm">1st steps</a>.</li>
      </ul>
      </s2>
			
      <s2 name="Joram's configuration designer">
      <p>This tutorial introduces the design of a Joram's configuration using the Eclipse plugin:</p>
      <ul>
        <li><a href="tutorials/designer/designer1st.htm">1st steps</a>.</li>
      </ul>
      <p>Note: Currently this plugin is available in SVN.</p>
      </s2>
    </s1>
  </body>

</document> 
