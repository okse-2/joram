<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>

<!DOCTYPE document SYSTEM '../../../common/dtd/objectweb.dtd'>

<document>
  <properties>
    <author email="joram-team@objectweb.org">JORAM team</author>
    <title>JORAM road map</title>
    <filename>roadMap.xml</filename>
    <pathtoroot>..</pathtoroot>
  </properties>

  <body>

  <s1 name="Road map">
  
    <subtitle>Joram 4.0 (January 2004)</subtitle>
    <p>The move to release 4.0 will introduce:</p>
    <ul>
      <li>A universal bridge to foreign JMS providers</li>
      <li>Clustering features for Load Balancing and Fail Over</li>
      <li>A new JNDI server distributed and replicated implementation</li>
      <li>A new branch for the Joram and MOM sources: 
      <code>org.objectweb.joram</code></li>
    </ul>

    <subtitle>Joram 4.1 (1st quarter of 2004)</subtitle>
    <p>This release will provide:</p>
    <ul>
      <li>A JCA 1.5 standard Resource Adapter for plugging Joram into any
      JCA compliant platform</li>
      <li>Clustering features providing High Availability</li>
      <li>Optimised connections for collocated clients and servers</li>
    </ul>

  </s1>

  <s1 name="Call for contributions">

    <subtitle>C/C++ client sample</subtitle>
    <p>The usual communication protocol between a client application and
    a Joram server is based on TCP and Java serialization. Since release
    3.4, a new protocol based on SOAP has been added. It gets rid of the 
    Java serialization, and thus opens the door to connecting non Java
    applications.</p>
    <p>In order to exhibit Joram as a true MOM allowing to interconnect 
    heterogenous applications, a sample involving a C or C++ client
    would be a great contribution!</p>

    <subtitle>Database message persistence</subtitle>
    <p>The Joram persistence is a complex mechanism involving internal
    transactions, for guaranteeing atomicity and coherence, and which support
    is file based. This mechanism has been improved in the 3.5 release, 
    allowing better performances and flexibility.</p>
    <p>The next evolution could be to persist the messages in a database rather
    than on file.</p>

  </s1>

  </body>

</document>
