<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>

<!DOCTYPE document SYSTEM '../../../common/dtd/objectweb.dtd'>

<document>
  <properties>
    <author email="joram-team@ow2.org">JORAM team</author>
    <title>JORAM road map</title>
    <filename>roadMap.xml</filename>
    <pathtoroot>..</pathtoroot>
  </properties>

  <body>

  <s1 name="Work in progress">

		<s2 name="OSGi support and administration tool">
    <p>Joram is now designed with an OSGi<sup>TM</sup> based services architecture, this new architecture
    will allow to provide numerous new administration features:</p>
    <ul>
      <li>Web 2.0 administration console,</li>
      <li>Command Line Interface, etc.</li>
    </ul>
    <p>A Joram's architecture designer is already available as Eclipse plugin, currently it allows architecture
    design and production of configuration files. In near future, it will allow to configure, deploy, monitor and
    control large Joram's configuration.</p>
    </s2>
    
		<s2 name="A Web 2.0 administration console for Joram.">
    <p>The goal of this project is to implement a graphical user interface to manage the Joram provider
    and access Joram administration and monitoring from Web browsers. This Web console would be implemented
    with recent Web 2.0 technologies like Google Web Toolkit (GWT).</p>
    <p>First release of this Web console is expected for end of second quarter of year 2010.</p>
    </s2>
    
    <s2 name="AMQP">
    <p>Thank's to third party users, the Joram team should announce soon the support of AMQP in Joram.
    The Advanced Message Queuing Protocol (AMQP) is an open standard application layer protocol for messaging
		middleware, an AMQP messaging infrastructure will be open, platform agnostic and interoperable. Defining
		an AMQP entry point for the Joram server will allow the use of the MOM through multiples clients, languages
		and platform.</p>
		<p>An implementation of AMQP v0.9.1 is already available, a work will be planned when AMQP 1.0 will be
		announced.</p>
    </s2>

  </s1>

  <s1 name="Extensions planned">
  
		<s2 name="A Shell bundle dedicated to Joram administration.">
    <p>Since release 5.3 Joram is now designed with an OSGi based services architecture to provide a
    dynamically adaptable messaging server.</p>
		<p>The OSGi Alliance has defined a specification for "Command line interface" (known as RFC 147)
		allowing creation of extensible shell service.</p>
		<p>The goal of this project is to provide a dedicated Command Line Interface (CLI) for Joram provider.
		This CLI will define command for Joram administration and monitoring tasks, it should provide multiple
		user interfaces: textual, graphical, etc.</p>
    </s2>

		<s2 name="Joram access with the SAM framework.">
		<p>The main objective of the SAM extension is to open up the messaging infrastructure to the
		PHP scripting environment by providing an API that allows the most common and simple messaging
		operations to be accomplished with a minimal investment.</p>
		<p>We aim to offer a JORAM connection factory for SAM allowing a simple and convenient use of
		JORAM with PHP scripts. </p>
    </s2>

  </s1>

  <s1 name="In project..">
    
		<s2 name="An Hyperic MQ plugin for Joram.">
    <p>Hyperic HQ is a popular open source monitoring software designed to manage web applications and
		infrastructure. Hyperic defines a plugin framework as the basis for providing resource-specific
		functionality (monitoring and control features for each managed resource type are provided by a
		plugin).</p>
		<p>Hyperic is shipped with over 70 resource plugins, we aim to define a Joram plugin allowing the
		discovery of Joram's servers, monitoring and alert, as well as diagnostic.</p>
    </s2>
  
		<s2 name="Deploying JMS components on Google Android.">
    <p>Android is a software stack for mobile devices, the Android SDK provides the tools and APIs necessary to
		develop Java applications that run on Android-powered devices. Joram defines a specific client library allowing
		J2ME applications to access the JORAM platform in a JMS 1.1 "way". The goal of this project is to define an
		Android component allowing the use of Joram/JMS API on Android-powered devices.</p>
    </s2>
    
    <s2 name="Security model">
    <p>This project aims to define a new security model for Joram with authentication based on JAAS LoginModule
    and User/Role access control rights.</p>
    </s2>
    
  </s1>

  <s1 name="Call for contributions">

		<p>If you have interest for any subject around Joram, you are welcome in the team.</p>
		
    <s2 name="Tutorials and documentation">
    <p>If you wish to contribute a translation, feel free to contact us.</p>
    </s2>

  </s1>

  </body>

</document>
