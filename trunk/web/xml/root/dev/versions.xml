<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>

<!DOCTYPE document SYSTEM '../../../common/dtd/objectweb.dtd'>

<document>
  <properties>
    <author email="joram-team@objectweb.org">joram-team</author>
    <title>Version information</title>
    <filename>versions.xml</filename>
    <pathtoroot>..</pathtoroot>
  </properties>

  <body>

    <s1 name="Information on the current version">
      <s2 name="Bugs">
      <ul>
      <li>MessageProducers synchronized with the destinations, found by
          <a href="http://www.objectweb.org/wws/arc/joram/2002-06/msg00024.html">
          Jan Kester</a>.
          This incorrect behaviour is encountered in distributed
          configurations, when a producer client is connected to a server and
          produces a message destinated to a destination located on an other
          server. If this latest server is down, the producer will block
          because of a synchronous call to the destination to check the access
          permission of the producer. The fix involves dead message queues and
          is not available yet.</li>
      <li>Messages never delivered in the case of an incorrect listener
          removal, found by
          <a href="http://www.objectweb.org/wws/arc/joram/2002-07/msg00012.html">
          Gerald Schröder</a>.
          When a listener is removed client side (by calling
          setMessageListener(null)), messages that reach the connection are
          denied. However, if the connection is stopped, the message are stored
          server side until it is started again. If the connection is never
          started, and also never closed, the messages are kept there for ever,
          and thus never delivered. The fix hasn't been submitted yet.</li>
      <li>Incorrect BytesMessage and StreamMessage implementations, found by
          <a href="http://www.objectweb.org/wws/arc/joram/2002-07/msg00021.html">
          Mark Trumpler</a>.
          BytesMessage and StreamMessage were wrongly behaving in the case of
          multiple sendings, modified or not. Also, their readBytes(...)
          methods were wrong. The fix has been submitted in the CVS
          distribution, in the fr.dyade.aaa.joram package.</li>
      </ul>
      </s2>
    </s1>

    <s1 name="What's up for the next version?">
      <s2 name="New features">
      <ul>
      <li>Dead message queue: a dead message queue is a queue deployed on a server and getting
          all the undeliverable messages this server deals with. Messages might be seen as
          undeliverable because they were sent on a non accessible destination or because they
          are constantly denied when consumed.</li>
      <li>Hierarchical topic: according to the JMS specification topics might have a hierarchical
          structure allowing clients to subscribe or publish to given subtopics. On top of that
          Joram's hierarchical topic will be able to be distributed among many servers.</li>
      </ul>
      </s2>
      <s2 name="Enhancements">
      <p>In order to prevent a Joram platform to be overloaded by a heavily producing client, the
         next version will provide a flow control mechanism.</p>
      </s2>
    </s1>

  </body>

</document>
