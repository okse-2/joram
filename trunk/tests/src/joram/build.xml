<?xml version="1.0"?>

<!DOCTYPE project [
    <!ENTITY common SYSTEM "../common.xml">
]>

<project default="tests.all" basedir=".">
  <!-- Includes generic stuff -->
  &common;

  <target name="init.src">
    <!-- Tests specific sources set -->
    <patternset id="specific">
      <include name="joram/**/*.java"/>
    	<exclude name="joram/studycase/**/*.java"/>
    </patternset>
  </target>

  <target name="tests.all"
           description=" --> launch all joram tests">
     <ant dir="." antfile="build.xml" target="tests.noperf.all"/>
     <ant dir="." antfile="build.xml" target="tests.perf"/>
   </target>
  
  <target name="tests.noperf.all.osgi">
    <property name="SCAdminClass" value="framework.SCAdminOSGi"/>
    <property name="isOSGi" value="true"/>
	<antcall target="tests.noperf.all" />
  </target>
    
  <target name="tests.noperf.all"
          description=" --> launch all no perf joram tests">
    <antcall target="tests.base"/>
    <antcall target="tests.recovery"/>
    <antcall target="tests.dist"/>
    <antcall target="tests.admin"/>
    <antcall target="tests.client"/>
    <antcall target="tests.connection"/>
    <antcall target="tests.local"/>
    <antcall target="tests.dursub"/>
    <antcall target="tests.tcp"/>
    <antcall target="tests.reconf"/>
    <antcall target="tests.noreg"/>
    <antcall target="tests.xa"/>
    <antcall target="tests.bridge.jms"/>
    <antcall target="tests.bridge.amqp"/>
    <antcall target="tests.schedqueue"/>
    <antcall target="tests.clusterTopic"/>
    <antcall target="tests.clusterQueue"/>
    <antcall target="tests.hierarchical"/>
    <antcall target="tests.ssl"/>
    <antcall target="tests.jca"/>
    <antcall target="tests.dmq"/>
    <antcall target="tests.ttl"/>
    <antcall target="tests.sub"/>
    <antcall target="tests.monitoring"/>
    <antcall target="tests.collector"/>
  	<antcall target="tests.interceptors"/>
    <antcall target="tests.distribution"/>
  </target>
  
  <target name="custom.tests.bamboo"
          description=" --> custom selection of tests to run on bamboo (excludes dist, reconf, bridge, perf)">
    <property name="SCAdminClass" value="framework.SCAdminOSGi"/>
    <property name="isOSGi" value="true"/>
    <antcall target="tests.base"/>
    <antcall target="tests.recovery"/>
    <antcall target="tests.admin"/>
    <antcall target="tests.client"/>
    <antcall target="tests.connection"/>
    <antcall target="tests.local"/>
    <antcall target="tests.dursub"/>
    <antcall target="tests.tcp"/>
    <antcall target="tests.noreg"/>
    <antcall target="tests.xa"/>
    <antcall target="tests.bridge.new"/>
    <antcall target="tests.schedqueue"/>
    <antcall target="tests.clusterTopic"/>
    <antcall target="tests.clusterQueue"/>
    <antcall target="tests.hierarchical"/>
    <antcall target="tests.ssl"/>
    <antcall target="tests.jca"/>
    <antcall target="tests.dmq"/>
    <antcall target="tests.ttl"/>
    <antcall target="tests.sub"/>
    <antcall target="tests.monitoring"/>
    <antcall target="tests.collector"/>
  	<antcall target="tests.interceptors"/>
    <antcall target="tests.distribution"/>
  </target>

	  <target name="custom.tests.vtest"
	          description=" --> custom selection of tests to run on vtest (excludes dist, reconf, bridge, perf)">
	    <property name="SCAdminClass" value="framework.SCAdminOSGi"/>
	    <property name="isOSGi" value="true"/>
	    <antcall target="tests.base"/>
	    <antcall target="tests.recovery"/>
	    <antcall target="tests.admin"/>
	    <antcall target="tests.client"/>
	    <antcall target="tests.connection"/>
	    <antcall target="tests.local"/>
	    <antcall target="tests.dursub"/>
	    <antcall target="tests.tcp"/>
	    <antcall target="tests.noreg"/>
	    <antcall target="tests.xa"/>
	    <antcall target="tests.bridge.new"/>
	    <antcall target="tests.schedqueue"/>
	    <antcall target="tests.clusterTopic"/>
	    <antcall target="tests.clusterQueue"/>
	    <antcall target="tests.hierarchical"/>
	    <antcall target="tests.ssl"/>
	    <antcall target="tests.jca"/>
	    <antcall target="tests.dmq"/>
	    <antcall target="tests.ttl"/>
	    <antcall target="tests.sub"/>
	    <antcall target="tests.monitoring"/>
	    <antcall target="tests.collector"/>
	  	<antcall target="tests.interceptors"/>
	    <antcall target="tests.distribution"/>
	  </target>
	
	<target name="tests.base"
  				description=" --> launch all base tests">
    <antcall target="tests.messages"/>
    <antcall target="tests.property"/>
    <antcall target="tests.selector"/>
    <antcall target="tests.temporary"/>
    <antcall target="tests.ack"/>
    <antcall target="base.test_Brows_Q"/>
    <antcall target="base.test_MsgList_T"/>
    <antcall target="base.test_Exp_Q"/>
    <antcall target="base.test_Multi_Q"/>
    <antcall target="tests.transacted"/>
    <antcall target="tests.exceptionlistener"/>
	</target>
  
  <target name="tests.alias"
          description=" --> launch all alias tests">
    <antcall target="alias.AliasTestQ"/>
    <antcall target="alias.AliasTestT"/>
    <antcall target="alias.AliasTestQ2.simple"/>
    <antcall target="alias.AliasTestQ2.pool"/>
  </target>
		
  <target name="tests.messages"
          description=" --> launch all messages tests">
    <antcall target="base.test_Q_M"/>
    <antcall target="base.test_T_M"/>
    <antcall target="base.test_Q_MText"/>
    <antcall target="base.test_T_MText"/>
    <antcall target="base.test_Q_MObj"/>
    <antcall target="base.test_Q_MObjNull"/>
    <antcall target="base.test_Q_MObjBA"/>
    <antcall target="base.test_T_MObj"/>
    <antcall target="base.test_T_MObjNull"/>
    <antcall target="base.test_T_MObjBA"/>
    <antcall target="base.test_Q_MByte"/>
    <antcall target="base.test_T_MByte"/>
    <antcall target="base.test_Q_MMap"/>
    <antcall target="base.test_T_MMap"/>
    <antcall target="base.test_Q_MStream"/>
    <antcall target="base.test_T_MStream"/>
    <antcall target="base.test_DMQ_Body"/>
  </target>

  <target name="tests.property"
          description=" --> launch all properties tests">
    <antcall target="base.test_property_Q"/>
    <antcall target="base.test_property_T"/>
  </target>

  <target name="tests.selector"
          description=" --> launch all selectors tests">
    <antcall target="base.test_Selector_Q"/>
    <antcall target="base.test_Selector_T"/>
  </target>

  <target name="tests.temporary"
          description=" --> launch all temporary tests">
    <antcall target="base.test_Temp_Q"/>
    <antcall target="base.test_Temp_T"/>
    <antcall target="base.test_Temp_T2"/>
  </target>

  <target name="tests.ack"
          description=" --> launch all acknowledge tests">
    <antcall target="base.test_CAck1_Q"/>
    <antcall target="base.test_CAck1_T"/>
    <antcall target="base.test_CAck2_Q"/>
    <antcall target="base.test_CAck2_T"/>
    <antcall target="base.test_CAck3_Q"/>
  </target>

  <target name="tests.transacted"
          description=" --> launch all transacted tests">
    <antcall target="base.test_Trans_Q"/>
    <antcall target="base.test_Trans_Q2"/>
    <antcall target="base.test_Trans_Q3"/>
    <antcall target="base.test_Trans_T"/>
  </target>

  <target name="tests.exceptionlistener" description=" --> launch all exceptionlistener tests">
    <antcall target="base.test_ExcpList_Q"/>
    <antcall target="base.test_ExcpList_T"/>
	<antcall target="base.test_Exceptions"/>
  </target>

  <target name="tests.recovery"
          description=" --> launch all recovery tests">
    <antcall target="recovery.test1"/>
    <antcall target="recovery.test2"/>
    <antcall target="recovery.test3"/>
    <antcall target="recovery.test4"/>
    <antcall target="recovery.test5"/>
    <antcall target="recovery.reliable-test"/>
    <antcall target="recovery.test6"/>
    <antcall target="recovery.test7"/>
    <antcall target="recovery.test8"/>
    <antcall target="recovery.test9"/>
    <antcall target="recovery.test10"/>
  </target>

  <target name="tests.dist"
          description=" --> launch all distributed tests">
    <antcall target="dist.test1"/>
    <antcall target="dist.test2"/>
    <antcall target="dist.test3"/>
    <antcall target="dist.test4"/>
    <antcall target="dist.test5"/>
    <antcall target="dist.test6"/>
    <antcall target="dist.test.http"/>
  </target>

  <target name="tests.client"
          description=" --> launch all client tests">
    <antcall target="client.test8"/>
    <antcall target="client.test13"/>
    <antcall target="client.test18"/>
    <antcall target="client.topic"/>
    <antcall target="client.topic2"/>
    <antcall target="client.qrmax"/>
    <antcall target="client.mcun"/>
    <antcall target="client.close1"/>
    <antcall target="client.close2"/>
    <antcall target="client.close3"/>
    <antcall target="client.close4"/>
    <antcall target="client.close5"/>
    <antcall target="client.rqueue"/>
    <antcall target="client.tmpq"/>
    <antcall target="client.recover"/>
    <antcall target="client.servexc"/>
    <antcall target="client.cnxclose"/>
    <antcall target="client.cnxclose1"/>
    <antcall target="client.cnxclose2"/>
    <antcall target="client.cnxclose3"/>
    <antcall target="client.empty"/>
    <antcall target="client.redelivery"/>
    <antcall target="client.rollback"/>
    <antcall target="client.nowait"/>
    <antcall target="client.cnxtime_1"/>
    <antcall target="client.cnxtime_1.osgi"/>
    <antcall target="client.cnxtime_2"/>
    <antcall target="client.cnxtime_2.osgi"/>
    <antcall target="client.noloss_1"/>
    <antcall target="client.noloss_2"/>
  	<antcall target="client.ClientTest25"/>
  	<antcall target="client.ClientTest26"/>
  	<antcall target="client.IndividualAcknowledge"/>
  	<antcall target="client.SyncExceptionOnFullQueue"/>
  </target>

  <target name="tests.connection"
          description=" --> launch all connection tests">
    <antcall target="connection.test1"/>
  </target>

  <target name="tests.local"
          description=" --> launch all local tests">
    <antcall target="local.test"/>
    <antcall target="local.test1"/>
    <antcall target="local.test2"/>
  </target>

  <target name="tests.dursub"
          description=" --> launch all dursub tests">
    <antcall target="dursub.test1"/>
    <antcall target="dursub.test2"/>
    <antcall target="dursub.test3"/>
    <antcall target="dursub.test4"/>
    <antcall target="dursub.test5"/>
    <antcall target="dursub.test6"/>
    <antcall target="dursub.test6.osgi"/>
  </target>

  <target name="tests.tcp"
          description=" --> launch all tcp tests">
    <antcall target="tcp.test1"/>
    <antcall target="tcp.test2"/>
    <antcall target="tcp.test3"/>
    <antcall target="tcp.test4"/>
    <antcall target="tcp.test5"/>
  </target>

  <target name="tests.reconf"
          description=" --> launch all reconf tests">
    <antcall target="reconf.test0"/>
    <antcall target="reconf.test1"/>
    <antcall target="reconf.test2"/>
    <antcall target="reconf.test3"/>
    <antcall target="reconf.test4"/>
    <antcall target="reconf.test5"/>
    <antcall target="reconf.test6"/>
  	<antcall target="reconf.test7"/>
  	<antcall target="reconf.test8"/>
  	<antcall target="reconf.test9"/>
  </target>

  <target name="tests.perf"
          description=" --> launch all perf tests">
    <antcall target="perf.test5"/>
    <antcall target="perf.test6"/>
    <antcall target="perf.test6M"/>
    <antcall target="perf.test26"/>
    <antcall target="perf.test27"/>
    <antcall target="perf.test28"/>
    <antcall target="perf.test29"/>
    <antcall target="perf.test30"/>
    <antcall target="perf.test33"/>
    <antcall target="perf.test34"/>
    <antcall target="perf.test47"/>
    <antcall target="perf.test54"/>
    <antcall target="perf.asynctest"/>
  </target>

  <target name="tests.noreg"
          description=" --> launch all noreg tests">
    <antcall target="noreg.test3"/>
    <antcall target="noreg.test4"/>
    <antcall target="noreg.test7.1"/>
    <antcall target="noreg.test7.2"/>
    <antcall target="noreg.test8"/>
    <antcall target="noreg.test9"/>
    <antcall target="noreg.test10"/>
    <antcall target="noreg.test11"/>
    <antcall target="noreg.test12"/>
    <antcall target="noreg.test13"/>
    <antcall target="noreg.test14"/>
    <antcall target="noreg.test15"/>
    <antcall target="noreg.test16"/>
    <antcall target="noreg.test17"/>
    <antcall target="noreg.test18"/>
    <antcall target="noreg.test19"/>
    <antcall target="noreg.test20"/>
    <antcall target="noreg.test21"/>
    <antcall target="noreg.test25"/>
    <antcall target="noreg.test26"/>
    <antcall target="noreg.test31"/>
    <antcall target="noreg.test32"/>
    <antcall target="noreg.test35"/>
    <antcall target="noreg.test39"/>
    <antcall target="noreg.test40"/>
    <antcall target="noreg.test41"/>
    <antcall target="noreg.test45"/>
    <antcall target="noreg.test46"/>
    <antcall target="noreg.test48"/>
    <antcall target="noreg.test49"/>
    <antcall target="noreg.test50"/>
    <antcall target="noreg.test51"/>
    <antcall target="noreg.test56"/>
    <antcall target="noreg.test58"/>
    <antcall target="noreg.test59"/>
    <antcall target="noreg.test60"/>
  	<antcall target="noreg.test61"/>
  </target>

  <target name="tests.xa"
          description=" --> launch all xa tests">
    <antcall target="xa.test1"/>
    <antcall target="xa.test2"/>
    <antcall target="xa.test3"/>
    <antcall target="xa.test4"/>
    <antcall target="xa.test5"/>
    <antcall target="xa.test6"/>
    <antcall target="xa.test7"/>
  </target>

  <target name="tests.bridge.jms" description=" --> launch all bridge tests">
    <property name="SCAdminClass" value="framework.SCAdminOSGi"/>
    <property name="isOSGi" value="true"/>
    <antcall target="tests.bridge.jms.old"/>
    <antcall target="tests.bridge.jms.old.auto"/>
    <antcall target="tests.bridge.jms.old.xa"/>
    <antcall target="tests.bridge.jms.old.auto.xa"/>
    <antcall target="tests.bridge.jms.new"/>
  </target>

  <target name="tests.bridge.jms.old" description=" --> launch all bridge tests (old framework)">
    <!--
      - AF: The reconnection works only with automatic mode !!
    <antcall target="bridge.jms.test1"/>
      -->
    <antcall target="bridge.jms.test2"/>
    <antcall target="bridge.jms.test3"/>
    <antcall target="bridge.jms.test4"/>
    <antcall target="bridge.jms.test5"/>
    <antcall target="bridge.jms.test6"/>
  </target>

  <target name="tests.bridge.jms.old.xa" description=" --> launch all bridge tests (old framework)">
    <antcall target="bridge.jms.xatest1"/>
    <antcall target="bridge.jms.xatest2"/>
    <antcall target="bridge.jms.xatest3"/>
    <antcall target="bridge.jms.xatest4"/>
    <antcall target="bridge.jms.xatest5"/>
    <antcall target="bridge.jms.xatest6"/>
  </target>

  <target name="tests.bridge.jms.old.auto" description=" --> launch all bridge tests (old framework, automatic mode)">
    <antcall target="bridge.jms.test1.1"/>
    <antcall target="bridge.jms.test2.1"/>
    <antcall target="bridge.jms.test3.1"/>
    <antcall target="bridge.jms.test4"/>
    <antcall target="bridge.jms.test5.1"/>
    <antcall target="bridge.jms.test6.1"/>
  	<antcall target="bridge.jms.test8"/>
    <antcall target="bridge.jms.testX3"/>
  </target>

  <target name="tests.bridge.jms.old.auto.xa" description=" --> launch all bridge tests (old framework, automatic mode)">
    <antcall target="bridge.jms.xatest1.1"/>
    <antcall target="bridge.jms.xatest2.1"/>
    <antcall target="bridge.jms.xatest3"/>
    <antcall target="bridge.jms.xatest4.1"/>
    <antcall target="bridge.jms.xatest5.1"/>
    <antcall target="bridge.jms.xatest6.1"/>
  </target>

  <target name="tests.bridge.jms.new" description=" --> launch all bridge tests (acquisition/distribution framework)">
    <antcall target="bridge.jms.admintest1xA"/>
    <antcall target="bridge.jms.admintest1xB"/>
    <antcall target="bridge.jms.admintest2xA"/>
    <antcall target="bridge.jms.admintest2xB"/>
    <antcall target="bridge.jms.test1x"/>
    <antcall target="bridge.jms.test2x"/>
    <antcall target="bridge.jms.test3x"/>
    <antcall target="bridge.jms.test4x"/>
    <antcall target="bridge.jms.test5x"/>
    <antcall target="bridge.jms.test6x"/>
    <antcall target="bridge.jms.test7"/>
    <antcall target="bridge.jms.test8x"/>
  	<antcall target="bridge.jms.test9x"/>
  	<antcall target="bridge.jms.test10x"/>
    <antcall target="bridge.jms.testX"/>
    <antcall target="bridge.jms.testX2"/>
  	<antcall target="bridge.jms.asynctest"/>
  	<!-- antcall target="bridge.asyncexctest"/ -->
    <antcall target="bridge.jms.acquisitiontest"/>
  	<antcall target="bridge.jms.test11x"/>
  	<antcall target="bridge.jms.test12x"/>
   	<antcall target="bridge.jms.test13x"/>
   	<antcall target="bridge.jms.test14x"/>
 </target>

  <target name="tests.schedqueue"
          description=" --> launch all schedqueue tests">
    <antcall target="schedqueue.test1"/>
    <antcall target="schedqueue.test2"/>
    <antcall target="schedqueue.test3"/>
    <antcall target="schedqueue.test4"/>
    <antcall target="schedqueue.test5"/>
  </target>

  <target name="tests.clusterTopic"
          description=" --> launch all cluster topic tests">
    <antcall target="cluster.testTAdmin"/>
    <antcall target="cluster.testT1"/>
    <antcall target="cluster.testT2"/>
    <antcall target="cluster.testT3"/>
    </target>

    <target name="tests.clusterQueue"
            description=" --> launch all cluster queue tests">
    <antcall target="cluster.testQAdmin"/>
    <antcall target="cluster.testQ1"/>
    <antcall target="cluster.testQ2"/>
    <antcall target="cluster.testQ3"/>
    <antcall target="cluster.testQ4"/>
    <antcall target="cluster.testQ5"/>
    <antcall target="cluster.testQ6"/>
    <antcall target="cluster.testQ7"/>
  </target>

  <target name="tests.hierarchical"
          description=" --> launch all hierarchical tests">
    <antcall target="hierarchical.test1"/>
  </target>

  <target name="tests.ssl"
          description=" --> launch all ssl tests">
    <antcall target="ssl.test"/>
  </target>
	
  <target name="tests.jca" description=" --> test joram connector">
    <antcall target="jca.test1"/>
    <antcall target="jca.test2"/>
  </target>

  <target name="tests.dmq"
          description=" --> launch all dmq tests">
    <antcall target="dmq.TestDmq1"/>
    <antcall target="dmq.TestDmq2"/>
    <antcall target="dmq.TestDmq3"/>
    <antcall target="dmq.TestDmq4"/>
    <antcall target="dmq.TestDmq5"/>
    <antcall target="dmq.TestDmq6"/>
    <antcall target="dmq.ChainedDMQ"/>
    <antcall target="dmq.TestDmq7"/>
  </target>

  <target name="tests.ttl"
          description=" --> launch all ttl tests">
    <antcall target="ttl.Test1_Topic"/>
    <antcall target="ttl.Test2_Queue"/>
  </target>

  <target name="tests.sub"
          description=" --> launch all sub tests">
    <antcall target="sub.Sub"/>
    <antcall target="sub.Sub2"/>
    <antcall target="sub.Sub3"/>
  	<antcall target="sub.Sub4"/>
  </target>
  
  <target name="tests.monitoring"
          description=" --> launch all monitoring tests">
    <antcall target="monitoring.TestT1"/>
    <antcall target="monitoring.TestT2"/>
  	<antcall target="monitoring.TestT3"/>
    <antcall target="monitoring.TestQ1"/>
    <antcall target="monitoring.TestQ2"/>
  	<antcall target="monitoring.TestQ3"/>
  </target>

  <target name="tests.collector"
          description=" --> launch all collector tests">
    <antcall target="collector.TestT1"/>
    <antcall target="collector.TestT2"/>
  	<antcall target="collector.TestT3"/>
  	<antcall target="collector.TestT4"/>  	
    <antcall target="collector.TestQ1"/>
    <antcall target="collector.TestQ2"/>
  	<antcall target="collector.TestQ3"/>
  	<antcall target="collector.TestQ4"/>
  	<antcall target="collector.AdminTest1"/>
  </target>

	<target name="tests.interceptors"
		      description=" --> launch all interceptors tests">
    <antcall target="interceptors.test1"/>
    <antcall target="interceptors.test2"/>
    <antcall target="interceptors.test3"/>
    <antcall target="interceptors.test4"/>
    <antcall target="interceptors.test5"/>
    <antcall target="interceptors.test6"/>
    <antcall target="interceptors.test7"/>
	<antcall target="interceptors.test_Q"/>
	<antcall target="interceptors.test_T"/>
    <antcall target="interceptors.test_Q2"/>
    <antcall target="interceptors.test_T2"/>
    <antcall target="interceptors.test_Q3"/>
    <antcall target="interceptors.test_T3"/>
    <antcall target="interceptors.test_Q4"/>
    <antcall target="interceptors.test_T4"/>
    <antcall target="interceptors.test_Q5"/>
    <antcall target="interceptors.test_T5"/>
    <antcall target="interceptors.test_Q6"/>
    <antcall target="interceptors.test_T6"/>
  </target>
  
  <target name="tests.distribution"
          description=" --> launch all distribution tests">
    <antcall target="distribution.test1"/>
    <antcall target="distribution.test2"/>
  	<antcall target="distribution.test3"/>
  </target>
	
  <target name="tests.pool"
          description=" --> launch all pool tests">
    <antcall target="pool.Test1"/>
    <antcall target="pool.Test2"/>
 	<antcall target="pool.Test3"/>
  </target>

  <!--
    - Generic test launcher
    -->
  <target name="init.test">
    <!-- Initialization of the run directory -->
    <delete dir="${test.dir}"/>
    <mkdir dir="${test.dir}"/>

    <copy file="config.properties" todir="${test.dir}"/>
    <property name="bundle.dir" location="${ship.dir}/bundle" />
    <replace file="${test.dir}/config.properties" token="@BUNDLE_DIR@" value="${bundle.dir}" />
    <replace file="${test.dir}/config.properties" token="\" value="/" />
    
    <copy file="${a3conf}" tofile="${test.dir}/a3servers.xml"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@engine@" value="${engine}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@transaction@" value="${transaction}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@network@" value="${network}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@multiCnxSync@" value="${multiCnx}"/>

    <copy file="a3debug.cfg" tofile="${test.dir}/a3debug.cfg"/>

    <available file="${joramAdmin}" type="file" 
               property="joramAdmin.available"/>
    <antcall target="cpJoramAdmin" inheritAll="true"/>
  	
  	<available file="${joramAdminExport}" type="file" 
  	           property="joramAdminExport.available"/>
  	<antcall target="cpJoramAdminExport" inheritAll="true"/>

    <available file="${jndiconf}" type="file"
               property="jndi.available"/>
    <antcall target="cpJndi" inheritAll="true"/>

    <available file="${monitoring.props}" type="file"
               property="monitoring.available"/>
    <antcall target="cpMonitoring" inheritAll="true"/>
    
  	<available file="${src.dir}/${manifest.mf}" type="file" property="test-bundle.available"/>
  	<antcall target="test-bundle" inheritAll="true"/>
  </target>

	<target name="test-bundle" if="test-bundle.available">
    <jar jarfile="${obj.dir}/test-bundle.jar" manifest="${src.dir}/${manifest.mf}">
		  <fileset dir="${obj.dir}">
		    <include name="${include.classes}"/>
      </fileset>
    </jar>
    <copy file="config-extended.properties" tofile="${test.dir}/config.properties" overwrite="true"/>
    <property name="bundle.dir" location="${ship.dir}/bundle" />
    <replace file="${test.dir}/config.properties" token="@BUNDLE_DIR@" value="${bundle.dir}" />
    <replace file="${test.dir}/config.properties" token="\" value="/" />
	</target>
  
	<target name="cpJoramAdmin" if="joramAdmin.available">
    <copy file="${joramAdmin}" tofile="${test.dir}/joramAdmin.xml"/>
  </target>

	<target name="cpJoramAdminExport" if="joramAdminExport.available">
	  <copy file="${joramAdminExport}" tofile="${test.dir}/joramAdminExport.xml"/>
	</target>
	
  <target name="cpJndi" if="jndi.available">
    <copy file="${jndiconf}" tofile="${test.dir}/jndi.properties"/>
  </target>

  <target name="cpMonitoring" if="monitoring.available">
    <copy file="${monitoring.props}" tofile="${test.dir}/monitoring.props"/>
  </target>

  <target name="init.a3props">
    <!-- Theses default properties can be overidden by param defines
      -  in specific target.
     -->
    <property name="engine" value="fr.dyade.aaa.agent.Engine"/>
    <property name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
    <property name="transaction" value="fr.dyade.aaa.ext.NGTransaction"/>
  </target>

  <target name="test.start">
    <!-- Launch test without initialization -->
    <java classname="${className}" failonerror="no" fork="yes" maxmemory="256m" dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-DSCAdminClass=${SCAdminClass} -Dfelix.dir=${felix.dir} -Dfelix.config.properties=file:config.properties -Dcom.sun.management.jmxremote -Dframework.TestCase.TestId=${testid} -Dframework.TestCase.OutFile=${report.file} ${jvmargs}"/>
      <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y"/ -->
      <arg line="${args}"/>
    </java>
  </target>

  <target name="test.run">
    <!-- Launch test with initialization: init.test + test.start -->
    <antcall target="init.test" inheritAll="true"/>
    <antcall target="test.start" inheritAll="true"/>
  </target>

  <!--  ************ init and start end *************** -->

  <target name="alias.AliasTestQ" depends="init.a3props,compile"
          description=" --> test if the message received is the same that the message sent, with two alias queues">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="alias.AliasTestQ"/>
      <param name="className" value="joram.alias.AliasTestQ"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
    
  <target name="alias.AliasTestT" depends="init.a3props,compile"
          description=" --> test if the message received is the same that the message sent, with two alias topics">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="alias.AliasTestT"/>
      <param name="className" value="joram.alias.AliasTestT"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="alias.AliasTestQ2.simple" depends="init.a3props,compile"
          description=" --> test the AliasQueue behavior, holding messages when destination is unreachable">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="alias.AliasTestQ2.simple"/>
      <param name="className" value="joram.alias.AliasTestQ2"/>
      <param name="network" value="fr.dyade.aaa.agent.SimpleNetwork"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="alias/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="alias.AliasTestQ2.pool" depends="init.a3props,compile"
          description=" --> test the AliasQueue behavior, holding messages when destination is unreachable">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="alias.AliasTestQ2.pool"/>
      <param name="className" value="joram.alias.AliasTestQ2"/>
      <param name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="alias/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_Q_M" depends="init.a3props,compile"
          description=" --> test if the message receive is the same that the message sent, with queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Q_M"/>
      <param name="className" value="joram.base.Test_Q_M"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_T_M" depends="init.a3props,compile"
          description=" --> test if the message receive is the same that the message sent, with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_T_M"/>
      <param name="className" value="joram.base.Test_T_M"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_Q_MText" depends="init.a3props,compile"
          description=" --> test if the text message receive is the same that the message sent, with queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Q_MText"/>
      <param name="className" value="joram.base.Test_Q_MText"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_T_MText" depends="init.a3props,compile"
          description=" --> test if the text message receive is the same that the message sent, with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_T_MText"/>
      <param name="className" value="joram.base.Test_T_MText"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Q_MObj" depends="init.a3props,compile"
          description=" --> test if the object message receive is the same that the message sent (use a String), with queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Q_MObj"/>
      <param name="className" value="joram.base.Test_Q_MObj"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_Q_MObjNull" depends="init.a3props,compile"
          description=" --> test if the object message receive is the same that the message sent (use a null object), with queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Q_MObjNull"/>
      <param name="className" value="joram.base.Test_Q_MObjNull"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_Q_MObjBA" depends="init.a3props,compile"
          description=" --> test if the object message receive is the same that the message sent (use a byte[]), with queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Q_MObjBA"/>
      <param name="className" value="joram.base.Test_Q_MObjBA"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_T_MObj" depends="init.a3props,compile"
          description=" --> test if the object message receive is the same that the message sent (use a String), with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_T_MObj"/>
      <param name="className" value="joram.base.Test_T_MObj"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_T_MObjNull" depends="init.a3props,compile"
          description=" --> test if the object message receive is the same that the message sent (use a null object), with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_T_MObjNull"/>
      <param name="className" value="joram.base.Test_T_MObjNull"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_T_MObjBA" depends="init.a3props,compile"
          description=" --> test if the object message receive is the same that the message sent (use a byte[]), with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_T_MObjBA"/>
      <param name="className" value="joram.base.Test_T_MObjBA"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_Q_MByte" depends="init.a3props,compile"
          description=" --> test if the byte message receive is the same that the message sent, with queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Q_MByte"/>
      <param name="className" value="joram.base.Test_Q_MByte"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_T_MByte" depends="init.a3props,compile"
          description=" --> test if the byte message receive is the same that the message sent, with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_T_MByte"/>
      <param name="className" value="joram.base.Test_T_MByte"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Q_MMap" depends="init.a3props,compile"
          description=" --> test if the Map message receive is the same that the message sent, with queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Q_MMap"/>
      <param name="className" value="joram.base.Test_Q_MMap"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_T_MMap" depends="init.a3props,compile"
          description=" --> test if the Map message receive is the same that the message sent, with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_T_MMap"/>
      <param name="className" value="joram.base.Test_T_MMap"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Q_MStream" depends="init.a3props,compile"
          description=" --> test if the Stream message receive is the same that the message sent, with queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Q_MStream"/>
      <param name="className" value="joram.base.Test_Q_MStream"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_T_MStream" depends="init.a3props,compile"
          description=" --> test if the Stream message receive is the same that the message sent, with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_T_MStream"/>
      <param name="className" value="joram.base.Test_T_MStream"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_property_Q" depends="init.a3props,compile"
          description=" --> test if the message properties are transmit with a queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_property_Q"/>
      <param name="className" value="joram.base.Test_property_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_property_T" depends="init.a3props,compile"
          description=" --> test if the message properties are transmit with a topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_property_T"/>
      <param name="className" value="joram.base.Test_property_T"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Selector_Q" depends="init.a3props,compile"
          description=" --> test the message selector with a queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Selector_Q"/>
      <param name="className" value="joram.base.Test_Selector_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Selector_T" depends="init.a3props,compile"
          description=" --> test the message selector with a topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Selector_T"/>
      <param name="className" value="joram.base.Test_Selector_T"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Temp_Q" depends="init.a3props,compile"
          description=" --> test the functioning of Temporary Queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Temp_Q"/>
      <param name="className" value="joram.base.Test_Temp_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Temp_T" depends="init.a3props,compile"
          description=" --> test the functioning of Temporary Topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Temp_T"/>
      <param name="className" value="joram.base.Test_Temp_T"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Temp_T2" depends="init.a3props,compile"
          description=" --> tests delete temporay topic when connection close">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Temp_T2"/>
      <param name="className" value="joram.base.Test_Temp_T2"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_Brows_Q" depends="init.a3props,compile"
          description=" --> test the functioning of browser with Queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Brows_Q"/>
      <param name="className" value="joram.base.Test_Brows_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>


  <target name="base.test_MsgList_T" depends="init.a3props,compile"
          description=" --> test the functioning of message listener">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_MsgList_T"/>
      <param name="className" value="joram.base.Test_MsgList_T"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_Exp_Q" depends="init.a3props,compile"
          description=" --> test the message expiration with a queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Exp_Q"/>
      <param name="className" value="joram.base.Test_Exp_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_DMQ_Body" depends="init.a3props,compile"
          description=" --> test that a message body is not delete on a Dqueue when restart server">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_DMQ_Body"/>
      <param name="className" value="joram.base.Test_DMQ_Body"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_CAck1_Q" depends="init.a3props,compile"
          description=" --> test client_acknowledgement with one message and  with a queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_CAck1_Q"/>
      <param name="className" value="joram.base.Test_CAck1_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_CAck1_T" depends="init.a3props,compile"
          description=" --> test client_acknowledgement with one message and  with a topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_CAck1_T"/>
      <param name="className" value="joram.base.Test_CAck1_T"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_CAck2_Q" depends="init.a3props,compile"
          description=" --> test client_acknowledgement with three messages, one acknowledgement and  with a queue.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_CAck2_Q"/>
      <param name="className" value="joram.base.Test_CAck2_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_CAck2_T" depends="init.a3props,compile"
          description=" --> test client_acknowledgement with three messages, one acknowledgement and with a topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_CAck2_T"/>
      <param name="className" value="joram.base.Test_CAck2_T"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_CAck3_Q" depends="init.a3props,compile"
          description=" --> test client_acknowledgement. The message is redelivred when a session is close not a consumer">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_CAck3_Q"/>
      <param name="className" value="joram.base.Test_CAck3_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="base.test_Trans_Q" depends="init.a3props,compile"
          description=" --> test transcated session method with a queue.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Trans_Q"/>
      <param name="className" value="joram.base.Test_Trans_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="base.test_Trans_Q2" depends="init.a3props,compile"
          description=" --> test transcated session method with a queue.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Trans_Q2"/>
      <param name="className" value="joram.base.Test_Trans_Q2"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="base.test_Trans_Q3" depends="init.a3props,compile"
          description=" --> test transcated session method with a queue.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Trans_Q3"/>
      <param name="className" value="joram.base.Test_Trans_Q3"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_Trans_T" depends="init.a3props,compile"
          description=" --> test transcated session method with a topic.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Trans_T"/>
      <param name="className" value="joram.base.Test_Trans_T"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_ExcpList_Q" depends="init.a3props,compile"
          description=" --> test ExceptionListener with a queue.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_ExcpList_Q"/>
      <param name="className" value="joram.base.Test_ExcpList_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="base.test_Exceptions" depends="init.a3props,compile"
          description=" --> test ExceptionListener with a queue.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Exceptions"/>
      <param name="className" value="joram.base.Test_Exceptions"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="base.test_ExcpList_T" depends="init.a3props,compile"
          description=" --> test ExceptionListener with a topic.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_ExcpList_T"/>
      <param name="className" value="joram.base.Test_ExcpList_T"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="base.test_Multi_Q" depends="init.a3props,compile"
          description=" --> check send and receive message with 500 queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="base.test_Multi_Q"/>
      <param name="className" value="joram.base.Test_Multi_Q"/>
      <param name="jndiconf" value="base/jndi.properties"/>
      <param name="a3conf" value="base/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
	
  <!-- end test base -->

  <!-- test recovery -->
  <target name="recovery.test1" depends="init.a3props,compile"
          description=" --> test recovery with queue and kill servers after send message and before receive">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Recover_1"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="recovery.test2" depends="init.a3props,compile"
          description=" --> test recovery with queue and kill server before ack all messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Recover_2"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="recovery.test3" depends="init.a3props,compile"
          description=" --> test recovery with topic and kill servers after send message and before receive">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Recover_3"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="recovery.test4" depends="init.a3props,compile"
          description=" --> test recovery with topic and kill server before ack all messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Recover_4"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <!-- Commented as transaction properties are not restored properly for now. -->
  <target name="recovery.test5" depends="init.a3props,compile"
          description=" -> Check transaction properties after a restart of the agent server.">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Recover_5"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="recovery.reliable-test" depends="init.a3props,compile"
          description=" --> Test recovery : kill server during receive">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.ReliableTest"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="recovery.test6" depends="init.a3props,compile"
          description=" --> test recovery with 2 server and a durablesubscriber.  ">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Test6"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers3.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="recovery.test7" depends="init.a3props,compile"
          description=" --> test recovery with 1 server and a durablesubscriber.">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Test7"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="recovery.test8"
          description=" --> test the DMQ recovery">
    <antcall target="recovery.test8-1"/>
    <antcall target="recovery.test8-2"/>
    <antcall target="recovery.test8-3"/>
  </target>

  <target name="recovery.test8-1" depends="init.a3props,compile"
          description=" --> test  the DMQ recovery">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Test8"/>
      <param name="testid" value="recovery.test8-1"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers3.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="recovery.test8-2" depends="init.a3props,compile"
          description=" --> test the DMQ recovery. DMQ is on other server">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Test8_2"/>
      <param name="testid" value="recovery.test8-2"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers3.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="recovery.test8-3" depends="init.a3props,compile"
          description=" --> test the DMQ recovery">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Test8_3"/>
      <param name="testid" value="recovery.test8-3"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers3.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="recovery.test9">
    <antcall target="recovery.test9-1"/>
    <antcall target="recovery.test9-2"/>
  </target>

  <target name="recovery.test9-1" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Test9"/>
      <param name="testid" value="recovery.test9-1"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers4.xml"/>
      <param name="jvmargs" value="-DMsgSize=10240"/>
    </antcall>
  </target>

  <target name="recovery.test9-2" depends="init.a3props,compile"
          description=" --> test recovery with several big message">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Test9_2"/>
      <param name="testid" value="recovery.test9-2"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers4.xml"/>
      <param name="jvmargs" value="-DMsgSize=10240"/>
    </antcall>
  </target>

  <target name="recovery.test10" depends="init.a3props,compile"
          description=" --> test ..">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.recovery.Test10"/>
      <param name="testid" value="recovery.test10"/>
      <param name="jndiconf" value="recovery/jndi.properties"/>
      <param name="a3conf" value="recovery/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- end test recovery -->

  <!-- test distributed -->

  <target name="dist.test1" depends="init.a3props,compile"
          description=" --> test distributed with 2 serveurs and queue">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.distrib.Distrib_2serv"/>
      <param name="testid" value="dist.test1"/>
      <param name="jndiconf" value="distrib/jndi.properties"/>
      <param name="a3conf" value="distrib/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dist.test2" depends="init.a3props,compile"
          description=" --> test distributed with 3 serveurs and queue">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.distrib.Distrib_3serv"/>
      <param name="testid" value="dist.test2"/>
      <param name="jndiconf" value="distrib/jndi.properties"/>
      <param name="a3conf" value="distrib/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dist.test3" depends="init.a3props,compile"
          description=" --> test distributed with 2 serveurs and topic">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.distrib.Distrib_2serv_T"/>
      <param name="testid" value="dist.test3"/>
      <param name="jndiconf" value="distrib/jndi.properties"/>
      <param name="a3conf" value="distrib/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dist.test4" depends="init.a3props,compile"
          description=" --> test distributed with 3 serveurs and topic">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.distrib.Distrib_3serv_T"/>
      <param name="testid" value="dist.test4"/>
      <param name="jndiconf" value="distrib/jndi.properties"/>
      <param name="a3conf" value="distrib/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="dist.test5" depends="init.a3props,compile"
          description=" --> test distributed with 2 serveurs, a queue and a bad network">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.distrib.Distrib_2serv_BadNetwork"/>
      <param name="testid" value="dist.test5"/>
      <param name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="jndiconf" value="distrib/jndi.properties"/>
      <param name="a3conf" value="distrib/a3servers2.xml"/>
      <param name="jvmargs" value="-DNbRound=1000 -DNbMsgPerRound=100"/>
      <param name="manifest.mf" value="utils/osgi/manifest.mf"/>
      <param name="include.classes" value="utils/*.class"/>
    </antcall>
  </target>
  
  <target name="dist.test6" depends="init.a3props,compile"
          description=" --> test distributed with 2 serveurs, a topic and a bad network">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.distrib.Distrib_2serv_T_BadNetwork"/>
      <param name="testid" value="dist.test6"/>
      <param name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="jndiconf" value="distrib/jndi.properties"/>
      <param name="a3conf" value="distrib/a3servers2.xml"/>
      <param name="jvmargs" value="-DNbRound=1000 -DNbMsgPerRound=100"/>
      <param name="manifest.mf" value="utils/osgi/manifest.mf"/>
      <param name="include.classes" value="utils/*.class"/>
    </antcall>
  </target>
  
  <target name="dist.test.http" depends="init.a3props,compile"
          description=" --> test distributed with 2 serveurs, a topic and an http network">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.distrib.Distrib_2serv_T_Http"/>
      <param name="testid" value="dist.test.http"/>
      <param name="jndiconf" value="distrib/jndi.properties"/>
      <param name="a3conf" value="distrib/a3servers.http.xml"/>
      <param name="jvmargs" value="-DNbRound=10 -DNbMsgPerRound=1"/>
    </antcall>
  </target>
  
  <target name="dist.test.http.long" depends="init.a3props,compile"
          description=" --> test distributed with 2 serveurs, a topic and an http network">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.distrib.Distrib_2serv_T_Http"/>
      <param name="testid" value="dist.test.http.long"/>
      <param name="jndiconf" value="distrib/jndi.properties"/>
      <param name="a3conf" value="distrib/a3servers.http.xml"/>
      <param name="jvmargs" value="-DNbRound=100 -DNbMsgPerRound=1"/>
    </antcall>
  </target>

  <!-- end test distributed -->

  <!-- test admin -->

  <target name="tests.admin" depends="admin.test1,admin.test2,admin.test3,admin.test4,admin.test5,admin.test6,admin.test7,admin.test8"/>

  <target name="admin.test1" depends="init.a3props,compile"
          description=" --> test admin configuration">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.admin.AdminTest1"/>
      <param name="testid" value="admin.test1"/>
      <param name="jndiconf" value="admin/jndi.properties"/>
      <param name="a3conf" value="admin/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="admin.test2" depends="init.a3props,compile"
          description=" --> test admin configuration">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.admin.AdminTest2"/>
      <param name="testid" value="admin.test2"/>
      <param name="jndiconf" value="admin/jndi.properties"/>
      <param name="a3conf" value="admin/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="admin.test3" depends="init.a3props,compile"
          description=" --> test admin configuration">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.admin.AdminTest3"/>
      <param name="testid" value="admin.test3"/>
      <param name="jndiconf" value="admin/jndi.properties"/>
      <param name="a3conf" value="admin/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="admin.test4" depends="init.a3props,compile"
          description=" --> test admin configuration">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.admin.AdminTest4"/>
      <param name="testid" value="admin.test4"/>
      <param name="jndiconf" value="admin/jndi.properties"/>
      <param name="a3conf" value="admin/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="admin.test5" depends="init.a3props,compile"
          description=" --> test admin configuration">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.admin.AdminTest5"/>
      <param name="testid" value="admin.test5"/>
      <param name="jndiconf" value="admin/jndi.properties"/>
      <param name="a3conf" value="admin/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="admin.test6" depends="init.a3props,compile"
          description=" --> test user deletion">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.admin.AdminTest6"/>
      <param name="testid" value="admin.test6"/>
      <param name="jndiconf" value="admin/jndi.properties"/>
      <param name="a3conf" value="admin/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="admin.test7" depends="init.a3props,compile"
          description=" --> test server static invocation method">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.admin.AdminTest7"/>
      <param name="testid" value="admin.test7"/>
      <param name="jndiconf" value="admin/jndi.properties"/>
      <param name="a3conf" value="admin/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="admin.test8" depends="init.a3props,compile"
          description=" --> test admin configuration">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.admin.AdminTest8"/>
      <param name="testid" value="admin.test8"/>
      <param name="jndiconf" value="admin/jndi.properties"/>
      <param name="a3conf" value="admin/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <!-- fin test admin -->

  <!-- test client -->

  <target name="client.test8" depends="init.a3props,compile"
          description=" --> test delete temporary queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest8"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.test8"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.test13" depends="init.a3props,compile"
          description=" --> Reproduce bug in ClientSubscription">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest13"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.test13"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.test18" depends="init.a3props,compile"
          description=" --> Checks that a message listener can send messages ">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest18"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.test18"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.mcun" depends="init.a3props,compile"
          description=" --> concurrent close consumer and a consumer listener">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.MsgConsUnsubscribe"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.mcun"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.topic" depends="init.a3props,compile"
          description=" --> send 100000 messages ans receive it,  test memory leak">
    <antcall target="init.test" inheritAll="true">
        <param name="a3conf" value="client/a3servers.xml"/>
        <param name="jndiconf" value="client/jndi.properties"/>
    </antcall>

    <parallel>
      <antcall target="test.start" inheritAll="true">
        <param name="className" value="joram.client.TopicPublisher"/>
        <param name="jvmargs" value=""/>
        <param name="args" value=""/>
      </antcall>
      <antcall target="test.start" inheritAll="true">
        <param name="className" value="joram.client.TopicListener"/>
        <param name="jvmargs" value=""/>
        <param name="args" value=""/>
      </antcall>
    </parallel>
  </target>

  <target name="client.topic2" depends="init.a3props,compile"
          description=" --> send message during 60s and receive it with 2 consumer, test memory leak">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest23"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.topic2"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.qrmax" depends="init.a3props,compile"
          description=" --> configure queueMessageReadMax that the consumer receive more message with one request">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.QueueReadMaxTest"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.qrmax"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.close1" depends="init.a3props,compile"
          description=" --> test close connection">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ConnectionClose"/>
      <param name="testid" value="client.close1"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.close1"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.close4" depends="init.a3props,compile"
          description=" --> test close connection with a exceptionlistener">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ConnectionClose4"/>
      <param name="testid" value="client.close4"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.close4"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.close3" depends="init.a3props,compile"
          description=" --> producer send messages when kill server.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ConnectionClose3"/>
      <param name="testid" value="client.close3"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.close3"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.close2" depends="init.a3props,compile"
          description=" --> producer send messages when close the session.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ConnectionClose2"/>
      <param name="testid" value="client.close2"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.close2"/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
	<target name="client.close5" depends="init.a3props,compile"
	          description=" --> producer send messages when kill server (interceptor).">
	    <antcall target="test.run" inheritAll="true">
	      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
	      <param name="className" value="joram.client.ConnectionClose5"/>
	      <param name="testid" value="client.close5"/>
	      <param name="jndiconf" value="client/jndi.properties"/>
	      <param name="a3conf" value="client/a3servers.xml"/>
	    	<param name="jvmargs" value="-Dosgi.shell.telnet.port=7890"/>
	      <param name="args" value=""/>
	    	<param name="manifest.mf" value="joram/client/manifest.mf"/>
	    	<param name="include.classes" value="joram/client/Exit*.class"/>
	    </antcall>
	  </target>

  <target name="client.test5" depends="init.a3props,compile"
          description=" --> three tests, an anticipated connection, connection stop,  connection close  .">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest"/>
      <param name="testid" value="client.test5"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.test5"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.rqueue" depends="init.a3props,compile"
          description=" --> closing a message consumer or connection must clean the receive requests from the queue.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest10"/>
      <param name="testid" value="client.rqueue"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.rqueue"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.tmpq" depends="init.a3props,compile"
          description=" --> To close a tmpQueue, close consumer attach. There is exception when send to invalid queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest6"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.tmpq"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.recover" depends="init.a3props,compile"
          description=" --> Session recover from a message listener.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest5"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.recover"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.servexc" depends="init.a3props,compile"
          description=" --> kill a server and try to receive, there is a exception">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest4"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.servexc"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.cnxclose1" depends="init.a3props,compile"
          description=" --> try to receive when closing connection">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest3"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.cnxclose1"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.cnxclose3" depends="init.a3props,compile"
          description=" --> try to receive 1)when closing connection, 2)when closing a session, 3) when closing consumer">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest2"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.cnxclose3"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.cnxclose2" depends="init.a3props,compile"
          description=" --> try to receive 1)when closing consumer, 2)when closing a session">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest19"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.cnxclose2"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.cnxclose" depends="init.a3props,compile"
          description=" --> Test connection closure diagnostic.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest22"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
      <param name="testid" value="client.cnxclose"/>
    </antcall>
  </target>

  <target name="client.empty" depends="init.a3props,compile"
          description=" --> Check that sending an empty ObjectMessage leads to receiving an ObjectMessage">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest24"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.empty"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.redelivery" depends="init.a3props,compile"
          description=" --> when a consumer abord receive, the message receive is redelivred">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest21"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.redelivery"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.ClientTest25" depends="init.a3props,compile"
          description=" --> test the redelivered message value.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest25"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.ClientTest25"/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="client.ClientTest26" depends="init.a3props,compile"
          description=" --> test the redelivered message value after recover.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest26"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.ClientTest26"/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="client.SyncExceptionOnFullQueue" depends="init.a3props,compile"
          description=" --> test exception on send on full Queue.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.SyncExceptionOnFullQueue"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.SyncExceptionOnFullQueue"/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="client.IndividualAcknowledge" depends="init.a3props,compile"
          description=" --> test the individual ack.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.IndividualAcknowledge"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.IndividualAcknowledge"/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="client.rollback" depends="init.a3props,compile"
          description=" --> test rollback : 1) when closing consumer, 2) when closing session, 3) when closing connection">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest20"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.rollback"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.nowait" depends="init.a3props,compile"
          description=" --> receiveNoWait must return null if the connection is not started">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest17"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="client.nowait"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.cnxtime_1" depends="init.a3props,compile" unless="isOSGi"
          description=" --> when kill client with connectingtimer, context is destroy after connectingtimer">
    <antcall target="init.test" inheritAll="true">
        <param name="a3conf" value="client/a3servers.xml"/>
    </antcall>

    <parallel>
      <java classname="fr.dyade.aaa.agent.AgentServer" failonerror="no" fork="yes" dir="${test.dir}">
        <classpath path="${project.class.path}"/>
        <jvmarg line="-Dcom.sun.management.jmxremote"/>
        <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y"/ -->
        <arg line="0 ./s0"/>
      </java>

      <sequential>
        <sleep seconds="1"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.client.ClientTest16"/>
          <param name="jvmargs" value=""/>
          <param name="args" value=""/>
        </antcall>
        <sleep seconds="12"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.client.ClientTest16_2"/>
          <param name="jvmargs" value="-Dosgi.shell.telnet.port=7890"/>
          <param name="args" value=""/>
        </antcall>
      </sequential>
    </parallel>
  </target>

  <target name="client.cnxtime_1.osgi" depends="init.a3props,compile" if="isOSGi"
          description=" --> when kill client with connectingtimer, context is destroy after connectingtimer">
    <antcall target="init.test" inheritAll="true">
        <param name="a3conf" value="client/a3servers.xml"/>
    </antcall>

    <parallel>
      <java classname="org.apache.felix.main.Main" failonerror="no" fork="yes" dir="${test.dir}">
        <classpath path="${felix.class.path}"/>
        <jvmarg line="-Dosgi.shell.telnet.port=16010 -Dfelix.config.properties=file:config.properties -Dcom.sun.management.jmxremote"/>
        <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y"/ -->
        <arg line="0 ./s0"/>
      </java>

      <sequential>
        <sleep seconds="1"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.client.ClientTest16"/>
          <param name="jvmargs" value=""/>
          <param name="args" value=""/>
        </antcall>
        <sleep seconds="10"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.client.ClientTest16_2"/>
          <param name="jvmargs" value="-Dosgi.shell.telnet.port=16010"/>
          <param name="args" value=""/>
        </antcall>
      </sequential>
    </parallel>
  </target>
  
  <target name="client.cnxtime_2" depends="init.a3props,compile" unless="isOSGi"
          description=" --> when kill client with connectingtimer, context is not destroy before connectingtimer">
    <antcall target="init.test" inheritAll="true">
        <param name="a3conf" value="client/a3servers.xml"/>
    </antcall>

    <parallel>
      <java classname="fr.dyade.aaa.agent.AgentServer" failonerror="no" fork="yes" dir="${test.dir}">
        <classpath path="${project.class.path}"/>
        <jvmarg line="-Dcom.sun.management.jmxremote"/>
        <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y"/ -->
        <arg line="0 ./s0"/>
      </java>

      <sequential>
        <sleep seconds="1"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.client.ClientTest16"/>
          <param name="jvmargs" value=""/>
          <param name="args" value=""/>
        </antcall>
        <sleep seconds="2"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.client.ClientTest16_2"/>
          <param name="jvmargs" value="-Dosgi.shell.telnet.port=7890"/>
          <param name="args" value=""/>
        </antcall>
      </sequential>
    </parallel>
  </target>

  <target name="client.cnxtime_2.osgi" depends="init.a3props,compile" if="isOSGi"
          description=" --> when kill client with connectingtimer, context is not destroy before connectingtimer">
    <antcall target="init.test" inheritAll="true">
        <param name="a3conf" value="client/a3servers.xml"/>
    </antcall>

    <parallel>
      <java classname="org.apache.felix.main.Main" failonerror="no" fork="yes" dir="${test.dir}">
        <classpath path="${felix.class.path}"/>
        <jvmarg line="-Dosgi.shell.telnet.port=16010 -Dfelix.config.properties=file:config.properties -Dcom.sun.management.jmxremote"/>
        <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y"/ -->
      </java>

      <sequential>
        <sleep seconds="1"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.client.ClientTest16"/>
          <param name="jvmargs" value=""/>
          <param name="args" value=""/>
        </antcall>
        <sleep seconds="2"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.client.ClientTest16_2"/>
          <param name="jvmargs" value="-Dosgi.shell.telnet.port=16010"/>
          <param name="args" value=""/>
        </antcall>
      </sequential>
    </parallel>
  </target>

  <target name="client.noloss_1" depends="init.a3props,compile"
          description=" --> Check that there are no messages loss during closure of session ">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest12"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="client.noloss_2" depends="init.a3props,compile"
          description=" --> Check that there are no messages loss during an asynchrnous close of session ">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.client.ClientTest11"/>
      <param name="jndiconf" value="client/jndi.properties"/>
      <param name="a3conf" value="client/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <!-- fin test client -->

	<!-- connection tests -->
  <target name="connection.test1" depends="connection.test1.1,connection.test1.2"/>
	
  <target name="connection.test1.1" depends="init.a3props,compile"
          description=" --> Test connection close with a colocalised server">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="connection.test1.1"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.connection.Test1"/>
      <param name="jndiconf" value="connection/jndi.properties"/>
      <param name="a3conf" value="connection/a3servers.xml"/>
      <param name="jvmargs" value="-DBaseClass=joram.connection.ColocatedBaseTest"/>
      <param name="args" value=""/>
    </antcall>
  </target>
  <target name="connection.test1.2" depends="init.a3props,compile"
          description=" --> Test connection close with a remote server">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="connection.test1.2"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.connection.Test1"/>
      <param name="jndiconf" value="connection/jndi.properties"/>
      <param name="a3conf" value="connection/a3servers.xml"/>
      <param name="jvmargs" value="-DBaseClass=joram.connection.TcpBaseTest"/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
	<!-- end connection tests -->

  	<!-- local test -->

  <target name="local.test" depends="init.a3props,compile"
          description=" --> Test messages transmission with a local configuration">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.local.LocalTest"/>
      <param name="jndiconf" value="local/jndi.properties"/>
      <param name="a3conf" value="local/a3servers.xml"/>
      <param name="testid" value="local.test"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="local.test1" depends="init.a3props,compile"
          description=" --> tests the local replies mechanism">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.local.CommitTest"/>
      <param name="jndiconf" value="local/jndi.properties"/>
      <param name="a3conf" value="local/a3servers.xml"/>
      <param name="testid" value="local.test1"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="local.test2" depends="init.a3props,compile"
          description=" --> test local connection without sever init and with server init">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.local.Test2"/>
      <param name="jndiconf" value="local/jndi.properties"/>
      <param name="a3conf" value="local/a3servers1.xml"/>
      <param name="testid" value="local.test2"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <!-- end local test -->

  <!-- durable subsciber test -->

  <target name="dursub.test1" depends="init.a3props,compile"
          description=" --> test about creation of durable subscriber">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.dursub.Test1"/>
      <param name="testid" value="dursub.test1"/>
      <param name="jndiconf" value="dursub/jndi.properties"/>
      <param name="a3conf" value="dursub/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dursub.test2" depends="init.a3props,compile"
          description=" --> test unsubscribe.">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.dursub.Test2"/>
      <param name="testid" value="dursub.test2"/>
      <param name="jndiconf" value="dursub/jndi.properties"/>
      <param name="a3conf" value="dursub/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="dursub.test3" depends="init.a3props,compile"
          description=" --> Check basic behavior of durable subscription">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.dursub.Test3"/>
      <param name="testid" value="dursub.test3"/>
      <param name="jndiconf" value="dursub/jndi.properties"/>
      <param name="a3conf" value="dursub/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dursub.test4" depends="init.a3props,compile"
          description=" --> Check that two durable subscriptions do not interfere when consuming their messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.dursub.Test4"/>
      <param name="testid" value="dursub.test4"/>
      <param name="jndiconf" value="dursub/jndi.properties"/>
      <param name="a3conf" value="dursub/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dursub.test5" depends="init.a3props,compile"
          description=" --> Check that two durable subscriptions do not interfere when consuming their messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.dursub.Test5"/>
      <param name="testid" value="dursub.test5"/>
      <param name="jndiconf" value="dursub/jndi.properties"/>
      <param name="a3conf" value="dursub/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dursub.test6" depends="init.a3props,compile" unless="isOSGi"
          description=" --> test dursub when kill and restart a client">
    <antcall target="init.test" inheritAll="true">
        <param name="a3conf" value="dursub/a3servers1.xml"/>
    </antcall>

    <parallel>
      <java classname="fr.dyade.aaa.agent.AgentServer" failonerror="no" fork="yes" dir="${test.dir}">
        <classpath path="${project.class.path}"/>
        <jvmarg line="-Dcom.sun.management.jmxremote"/>
        <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y"/ -->
        <arg line="0 ./s0"/>
      </java>

      <sequential>
        <sleep seconds="2"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.dursub.Test6"/>
          <param name="testid" value="dursub.test6"/>
          <param name="jvmargs" value=""/>
          <param name="args" value=""/>
        </antcall>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.dursub.Test6b"/>
          <param name="testid" value="dursub.test6"/>
          <param name="jvmargs" value="-Dosgi.shell.telnet.port=7890"/>
          <param name="args" value=""/>
        </antcall>
      </sequential>
    </parallel>
  </target>

  <target name="dursub.test6.osgi" depends="init.a3props,compile" if="isOSGi"
          description=" --> test dursub when kill and restart a client">
    <antcall target="init.test" inheritAll="true">
        <param name="a3conf" value="dursub/a3servers1.xml"/>
    </antcall>

    <parallel>
      <java classname="org.apache.felix.main.Main" failonerror="no" fork="yes" dir="${test.dir}">
        <classpath path="${felix.class.path}"/>
        <jvmarg line="-Dosgi.shell.telnet.port=16010 -Dfelix.config.properties=file:config.properties -Dcom.sun.management.jmxremote"/>
        <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y"/ -->
      </java>

      <sequential>
        <sleep seconds="2"/>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.dursub.Test6"/>
          <param name="testid" value="dursub.test6"/>
          <param name="jvmargs" value=""/>
          <param name="args" value=""/>
        </antcall>
        <antcall target="test.start" inheritAll="true">
          <param name="className" value="joram.dursub.Test6b"/>
          <param name="testid" value="dursub.test6"/>
          <param name="jvmargs" value="-Dosgi.shell.telnet.port=16010"/>
          <param name="args" value=""/>
        </antcall>
      </sequential>
    </parallel>
  </target>

  <!-- end durablesubsciber test -->

  <!-- test tcp -->

  <target name="tcp.test1" depends="init.a3props,compile"
          description=" --> Test messages transmission with a tcp configuration">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.tcp.Test"/>
      <param name="testid" value="tcp.test1"/>
      <param name="jndiconf" value="tcp/jndi.properties"/>
      <param name="a3conf" value="tcp/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="tcp.test2" depends="init.a3props,compile"
          description=" --> Test receive messge : Use 3 servers.1 for producer, 1 for consumer, 1 for queue and topic">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.tcp.Test2"/>
      <param name="testid" value="tcp.test2"/>
      <param name="jndiconf" value="tcp/jndi.properties"/>
      <param name="a3conf" value="tcp/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="tcp.test3" depends="init.a3props,compile"
          description=" --> test call of exception when recieve a message and when stop a server">
    <antcall target="test.run" inheritAll="true">
      <!-- Be careful ! Don't use NullTransaction -->
      <param name="className" value="joram.tcp.Test3"/>
      <param name="testid" value="tcp.test3"/>
      <param name="jndiconf" value="tcp/jndi.properties"/>
      <param name="a3conf" value="tcp/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="tcp.test4" depends="init.a3props,compile"
          description=" --> test call of exception when stop a server">
    <antcall target="test.run" inheritAll="true">
      <!-- Be careful ! Don't use NullTransaction -->
      <param name="className" value="joram.tcp.Test4"/>
      <param name="testid" value="tcp.test4"/>
      <param name="jndiconf" value="tcp/jndi.properties"/>
      <param name="a3conf" value="tcp/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="tcp.test5" depends="init.a3props,compile"
          description=" --> test call of exception when use a bad password">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="tcp.test5"/>
      <param name="className" value="joram.tcp.Test5"/>
      <param name="jndiconf" value="tcp/jndi.properties"/>
      <param name="a3conf" value="tcp/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <!-- end test tcp -->

  <!--  test reconf -->

  <target name="reconf.test0" depends="reconf.test0.1,reconf.test0.2"/>

  <target name="reconf.test0.1" depends="init.a3props,compile"
          description=" --> test reconfiguration server - SimpleNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test0.1"/>
      <param name="className" value="joram.reconf.ReconfTest0"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="args" value=""/>
      <param name="jvmargs" value="-DNetwork=fr.dyade.aaa.agent.SimpleNetwork"/>
    </antcall>
  </target>
	
  <target name="reconf.test0.2" depends="init.a3props,compile"
          description=" --> test reconfiguration server - PoolNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test0.2"/>
      <param name="className" value="joram.reconf.ReconfTest0"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="args" value=""/>
      <param name="jvmargs" value="-DNetwork=fr.dyade.aaa.agent.PoolNetwork"/>
    </antcall>
  </target>

  <target name="reconf.test1" depends="reconf.test1.1,reconf.test1.2"/>

	
  <target name="reconf.test1.1" depends="init.a3props,compile"
          description=" --> test reconfiguration server - SimpleNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test1.1"/>
      <param name="className" value="joram.reconf.ReconfTest1"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value="-DNetwork=fr.dyade.aaa.agent.SimpleNetwork"/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="reconf.test1.2" depends="init.a3props,compile"
          description=" --> test reconfiguration server - PoolNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test1.2"/>
      <param name="className" value="joram.reconf.ReconfTest1"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value="-DNetwork=fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="reconf.test2" depends="init.a3props,compile"
          description=" --> test reconfiguration server with exceptions">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test2"/>
      <param name="className" value="joram.reconf.ReconfTest2"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
 
  <target name="reconf.test3" depends="reconf.test3.1,reconf.test3.2"/>

  <target name="reconf.test3.1" depends="init.a3props,compile"
          description=" --> test reconfiguration server - SimpleNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test3.1"/>
      <param name="className" value="joram.reconf.ReconfTest3"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers3.xml"/>
    	<param name="network" value="fr.dyade.aaa.agent.SimpleNetwork"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="reconf.test3.2" depends="init.a3props,compile"
          description=" --> test reconfiguration server - PoolNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test3.2"/>
      <param name="className" value="joram.reconf.ReconfTest3"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers3.xml"/>
    	<param name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	 
	<target name="reconf.test4" depends="reconf.test4.1,reconf.test4.2"/>

  <target name="reconf.test4.1" depends="init.a3props,compile"
          description=" --> test reconfiguration server - SimpleNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test4.1"/>
      <param name="className" value="joram.reconf.ReconfTest4"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value="-DNetwork=fr.dyade.aaa.agent.SimpleNetwork"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="reconf.test4.2" depends="init.a3props,compile"
          description=" --> test reconfiguration server - PoolNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test4.2"/>
      <param name="className" value="joram.reconf.ReconfTest4"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value="-DNetwork=fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="reconf.test5" depends="init.a3props,compile"
          description=" --> test reconfiguration server - HttpNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test5"/>
      <param name="className" value="joram.reconf.ReconfTest5"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="reconf.test6" depends="init.a3props,compile"
          description=" --> test reconfiguration server - HttpNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test6"/>
      <param name="className" value="joram.reconf.ReconfTest6"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="reconf.test7" depends="init.a3props,compile"
          description=" --> test reconfiguration server - HttpNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test7"/>
      <param name="className" value="joram.reconf.ReconfTest7"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="reconf.test8" depends="init.a3props,compile"
          description=" --> test reconfiguration server - HttpNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test8"/>
      <param name="className" value="joram.reconf.ReconfTest8"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="reconf.test9" depends="reconf.test9.1,reconf.test9.2"/>

  <target name="reconf.test9.1" depends="init.a3props,compile"
          description=" --> test reconfiguration server - SimpleNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test9.1"/>
      <param name="className" value="joram.reconf.ReconfTest9"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers3.xml"/>
    	<param name="network" value="fr.dyade.aaa.agent.SimpleNetwork"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="reconf.test9.2" depends="init.a3props,compile"
          description=" --> test reconfiguration server - PoolNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test9.2"/>
      <param name="className" value="joram.reconf.ReconfTest9"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers3.xml"/>
    	<param name="network" value="fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="reconf.test10" depends="init.a3props,compile"
          description=" --> test reconfiguration server - PoolNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test10"/>
      <param name="className" value="joram.reconf.ReconfTest10"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value="-DNetwork=fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="reconf.test11" depends="init.a3props,compile"
          description=" --> test reconfiguration server - PoolNetwork">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="reconf.test11"/>
      <param name="className" value="joram.reconf.ReconfTest11"/>
      <param name="jndiconf" value="reconf/jndi.properties"/>
      <param name="a3conf" value="reconf/a3servers.xml"/>
      <param name="jvmargs" value="-DNetwork=fr.dyade.aaa.agent.PoolNetwork"/>
      <param name="args" value=""/>
    </antcall>
  </target>

	<!-- end test reconf -->

  <!-- perf test -->

  <target name="perf.asynctest" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.AsyncTest"/>
      <param name="testid" value="perf.asynctest"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers.xml"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="perf.test5"
          description=" --> test time between sender and receiver with queue or topic">
    <antcall target="perf.test5-1"/>
    <antcall target="perf.test5-2"/>
  </target>

  <target name="perf.test5-1" depends="init.a3props,compile"
          description=" --> test time between sender and receiver with queue or topic in NullTransaction">
    <antcall target="perf.test5-x" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="perf.test5-1"/>
    </antcall>
  </target>

  <target name="perf.test5-2" depends="init.a3props,compile"
          description=" --> test time between sender and receiver with queue or topic with real Transaction">
    <antcall target="perf.test5-x" inheritAll="true">
      <param name="testid" value="perf.test5-2"/>
    </antcall>
  </target>

  <target name="perf.test5-x"
          description=" --> test time between sender and receiver with queue or topic">
    <parallel>
      <antcall target="test.run" inheritAll="true">
        <param name="jndiconf" value="perfs/jndi.properties"/>
        <param name="a3conf" value="perfs/a3servers1.xml"/>
        <param name="className" value="joram.perfs.ServerTest5"/>

        <param name="jvmargs" value="-DNbClients=4"/>
      </antcall>

      <sequential>
        <sleep seconds="1"/>
        <parallel>
          <antcall target="test.start" inheritAll="true">
            <param name="className" value="joram.perfs.Test5"/>
            <param name="jvmargs" value="-Dhostname=localhost -DDestination=org.objectweb.joram.client.jms.Queue"/>
          </antcall>
          <antcall target="test.start" inheritAll="true">
            <param name="className" value="joram.perfs.Test5"/>
            <param name="jvmargs" value="-Dhostname=localhost -DDestination=org.objectweb.joram.client.jms.Topic"/>
          </antcall>
          <antcall target="test.start" inheritAll="true">
            <param name="className" value="joram.perfs.Test5"/>
            <param name="jvmargs" value="-Dhostname=localhost -DDestination=org.objectweb.joram.client.jms.Queue"/>
          </antcall>
          <antcall target="test.start" inheritAll="true">
            <param name="className" value="joram.perfs.Test5"/>
            <param name="jvmargs" value="-Dhostname=localhost -DDestination=org.objectweb.joram.client.jms.Topic"/>
          </antcall>
        </parallel>
      </sequential>
    </parallel>
  </target>

  <!-- Queue and topic statistics -->

  <target name="perf.test6"
          description=" --> statistics for queue and topic">
    <antcall target="perf.test6-1"/>
    <antcall target="perf.test6-2"/>
  </target>

  <!-- Queue statistics -->

  <target name="perf.test6-1" description=" --> queue statistics">
    <antcall target="perf.test6-1.1"/>
    <antcall target="perf.test6-1.2"/>
    <antcall target="perf.test6-1.3"/>
    <antcall target="perf.test6-1.4"/>
    <antcall target="perf.test6-1.5"/>
    <antcall target="perf.test6-1.6"/>
    <antcall target="perf.test6-1.7"/>
    <antcall target="perf.test6-1.8"/>
   </target>

  <target name="perf.test6-1.1"
          description=" --> queue statistics: transient=false, colocated=true, transacted=false">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-1.1"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="MsgTransient" value="false"/>
      <param name="Transacted" value="false"/>
    </antcall>
   </target>

  <target name="perf.test6-1.2"
          description=" --> queue statistics: transient=true, colocated=true, transacted=false">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-1.2"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="MsgTransient" value="true"/>
      <param name="Transacted" value="false"/>
    </antcall>
   </target>

  <target name="perf.test6-1.3"
          description=" --> queue statistics: transient=false, colocated=false, transacted=false">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-1.3"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="MsgTransient" value="false"/>
      <param name="Transacted" value="false"/>
    </antcall>
   </target>

  <target name="perf.test6-1.4"
          description=" --> queue statistics: transient=true, colocated=false, transacted=false">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-1.4"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="MsgTransient" value="true"/>
      <param name="Transacted" value="false"/>
    </antcall>
   </target>

  <target name="perf.test6-1.5"
          description=" --> queue statistics: transient=false, colocated=true, transacted=true">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-1.5"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="MsgTransient" value="false"/>
      <param name="Transacted" value="true"/>
    </antcall>
   </target>

  <target name="perf.test6-1.6"
          description=" --> queue statistics: transient=true, colocated=true, transacted=true">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-1.6"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="MsgTransient" value="true"/>
      <param name="Transacted" value="true"/>
    </antcall>
   </target>

  <target name="perf.test6-1.7"
          description=" --> queue statistics: transient=false, colocated=false, transacted=true">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-1.7"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="MsgTransient" value="false"/>
      <param name="Transacted" value="true"/>
    </antcall>
   </target>

  <target name="perf.test6-1.8"
          description=" --> queue statistics: transient=true, colocated=false, transacted=true">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-1.8"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="MsgTransient" value="true"/>
      <param name="Transacted" value="true"/>
    </antcall>
   </target>

  <!-- Topic statistics -->

  <target name="perf.test6-2" description=" --> topic statistics">
    <antcall target="perf.test6-2.1"/>
    <antcall target="perf.test6-2.2"/>
    <antcall target="perf.test6-2.3"/>
    <antcall target="perf.test6-2.4"/>
    <antcall target="perf.test6-2.5"/>
    <antcall target="perf.test6-2.6"/>
    <antcall target="perf.test6-2.7"/>
    <antcall target="perf.test6-2.8"/>
   </target>

  <target name="perf.test6-2.1"
          description=" --> topic statistics: transient=false, durable=true, colocated=true, transacted=false">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-2.1"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="MsgTransient" value="false"/>
      <param name="SubDurable" value="true"/>
      <param name="Transacted" value="false"/>
    </antcall>
   </target>

  <target name="perf.test6-2.2"
          description=" --> topic statistics: transient=true, durable=false, colocated=true, transacted=false">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-2.2"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="MsgTransient" value="true"/>
      <param name="SubDurable" value="false"/>
      <param name="Transacted" value="false"/>
    </antcall>
   </target>

  <target name="perf.test6-2.3"
          description=" --> topic statistics: transient=false, durable=true, colocated=false, transacted=false">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-2.3"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="MsgTransient" value="false"/>
      <param name="SubDurable" value="true"/>
      <param name="Transacted" value="false"/>
    </antcall>
   </target>

  <target name="perf.test6-2.4"
          description=" --> topic statistics: transient=true, durable=false, colocated=false, transacted=false">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-2.4"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="MsgTransient" value="true"/>
      <param name="SubDurable" value="false"/>
      <param name="Transacted" value="false"/>
    </antcall>
   </target>

  <target name="perf.test6-2.5"
          description=" --> topic statistics: transient=false, durable=true, colocated=true, transacted=true">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-2.5"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="MsgTransient" value="false"/>
      <param name="SubDurable" value="true"/>
      <param name="Transacted" value="true"/>
    </antcall>
   </target>

  <target name="perf.test6-2.6"
          description=" --> topic statistics: transient=true, durable=true, colocated=true, transacted=true">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-2.6"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="MsgTransient" value="true"/>
      <param name="SubDurable" value="false"/>
      <param name="Transacted" value="true"/>
    </antcall>
   </target>

  <target name="perf.test6-2.7"
          description=" --> topic statistics: transient=false, durable=true, colocated=false, transacted=true">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-2.7"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="MsgTransient" value="false"/>
      <param name="SubDurable" value="true"/>
      <param name="Transacted" value="true"/>
    </antcall>
   </target>

  <target name="perf.test6-2.8"
          description=" --> topic statistics: transient=true, durable=true, colocated=false, transacted=true">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-2.8"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="MsgTransient" value="true"/>
      <param name="SubDurable" value="false"/>
      <param name="Transacted" value="true"/>
    </antcall>
   </target>

  <!-- Configurable performance test -->
  <target name="perf.test6-3"
          description=" --> Configurable performance test">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="perf.test6-3"/>
      <!-- param name="Destination"
             value="org.objectweb.joram.client.jms.Topic"/ -->
      <param name="Destination"
             value="org.objectweb.joram.client.jms.Queue"/>
      <param name="transaction" value="fr.dyade.aaa.ext.NGTransaction"/>
      <!-- param name="transaction"
             value="fr.dyade.aaa.util.NTransaction"/ -->
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <!-- param name="engine" value="fr.dyade.aaa.agent.GCEngine"/ -->
      <!-- param name="BaseClass" value="joram.perfs.TcpBaseTest"/ -->
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="dupsOk" value="false"/>
      <param name="queueMessageReadMax" value="10"/>
      <param name="topicAckBufferMax" value="50"/>
      <param name="implicitAck" value="false"/>
      <param name="MsgTransient" value="false"/>
      <param name="SubDurable" value="false"/>
      <param name="Transacted" value="false"/>
      <param name="NbRound" value="100"/>
      <param name="NbMsgPerRound" value="10000"/>
      <param name="NbProdCons" value="1"/>
      <param name="MsgSize" value="100"/>
    </antcall>
  </target>

  <!-- Generic launcher for performance tests  -->
  <target name="init.test6props">
    <property name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
    <property name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
    <property name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
    <property name="engine" value="fr.dyade.aaa.agent.Engine"/>
    <property name="dupsOk" value="true"/>
    <property name="queueMessageReadMax" value="100"/>
    <property name="topicAckBufferMax" value="50"/>
    <property name="implicitAck" value="true"/>
    <property name="MsgTransient" value="false"/>
    <property name="SubDurable" value="false"/>
    <property name="Transacted" value="false"/>
    <property name="NbRound" value="100"/>
    <property name="NbMsgPerRound" value="100"/>
    <property name="NbProdCons" value="1"/>
    <property name="MsgSize" value="25"/>
  </target>

  <target name="perf.test6-x" depends="init.test6props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test6"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTLogFileSize=32 -DNTLogMemorySize=4096 -DDestination=${Destination} -DBaseClass=${BaseClass} -DdupsOk=${dupsOk} -DqueueMessageReadMax=${queueMessageReadMax} -DtopicAckBufferMax=${topicAckBufferMax} -DimplicitAck=${implicitAck} -DMsgTransient=${MsgTransient} -DSubDurable=${SubDurable} -DTransacted=${Transacted} -DNbRound=${NbRound} -DNbMsgPerRound=${NbMsgPerRound} -DNbSender=${NbProdCons} -DNbReceiver=${NbProdCons} -DNbDestination=${NbProdCons} -DMsgSize=${MsgSize}"/>
    </antcall>
  </target>

  <!-- YJP specific launcher for performance tests  -->
  <target name="test6-yjp.perf"
          description=" --> Configurable performance test">
    <antcall target="perf.test6-yjpx" inheritAll="true">
      <param name="testid" value="test6-yjp.perf"/>
      <param name="Destination"
             value="org.objectweb.joram.client.jms.Topic"/>
      <!-- param name="Destination"
             value="org.objectweb.joram.client.jms.Queue"/ -->
      <!-- param name="transaction"
             value="fr.dyade.aaa.util.NTransaction"/ -->
      <param name="transaction"
             value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <!-- param name="engine" value="fr.dyade.aaa.agent.GCEngine"/ -->
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <!-- param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/ -->
      <!-- param name="dupsOk" value="true"/ -->
      <!-- param name="queueMessageReadMax" value="100"/ -->
      <!-- param name="topicAckBufferMax" value="50"/ -->
      <!-- param name="implicitAck" value="true"/ -->
      <param name="MsgTransient" value="true"/>
      <param name="SubDurable" value="false"/>
      <param name="Transacted" value="false"/>
      <param name="NbRound" value="1000"/>
      <param name="NbMsgPerRound" value="100"/>
      <param name="NbProdCons" value="1"/>
      <param name="MsgSize" value="50"/>
    </antcall>
  </target>

	<target name="perf.test6-yjpx" depends="init.test6props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test6"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <!-- param name="jvmargs" value="-agentlib:yjpagent=onexit=memory,disablej2ee,noj2ee,tracing,alloc,dir=c:\MySnapshots"/ -->
      <param name="jvmargs" value="-agentlib:yjpagent=onexit=memory,disablej2ee,noj2ee,tracing,dir=c:\MySnapshots -DNTLogFileSize=32 -DNTLogMemorySize=4096 -DDestination=${Destination} -DBaseClass=${BaseClass} -DdupsOk=${dupsOk} -DqueueMessageReadMax=${queueMessageReadMax} -DtopicAckBufferMax=${topicAckBufferMax} -DimplicitAck=${implicitAck} -DMsgTransient=${MsgTransient} -DSubDurable=${SubDurable} -DTransacted=${Transacted} -DNbRound=${NbRound} -DNbMsgPerRound=${NbMsgPerRound} -DNbSender=${NbProdCons} -DNbReceiver=${NbProdCons} -DNbDestination=${NbProdCons} -DMsgSize=${MsgSize}"/>
    </antcall>
  </target>

  <!-- HPROF specific launcher for performance tests  -->

  <target name="test6-hp.perf" depends="compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test6"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-agentlib:hprof=cpu=samples -DDestination=org.objectweb.joram.client.jms.Queue -DBaseClass=joram.perfs.TcpBaseTest -DMsgTransient=false -DSubDurable=true -DTransacted=false -DNbSender=1 -DNbReceiver=1 -DNbDestination=1 -DNbRound=100 -DNbMsgPerRound=100 -DMsgSize=100000"/>
    </antcall>
  </target>

  <!-- Queue and topic statistics in multi-sender mode -->

  <target name="perf.test6M"
          description="Queue and topic statistics in multi-sender mode">
    <antcall target="perf.test6M-1"/>
    <antcall target="perf.test6M-2"/>
  </target>

  <!-- Queue statistics in multi-sender mode -->

  <target name="perf.test6M-1"
          description="Queue statistics in multi-sender mode">
    <antcall target="perf.test6M-1.1"/>
    <antcall target="perf.test6M-1.2"/>
  </target>

  <target name="perf.test6M-1.1">
    <antcall target="perf.test6M-x" inheritAll="true">
      <param name="testid" value="M-1.1"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="multiThreadSync" value="true"/>
    </antcall>
  </target>

  <target name="perf.test6M-1.2">
    <antcall target="perf.test6M-x" inheritAll="true">
      <param name="testid" value="M-1.2"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="multiThreadSync" value="true"/>
    </antcall>
  </target>

  <!-- Topic statistics in multi-sender mode -->

  <target name="perf.test6M-2"
          description="Topic statistics in multi-sender mode">
    <antcall target="perf.test6M-2.1"/>
    <antcall target="perf.test6M-2.2"/>
  </target>

  <target name="perf.test6M-2.1">
    <antcall target="perf.test6M-x" inheritAll="true">
      <param name="testid" value="M-2.1"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <param name="multiThreadSync" value="true"/>
    </antcall>
  </target>

  <target name="perf.test6M-2.2">
    <antcall target="perf.test6M-x" inheritAll="true">
      <param name="testid" value="M-2.2"/>
      <param name="Destination" value="org.objectweb.joram.client.jms.Topic"/>
      <param name="BaseClass" value="joram.perfs.TcpBaseTest"/>
      <param name="multiThreadSync" value="true"/>
    </antcall>
  </target>

  <!-- Configurable performance test -->

  <target name="perf.test6M-3"
          description=" --> Configurable performance test">
    <antcall target="perf.test6-x" inheritAll="true">
      <param name="testid" value="M-3"/>
      <param name="Destination"
             value="org.objectweb.joram.client.jms.Topic"/>
      <!-- param name="Destination"
             value="org.objectweb.joram.client.jms.Queue"/ -->
      <param name="transaction"
             value="fr.dyade.aaa.util.NTransaction"/>
      <!-- param name="transaction"
             value="fr.dyade.aaa.util.NullTransaction"/ -->
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <!-- param name="engine" value="fr.dyade.aaa.agent.GCEngine"/ -->
      <param name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
      <!-- param name="BaseClass" value="joram.perfs.TcpBaseTest"/ -->
      <param name="MsgTransient" value="true"/>
      <param name="SubDurable" value="false"/>
      <param name="Transacted" value="true"/>
      <param name="NbRound" value="100"/>
      <param name="NbMsgPerRound" value="100"/>
      <param name="NbSender" value="20"/>
      <param name="NbReceiver" value="1"/>
      <param name="MsgSize" value="25"/>
      <param name="dupsOk" value="false"/>
      <param name="queueMessageReadMax" value="1000"/>
      <param name="topicAckBufferMax" value="1000"/>
      <param name="multiThreadSyncDelay" value="1"/>
      <param name="multiCnx" value="true"/>
    </antcall>
  </target>

  <!-- Generic launcher for performance tests in multi-sender mode -->

  <target name="init.test6Mprops">
    <property name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
    <property name="BaseClass" value="joram.perfs.ColocatedBaseTest"/>
    <property name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
    <property name="engine" value="fr.dyade.aaa.agent.Engine"/>
    <property name="MsgTransient" value="false"/>
    <property name="SubDurable" value="true"/>
    <property name="Transacted" value="false"/>
    <property name="NbRound" value="10"/>
    <property name="NbMsgPerRound" value="100"/>
    <property name="NbSender" value="20"/>
    <property name="NbReceiver" value="1"/>
    <property name="MsgSize" value="25"/>
    <property name="dupsOk" value="false"/>
    <property name="queueMessageReadMax" value="100"/>
    <property name="topicAckBufferMax" value="100"/>
    <property name="multiThreadSyncDelay" value="1"/>
    <property name="multiCnx" value="false"/>
  </target>

  <target name="perf.test6M-x" depends="init.test6Mprops,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test6"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers5.xml"/>
      <param name="jvmargs"
             value="-DBaseClass=${BaseClass}
                    -DDestination=${Destination}
                    -DTransacted=${Transacted} 
                    -DNbSender=${NbSender} -DNbReceiver=${NbReceiver} 
                    -DNbDestination=1 
                    -DNbRound=${NbRound} -DNbMsgPerRound=${NbMsgPerRound} 
                    -DMsgSize=${MsgSize} 
                    -DMsgTransient=${MsgTransient} -DSubDurable=${SubDurable}
                    -DdupsOk=${dupsOk}
                    -DqueueMessageReadMax=${queueMessageReadMax}
                    -DtopicAckBufferMax=${topicAckBufferMax}
                    -DmultiThreadSync=${multiThreadSync}
                    -DmultiThreadSyncDelay=${multiThreadSyncDelay}
                    -DmultiCnx=${multiCnx}"/>
    </antcall>
  </target>

  <target name="perf.test26" depends="init.a3props,compile"
          description=" --> Simple test for measure travel time. Several different parameter">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test26"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DBaseClass=joram.perfs.ColocatedBaseTest -DTransacted=false -DNbReceiver=1 -DNbRound=100 -DNbMsgPerRound=100 -DMsgSize=25 -DMsgTransient=false -DSubDurable=true"/>
    </antcall>
  </target>

  <target name="perf.test27" depends="init.a3props,compile"
          description=" --> CarrierIQ Scenario. Measure travel time.">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test27"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNbMsg=5000 -DMsgSize=25 -Dorg.objectweb.joram.client.jms.queueMsgCount=50 -DNTLogFileSize=512 -DConnectionManager.inFlow=500"/>
    </antcall>
  </target>
	
  <target name="perf.test27_bis" depends="init.a3props,compile"
          description=" --> CarrierIQ Scenario. Measure travel time.">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test27"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNbMsg=500000 -DMsgSize=25 -Dorg.objectweb.joram.client.jms.queueMsgCount=50 -DNTLogFileSize=512 -DConnectionManager.inFlow=500"/>
    </antcall>
  </target>

  <target name="perf.test28" depends="init.a3props,compile"
          description=" --> Test the impact of a durable subscription on the performances of a normal subscription">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test28"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DDurable=true"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test28"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DDurable=false"/>
    </antcall>
  </target>

  <target name="perf.test29" depends="init.a3props,compile"
          description=" --> Several messages on some destination. Counts of msg/s for the receiver">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test29"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNbMaxAgents=1000 -DNbMsg=100 -DNbDest=300"/>
    </antcall>
  </target>

  <target name="perf.test30" depends="init.a3props,compile"
          description=" --> check creation of multiple connection and queue.Counts of msg/s for the receiver and sender ">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test30"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-Xms2m -Xmx1024m -DNbMaxAgents=1000 -DNbMsg=100 -DNbDest=150"/>
    </antcall>
  </target>

  <target name="perf.test33" depends="init.a3props,compile"
          description=" --> Memory test with TTL">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test33"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="perf.test34" depends="init.a3props,compile"
          description=" --> test : msg/s with different parameter :NbMsg, NTLogMemorySize / launch with target all">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test34"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTRepositoryImpl=fr.dyade.aaa.util.FileRepository -DNTLogFileSize=16 -DNTLogMemorySize=2048 -DNbMsg=1000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test34"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTRepositoryImpl=fr.dyade.aaa.util.FileRepository -DNTLogFileSize=16 -DNTLogMemorySize=2048 -DNbMsg=10000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test34"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTRepositoryImpl=fr.dyade.aaa.util.FileRepository -DNTLogFileSize=16 -DNTLogMemorySize=2048 -DMomMessageClass=org.objectweb.joram.shared.messages.MessageSoftRef -DNbMsg=1000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test34"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTRepositoryImpl=fr.dyade.aaa.util.FileRepository -DNTLogFileSize=16 -DNTLogMemorySize=2048 -DNbMsg=1000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test34"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTRepositoryImpl=fr.dyade.aaa.util.FileRepository -DNTLogFileSize=16 -DNTLogMemorySize=2048 -DNbMsg=1000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test34"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTRepositoryImpl=fr.dyade.aaa.util.FileRepository -DNTLogFileSize=16 -DNTLogMemorySize=2048 -DMomMessageClass=org.objectweb.joram.shared.messages.MessageSoftRef -DNbMsg=1000"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test34"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTRepositoryImpl=fr.dyade.aaa.util.FileRepository -DNTLogFileSize=16 -DNTLogMemorySize=2048 -DMomMessageClass=org.objectweb.joram.shared.messages.MessageSoftRef -DNbMsg=500"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test34"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNTRepositoryImpl=fr.dyade.aaa.util.FileRepository -DNTLogFileSize=32 -DNTLogMemorySize=16384 -DMomMessageClass=org.objectweb.joram.shared.messages.MessageSoftRef -DNbMsg=800"/>
    </antcall>
  </target>

  <target name="perf.test47" depends="init.a3props,compile"
          description=" --> Test time to send, to receive.">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test47"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers3.xml"/>
      <param name="jvmargs" value="-DNbRound=25 -DNbMsgPerRound=100"/>
    </antcall>
  </target>

  <target name="perf.test54" depends="init.a3props,compile"
          description=" --> test management memory ">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test54"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="perf.test55" depends="init.a3props,compile"
          description=" --> Platine Scenario.">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test55"/>
      <param name="testid" value="perf.test55"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-DNbMsg=15000 -DMsgSize=1680000 -Dmin=5000 -Dmax=6000 -DNTLogFileSize=32"/>
      <!-- param name="jvmargs" value="-DNbMsg=15000 -DMsgSize=1680000 -Dmin=5000 -Dmax=6000 -DNTLogFileSize=32 -Dorg.objectweb.joram.mom.messages.SWAPALLOWED=true"/ -->
    </antcall>
  </target>

  <target name="perf.test56" depends="init.a3props,compile"
          description=" --> Platine Scenario.">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.perfs.Test56"/>
      <param name="testid" value="perf.test56"/>
      <param name="engine" value="fr.dyade.aaa.agent.Engine"/>
      <param name="transaction" value="fr.dyade.aaa.ext.NGTransaction"/>
      <param name="jndiconf" value="perfs/jndi.properties"/>
      <param name="a3conf" value="perfs/a3servers1.xml"/>
      <param name="jvmargs" value="-Djmx.remote.protocol.provider.pkgs=fr.dyade.aaa -DNbMsg=2000 -DMsgSize=1000000 -DTransaction.MaxLogFileSize=512 -DTransaction.NbLogFile=8 -Dorg.objectweb.joram.mom.messages.SWAPALLOWED=true"/>
      <!-- param name="jvmargs" value="-DNbMsg=15000 -DMsgSize=1680000 -DTransaction.MaxLogFileSize=512 -DTransaction.NbLogFile=8 -Dorg.objectweb.joram.mom.messages.SWAPALLOWED=true"/ -->
    </antcall>
  </target>

  <!-- end perf test -->

  <!-- start noreg -->

  <target name="noreg.test3" depends="noreg.test3-1,noreg.test3-2"/>

  <target name="noreg.test3-1" depends="init.a3props,compile"
          description=" --> Test Queue with big messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test3"/>
      <param name="testid" value="noreg.test3-1"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Queue -DMsgSize=256 -DMsgPerCommit=1 -DNbMsg=10"/>
    </antcall>
  </target>

  <target name="noreg.test3-2" depends="init.a3props,compile"
          description=" --> Test Topic with big messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test3"/>
      <param name="testid" value="noreg.test3-2"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Topic -DMsgSize=512 -DMsgPerCommit=1 -DNbMsg=100"/>
    </antcall>
  </target>

  <target name="noreg.test4" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test4"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test7.1"
          description=" --> check the use of multiple queues using agents swap in/out">
    <antcall target="noreg.test7x" inheritAll="true">
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.noreg.ColocatedBaseTest"/>
      <param name="NbMaxAgents" value="100"/>
      <param name="NTLogFileSize" value="128"/>
      <param name="NbDest" value="150"/>
      <param name="NbMsg" value="10"/>
      <param name="MsgSize" value="10"/>
    </antcall>
  </target>

  <target name="noreg.test7.2"
          description=" --> check system property and create multiple queue">
    <antcall target="noreg.test7x" inheritAll="true">
      <param name="Destination" value="org.objectweb.joram.client.jms.Queue"/>
      <param name="BaseClass" value="joram.noreg.ColocatedBaseTest"/>
      <param name="NbMaxAgents" value="200"/>
      <param name="NTLogFileSize" value="128"/>
      <param name="NbDest" value="150"/>
      <param name="NbMsg" value="10"/>
      <param name="MsgSize" value="10"/>
    </antcall>
  </target>

  <target name="noreg.test7x" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test7"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value="-DNbMaxAgents=${NbMaxAgents} -DDestination=${Destination} -DBaseClass=${BaseClass} -DNbDest=${NbDest} -DNbMsg=${NbMsg} -DMsgSize=${MsgSize}"/>
    </antcall>
  </target>

  <target name="noreg.test8" depends="init.a3props,compile"
          description=" --> check server start and stop">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test8"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="noreg.test9" depends="init.a3props,compile"
          description=" --> check message ID and system property">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test9"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value="-DBaseClass=joram.noreg.ColocatedBaseTest -DNbRound=10"/>
    </antcall>
  </target>

  <target name="noreg.test10"
          description=" --> test selector with option : tcp or local">
    <antcall target="noreg.test10a"/>
    <antcall target="noreg.test10b"/>
  </target>

  <target name="noreg.test10a" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.noreg.Test10"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value="-DBaseClass=joram.noreg.TcpBaseTest -DNbRound=10"/>
    </antcall>
  </target>
  <target name="noreg.test10b" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.noreg.Test10"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value="-DBaseClass=joram.noreg.ColocatedBaseTest -DNbRound=10"/>
    </antcall>
  </target>

  <target name="noreg.test11"
          description=" --> check send message on delete topic thrown an exception if there are one server launch">
    <antcall target="noreg.test11a"/>
    <antcall target="noreg.test11b"/>
    <antcall target="noreg.test11c"/>
  </target>


  <target name="noreg.test11a" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test11"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="noreg.Test11-a"/>
    </antcall>
  </target>
  <target name="noreg.test11b" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test11"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers3.xml"/>
      <param name="jvmargs" value="-Dsid=1"/>
      <param name="testid" value="noreg.Test11-b"/>
    </antcall>
  </target>
  <target name="noreg.test11c" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test11"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers3.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
      <param name="testid" value="noreg.Test11-c"/>
    </antcall>
  </target>

  <target name="noreg.test12"
          description=" --> check send message on delete queue thrown an exception if there are one server launch">
    <antcall target="noreg.test12a"/>
    <antcall target="noreg.test12b"/>
    <antcall target="noreg.test12c"/>
  </target>


  <target name="noreg.test12a" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test12"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="noreg.Test12-a"/>
    </antcall>
  </target>
  <target name="noreg.test12b" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test12"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers3.xml"/>
      <param name="jvmargs" value="-Dsid=1"/>
      <param name="testid" value="noreg.Test12-b"/>
    </antcall>
  </target>
  <target name="noreg.test12c" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test12"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers3.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
      <param name="testid" value="noreg.Test12-c"/>
    </antcall>
  </target>

  <target name="noreg.test13" depends="init.a3props,compile"
          description=" --> check use timeout to receive when there are no message not fail">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test13"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="noreg.Test13"/>
    </antcall>
  </target>


  <target name="noreg.test14" depends="init.a3props,compile"
          description=" --> check selector with topic">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test14"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="noreg.Test14"/>
    </antcall>
  </target>

  <target name="noreg.test15"
          description=" --> test close  and start consumer cnx during producer send. option : queue or topic and  Tcp or local ">
    <antcall target="noreg.test15-1"/>
    <antcall target="noreg.test15-2"/>
    <antcall target="noreg.test15-3"/>
    <antcall target="noreg.test15-4"/>
  </target>


  <target name="noreg.test15-1" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test15"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test15-1"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Topic -DBaseClass=joram.noreg.TcpBaseTest"/>
    </antcall>
  </target>
  <target name="noreg.test15-2" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test15"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test15-2"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Queue -DBaseClass=joram.noreg.TcpBaseTest"/>
    </antcall>
  </target>
  <target name="noreg.test15-3" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test15"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test15-3"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Topic -DBaseClass=joram.noreg.ColocatedBaseTest"/>
    </antcall>
  </target>
  <target name="noreg.test15-4" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test15"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test15-4"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Queue -DBaseClass=joram.noreg.ColocatedBaseTest"/>
    </antcall>
  </target>

  <target name="noreg.test16"
          description=" --> test close during receive and start consumer cnx during producer send. option : queue or topic and  Tcp or local ">
    <antcall target="noreg.test16-1"/>
    <antcall target="noreg.test16-2"/>
    <!-- antcall target="test16-3.noreg"/ -->
    <!-- antcall target="test16-4.noreg"/ -->
  </target>

  <target name="noreg.test16-1" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test16"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test16-1"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Topic -DBaseClass=joram.noreg.TcpBaseTest"/>
    </antcall>
  </target>
	
  <target name="noreg.test16-2" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test16"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test16-2"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Queue -DBaseClass=joram.noreg.TcpBaseTest"/>
    </antcall>
  </target>
	
  <target name="noreg.test16-3" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test16"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test16-3"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Topic -DBaseClass=joram.noreg.ColocatedBaseTest"/>
    </antcall>
  </target>
	
  <target name="noreg.test16-4" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test16"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test16-4"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Queue -DBaseClass=joram.noreg.ColocatedBaseTest"/>
    </antcall>
  </target>

  <target name="noreg.test17"
          description=" --> test close and start consumer cnx during producer send. option : queue or topic and  Tcp or local ">
    <antcall target="noreg.test17-1"/>
    <antcall target="noreg.test17-2"/>
    <!-- antcall target="noreg.test17-3"/ -->
    <!-- antcall target="noreg.test17-4"/ -->
  </target>

  <target name="noreg.test17-1" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test17"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test17-1"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Topic -DBaseClass=joram.noreg.TcpBaseTest"/>
    </antcall>
  </target>
	
  <target name="noreg.test17-2" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test17"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test17-2"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Queue -DBaseClass=joram.noreg.TcpBaseTest"/>
    </antcall>
  </target>
	
  <target name="noreg.test17-3" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test17"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test17-3"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Topic -DBaseClass=joram.noreg.ColocatedBaseTest"/>
    </antcall>
  </target>
	
  <target name="noreg.test17-4" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test17"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test17-4"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Queue -DBaseClass=joram.noreg.ColocatedBaseTest"/>
    </antcall>
  </target>

  <target name="noreg.test18"
          description=" --> test exception listener activation during close. option:  Tcp or local ">
    <antcall target="noreg.test18-1"/>
    <!-- antcall target="noreg.test18-2"/ -->
  </target>


  <target name="noreg.test18-1" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test18"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test18-1"/>
      <param name="jvmargs" value="-DBaseClass=joram.noreg.TcpBaseTest"/>
    </antcall>
  </target>
	
  <target name="noreg.test18-2" depends="init.a3props,compile">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test18"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test18-2"/>
      <param name="jvmargs" value="-DBaseClass=joram.noreg.ColocatedBaseTest"/>
    </antcall>
  </target>

  <target name="noreg.test19" depends="init.a3props,compile"
          description=" --> test delete temptopic on onMessage()">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test19"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test19"/>
      <param name="jvmargs" value="-Dsid=0"/>
    </antcall>
  </target>

  <target name="noreg.test20" depends="init.a3props,compile"
          description=" --> check message send to DMQ when ttl expire">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test20"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test20"/>
      <param name="jvmargs" value="-Dsid=0"/>
    </antcall>
  </target>

  <target name="noreg.test21" depends="init.a3props,compile"
          description=" --> check when message sent to a DMQ">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test21"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test21"/>
      <param name="jvmargs" value="-Dsid=0"/>
    </antcall>
  </target>

  <target name="noreg.test25" depends="init.a3props,compile"
          description=" --> Test closure of connection on stop server with cnxPendingTimer and connectingTimer ">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test25"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test25"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
  
  <target name="noreg.test26" depends="init.a3props,compile"
          description=" --> Test closure of connection on stop server with cnxPendingTimer and connectingTimer ">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test26"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test26"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test31" depends="init.a3props,compile"
          description=" --> check use TTL ">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test31"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test31"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test32" depends="init.a3props,compile"
          description=" --> test create queue">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test32"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test32"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test35" depends="init.a3props,compile"
          description=" --> test getadminname">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test35"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test35"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>


  <target name="noreg.test39" depends="init.a3props,compile"
          description=" --> test rollback with queue. message is redelivred">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test39"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test39"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test40" depends="init.a3props,compile"
          description=" --> test messagelistener with rollback. message is redelivred">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test40"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test40"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test41" depends="init.a3props,compile"
          description=" --> test messagelistener with RuntimeException. message is redelivred">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test41"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test41"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
	
  <target name="noreg.test45" depends="init.a3props,compile"
          description=" --> test TTL. With a topic and durable subscrber">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test45"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers3.xml"/>
      <param name="testid" value="noreg.test45"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test46" depends="init.a3props,compile"
          description=" --> test threshold parameter and test DMQ with message more and more big">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test46"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers3.xml"/>
      <param name="testid" value="noreg.test46"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test48" depends="init.a3props,compile"
          description=" --> test queue.clear() , restart of server, and check there is no message">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test48"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test48"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test49" depends="init.a3props,compile"
          description=" --> test queue.deleteMessage() , restart of server, and check there is no message">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test49"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test49"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test50" depends="init.a3props,compile"
          description=" --> test user.clearSubscription(), restart of server, and check there is no message">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test50"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test50"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test51" depends="init.a3props,compile"
          description=" --> test user.deleteMessage(), restart of server, and check there is no message">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test51"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test51"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test56" depends="init.a3props,compile"
          description=" --> test createQueue method">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test56"/>
      <param name="testid" value="noreg.test56"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test57" depends="noreg.test57-1,noreg.test57-2"/>

  <target name="noreg.test57-1" depends="init.a3props,compile"
          description=" --> Test server restart with a lot of big messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test57"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test57-1"/>
      <param name="jvmargs" value="-DDestination=org.objectweb.joram.client.jms.Queue -DMsgSize=256 -DNbMsg=238"/>
    </antcall>
  </target>

  <target name="noreg.test57-2" depends="init.a3props,compile"
          description=" --> Test server restart with a lot of big messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test57"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="testid" value="noreg.test57-2"/>
      <param name="jvmargs" value="-DMomMessageClass=org.objectweb.joram.shared.messages.MessageSoftRef -DDestination=org.objectweb.joram.client.jms.Queue -DMsgSize=256 -DNbMsg=5000"/>
    </antcall>
  </target>

  <target name="noreg.test58" depends="init.a3props,compile"
          description=" --> test creation of a consumer with a null topic id">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test58"/>
      <param name="testid" value="noreg.test58"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test59" depends="init.a3props,compile"
          description=" --> test the receipt of message through multiples subscription">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test59"/>
      <param name="testid" value="noreg.test59"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="noreg.test60" depends="init.a3props,compile"
          description=" --> Verify that there is no memory leak during connection opening [JORAM-20]">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.noreg.Test60"/>
      <param name="testid" value="noreg.test60"/>
      <param name="jndiconf" value="noreg/jndi.properties"/>
      <param name="a3conf" value="noreg/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
	
	<target name="noreg.test61" depends="init.a3props,compile"
	        description=" --> Disable the mechanism of pre-requesting of the messages [JORAM-33]">
	  <antcall target="test.run" inheritAll="true">
	    <param name="className" value="joram.noreg.Test61"/>
	    <param name="testid" value="noreg.test61"/>
	    <param name="jndiconf" value="noreg/jndi.properties"/>
	    <param name="a3conf" value="noreg/a3servers1.xml"/>
	    <param name="jvmargs" value=""/>
	  </antcall>
  </target>
	
	<target name="noreg.test62" depends="init.a3props,compile"
	        description=" --> Verify that there is no memory leak during connection opening [JORAM-XX]">
	  <antcall target="test.run" inheritAll="true">
	    <param name="className" value="joram.noreg.Test62"/>
	    <param name="testid" value="noreg.test62"/>
	    <param name="jndiconf" value="noreg/jndi.properties"/>
	    <param name="a3conf" value="noreg/a3servers1.xml"/>
	    <param name="jvmargs" value=""/>
	  </antcall>
  </target>

  <!-- end noreg -->

  <!-- test with bug -->

  <target name="withbug.test1" depends="init.a3props,compile"
          description=" --> bug">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.withbug.Test1"/>
      <param name="jndiconf" value="withbug/jndi.properties"/>
      <param name="a3conf" value="withbug/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="withbug.test2" depends="init.a3props,compile"
          description=" --> bug">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.withbug.Test2"/>
      <param name="jndiconf" value="withbug/jndi.properties"/>
      <param name="a3conf" value="withbug/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- end test with bug -->



  <!-- test xa -->
  <target name="xa.test1" depends="init.a3props,compile"
          description=" --> Basic functioning of XA">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.xa.Test1"/>
      <param name="jndiconf" value="xa/jndi.properties"/>
      <param name="a3conf" value="xa/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="xa.test2" depends="init.a3props,compile"
          description=" --> test commit">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.xa.Test2"/>
      <param name="jndiconf" value="xa/jndi.properties"/>
      <param name="a3conf" value="xa/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="xa.test3" depends="init.a3props,compile"
          description=" --> test rollback : on send and on receive">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.xa.Test3"/>
      <param name="jndiconf" value="xa/jndi.properties"/>
      <param name="a3conf" value="xa/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="xa.test4" depends="init.a3props,compile"
          description=" --> test recover : on send and on receive">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.xa.Test4"/>
      <param name="jndiconf" value="xa/jndi.properties"/>
      <param name="a3conf" value="xa/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

	<target name="xa.test5" depends="init.a3props,compile"
	          description=" --> test recover (kill/restart server): on send and on receive">
	  <antcall target="test.run" inheritAll="true">
	    <param name="className" value="joram.xa.Test5"/>
	    <param name="jndiconf" value="xa/jndi.properties"/>
	    <param name="a3conf" value="xa/a3servers1.xml"/>
	    <param name="jvmargs" value=""/>
	  </antcall>
	</target>
	
  <target name="xa.test6" depends="init.a3props,compile"
          description=" --> test rollback : on receive , check JMSRedelivered (JORAM-41)">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.xa.Test6"/>
      <param name="jndiconf" value="xa/jndi.properties"/>
      <param name="a3conf" value="xa/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

	<target name="xa.test7" depends="init.a3props,compile"
	          description=" --> test the persistence behavior with denied messages (JORAM-59)">
	  <antcall target="test.run" inheritAll="true">
	    <param name="className" value="joram.xa.Test7"/>
	    <param name="jndiconf" value="xa/jndi.properties"/>
	    <param name="a3conf" value="xa/a3servers1.xml"/>
	    <param name="jvmargs" value=""/>
	  </antcall>
	</target>

  <!-- end test xa -->

  <!-- start bridgejms test -->
  <target name="bridge.jms.test" depends="init.a3props,compile">
     <parallel>
       <antcall target="test.run" inheritAll="true"/>
       
       <sequential>
         <sleep seconds="4"/>
         <java classname="${adminClassName}" failonerror="no" fork="yes" dir="${test.dir}">
           <classpath path="${project.class.path}"/>
           <jvmarg line="${jvmadminArgs}"/>
         </java>
       </sequential>
     </parallel>
   </target>
  
  <!-- Old bridge tests -->
  <target name="bridge.jms.test1" depends="init.a3props,compile"
          description=" --> producer on foreign queue, consumer on bridge queue ">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test1"/>
        <param name="adminClassName" value="joram.bridgejms.Admin"/>
        <param name="className" value="joram.bridgejms.BridgeTest"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.test1.1" depends="init.a3props,compile"
           description=" --> producer on foreign queue, consumer on bridge queue (automatic)">
       <antcall target="bridge.jms.test" inheritAll="true">
         <param name="testid" value="bridge.jms.test1.1"/>
         <param name="adminClassName" value="joram.bridgejms.Admin"/>
         <param name="className" value="joram.bridgejms.BridgeTest"/>
         <param name="jndiconf" value="bridgejms/jndi.properties"/>
         <param name="a3conf" value="bridgejms/a3servers1.xml"/>
         <param name="jvmargs" value=""/>
         <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
       </antcall>
   </target>
	  
  <target name="bridge.jms.test2" depends="init.a3props,compile"
          description=" --> publisher on foreign topic and subscriber on bridge topic">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test2"/>
        <param name="adminClassName" value="joram.bridgejms.Admin"/>
        <param name="className" value="joram.bridgejms.BridgeTest2"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.test2.1" depends="init.a3props,compile"
          description=" --> publisher on foreign topic and subscriber on bridge topic (automatic)">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test2.1"/>
        <param name="adminClassName" value="joram.bridgejms.Admin"/>
        <param name="className" value="joram.bridgejms.BridgeTest2"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
      </antcall>
  </target>

  <target name="bridge.jms.test3" depends="init.a3props,compile"
          description=" --> publisher on bridge topic and subscriber on foreign topic">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test3"/>
        <param name="adminClassName" value="joram.bridgejms.Admin"/>
        <param name="className" value="joram.bridgejms.BridgeTest3"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value="-Dasync=true"/> <!-- needed to test the correct behavior -->
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.test3.1" depends="init.a3props,compile"
          description=" --> publisher on bridge topic and subscriber on foreign topic (automatic)">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test3.1"/>
        <param name="adminClassName" value="joram.bridgejms.Admin"/>
        <param name="className" value="joram.bridgejms.BridgeTest3"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value="-Dasync=true"/> <!-- needed to test the correct behavior -->
        <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
      </antcall>
  </target>

  <target name="bridge.jms.test4" depends="init.a3props,compile"
          description=" --> producer on bridge queue and consumer on foreign queue">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test4"/>
        <param name="adminClassName" value="joram.bridgejms.Admin"/>
        <param name="className" value="joram.bridgejms.BridgeTest4"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>

  <target name="bridge.jms.test5" depends="init.a3props,compile"
          description=" --> producer on bridge queue and subscriber on foreign topic">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test5"/>
        <param name="adminClassName" value="joram.bridgejms.CrossAdmin"/>
        <param name="className" value="joram.bridgejms.BridgeTest5"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.test5.1" depends="init.a3props,compile"
          description=" --> producer on bridge queue and subscriber on foreign topic (automatic)">
    <antcall target="bridge.jms.test" inheritAll="true">
      <param name="testid" value="bridge.jms.test5.1"/>
       <param name="adminClassName" value="joram.bridgejms.CrossAdmin"/>
       <param name="className" value="joram.bridgejms.BridgeTest5"/>
       <param name="jndiconf" value="bridgejms/jndi.properties"/>
       <param name="a3conf" value="bridgejms/a3servers1.xml"/>
       <param name="jvmargs" value=""/>
       <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
    </antcall>
  </target>

  <target name="bridge.jms.test6" depends="init.a3props,compile"
          description=" --> publisher on bridge topic and consumer on  foreign queue">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test6"/>
        <param name="adminClassName" value="joram.bridgejms.CrossAdmin"/>
        <param name="className" value="joram.bridgejms.BridgeTest6"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.test6.1" depends="init.a3props,compile"
          description=" --> publisher on bridge topic and consumer on  foreign queue (automatic)">
    <antcall target="bridge.jms.test" inheritAll="true">
      <param name="testid" value="bridge.jms.test6.1"/>
      <param name="adminClassName" value="joram.bridgejms.CrossAdmin"/>
      <param name="className" value="joram.bridgejms.BridgeTest6"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
      <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test8" depends="init.a3props,compile"
          description=" --> Use 2 bridge queues to send and receive messages through a foreign queue">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test8"/>
      <param name="className" value="joram.bridgejms.BridgeTest8"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
  
  <target name="bridge.jms.testX3" depends="init.a3props,compile"
          description=" --> Use 2 bridge queues to send and receive messages through a foreign queue">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.testX3"/>
      <param name="className" value="joram.bridgejms.BridgeTestX3"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers1.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="bridge.jms.xatest1" depends="init.a3props,compile"
          description=" --> producer on XA foreign queue and consumer on a bridge">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest1"/>
        <param name="adminClassName" value="joram.bridgejms.XAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest1"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.xatest1.1" depends="init.a3props,compile"
          description=" --> producer on XA foreign queue and consumer on a bridge (automatic)">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest1.1"/>
        <param name="adminClassName" value="joram.bridgejms.XAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest1"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
      </antcall>
  </target>

  <target name="bridge.jms.xatest2" depends="init.a3props,compile"
          description=" --> publisher on XA foreign topic and subscriber on a bridge">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest2"/>
        <param name="adminClassName" value="joram.bridgejms.XAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest2"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>

  <target name="bridge.jms.xatest2.1" depends="init.a3props,compile"
          description=" --> publisher on XA foreign topic and subscriber on a bridge (automatic)">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest2.1"/>
        <param name="adminClassName" value="joram.bridgejms.XAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest2"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
      </antcall>
  </target>
  
  <target name="bridge.jms.xatest3" depends="init.a3props,compile"
          description=" --> consumer on XA foreign queue and producer on bridge queue">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest3"/>
        <param name="adminClassName" value="joram.bridgejms.XAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest3"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>

  <target name="bridge.jms.xatest4" depends="init.a3props,compile"
          description=" --> subscriber on XA foreign topic and publisher on bridge topic">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest4"/>
        <param name="adminClassName" value="joram.bridgejms.XAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest4"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>

  <target name="bridge.jms.xatest4.1" depends="init.a3props,compile"
           description=" --> subscriber on XA foreign topic and publisher on bridge topic (automatic)">
       <antcall target="bridge.jms.test" inheritAll="true">
         <param name="testid" value="bridge.jms.xatest4.1"/>
         <param name="adminClassName" value="joram.bridgejms.XAAdmin"/>
         <param name="className" value="joram.bridgejms.XABridgeTest4"/>
         <param name="jndiconf" value="bridgejms/jndi.properties"/>
         <param name="a3conf" value="bridgejms/a3servers1.xml"/>
         <param name="jvmargs" value=""/>
         <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
       </antcall>
   </target>

  <target name="bridge.jms.xatest5" depends="init.a3props,compile"
          description=" --> consumer on XA foreign queue and publisher on bridge topic">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest5"/>
        <param name="adminClassName" value="joram.bridgejms.CrossXAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest5"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.xatest5.1" depends="init.a3props,compile"
          description=" --> consumer on XA foreign queue and publisher on bridge topic">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest5.1"/>
        <param name="adminClassName" value="joram.bridgejms.CrossXAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest5"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
      </antcall>
  </target>

  <target name="bridge.jms.xatest6" depends="init.a3props,compile"
          description=" -->  subscriber on XA foreign topic and producer on bridge queue">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest6"/>
        <param name="adminClassName" value="joram.bridgejms.CrossXAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest6"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.xatest6.1" depends="init.a3props,compile"
          description=" -->  subscriber on XA foreign topic and producer on bridge queue (automatic)">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.xatest6.1"/>
        <param name="adminClassName" value="joram.bridgejms.CrossXAAdmin"/>
        <param name="className" value="joram.bridgejms.XABridgeTest6"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers1.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value="-DautomaticRequest=true"/>
      </antcall>
  </target>

  <!-- New bridge (using acquisition/distribution framework) tests -->
  <target name="bridge.jms.admintest1xA" depends="init.a3props,compile"
           description=" --> Creates bridge queues through the administration API.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.admintest1xA"/>
      <param name="className" value="joram.bridgejms.BridgeAdminTest1a"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
    </antcall>
  </target>
	
  <target name="bridge.jms.admintest1xB" depends="init.a3props,compile"
           description=" --> Creates bridge topics through the administration API.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.admintest1xB"/>
      <param name="className" value="joram.bridgejms.BridgeAdminTest1b"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
    </antcall>
  </target>
	
  <target name="bridge.jms.admintest2xA" depends="init.a3props,compile"
           description=" --> Creates bridge queues through the XML administration scripts.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.admintest2x"/>
      <param name="className" value="joram.bridgejms.BridgeAdminTest2"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
    	<param name="joramAdmin" value="bridgejms/joramAdmin-A.xml"/>
    </antcall>
  </target>
	
  <target name="bridge.jms.admintest2xB" depends="init.a3props,compile"
           description=" --> Creates bridge topics through the XML administration scripts.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.admintest2x"/>
      <param name="className" value="joram.bridgejms.BridgeAdminTest2"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
    	<param name="joramAdmin" value="bridgejms/joramAdmin-B.xml"/>
    </antcall>
  </target>

  <target name="bridge.jms.test1x" depends="init.a3props,compile"
           description=" --> producer on foreign queue, consumer on bridge queue (using acquisition framework)">
       <antcall target="bridge.jms.test" inheritAll="true">
         <param name="testid" value="bridge.jms.test1x"/>
         <param name="adminClassName" value="joram.bridgejms.AcquisitionAdmin"/>
         <param name="className" value="joram.bridgejms.BridgeTest"/>
         <param name="jndiconf" value="bridgejms/jndi.properties"/>
         <param name="a3conf" value="bridgejms/a3servers.xml"/>
         <param name="jvmargs" value=""/>
         <param name="jvmadminArgs" value=""/>
       </antcall>
   </target>
  
  <target name="bridge.jms.test2x" depends="init.a3props,compile"
          description=" --> publisher on foreign topic and subscriber on bridge topic (using acquisition framework)">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test2x"/>
        <param name="adminClassName" value="joram.bridgejms.AcquisitionAdmin"/>
        <param name="className" value="joram.bridgejms.BridgeTest2"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value=""/>
      </antcall>
  </target>
  
  <target name="bridge.jms.test3x" depends="init.a3props,compile"
          description=" --> publisher on bridge topic and subscriber on foreign topic (using distribution framework)">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test3xA"/>
        <param name="adminClassName" value="joram.bridgejms.DistributionAdmin"/>
        <param name="className" value="joram.bridgejms.BridgeTest3"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers.xml"/>
        <param name="jvmargs" value="-Dasync=true"/>
        <param name="jvmadminArgs" value="-Dasync=true"/>
      </antcall>
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test3xB"/>
        <param name="adminClassName" value="joram.bridgejms.DistributionAdmin"/>
        <param name="className" value="joram.bridgejms.BridgeTest3"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers.xml"/>
        <param name="jvmargs" value="-Dasync=false"/>
        <param name="jvmadminArgs" value="-Dasync=false"/>
      </antcall>
  </target>
  
  <target name="bridge.jms.test4x" depends="init.a3props,compile"
          description=" --> producer on bridge queue and consumer on foreign queue (using distribution framework)">
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test4xA"/>
        <param name="adminClassName" value="joram.bridgejms.DistributionAdmin"/>
        <param name="className" value="joram.bridgejms.BridgeTest4"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value="-Dasync=true"/>
      </antcall>
      <antcall target="bridge.jms.test" inheritAll="true">
        <param name="testid" value="bridge.jms.test4xB"/>
        <param name="adminClassName" value="joram.bridgejms.DistributionAdmin"/>
        <param name="className" value="joram.bridgejms.BridgeTest4"/>
        <param name="jndiconf" value="bridgejms/jndi.properties"/>
        <param name="a3conf" value="bridgejms/a3servers.xml"/>
        <param name="jvmargs" value=""/>
        <param name="jvmadminArgs" value="-Dasync=false"/>
      </antcall>
  </target>
  
  <target name="bridge.jms.test5x" depends="init.a3props,compile"
          description=" --> producer on bridge queue and subscriber on foreign topic (using distribution framework)">
    <antcall target="bridge.jms.test" inheritAll="true">
       <param name="testid" value="bridge.jms.test5x"/>
       <param name="adminClassName" value="joram.bridgejms.DistributionCrossAdmin"/>
       <param name="className" value="joram.bridgejms.BridgeTest5"/>
       <param name="jndiconf" value="bridgejms/jndi.properties"/>
       <param name="a3conf" value="bridgejms/a3servers.xml"/>
       <param name="jvmargs" value=""/>
       <param name="jvmadminArgs" value=""/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test6x" depends="init.a3props,compile"
          description=" --> publisher on bridge topic and consumer on  foreign queue (using distribution framework)">
    <antcall target="bridge.jms.test" inheritAll="true">
      <param name="testid" value="bridge.jms.test6x"/>
      <param name="adminClassName" value="joram.bridgejms.DistributionCrossAdmin"/>
      <param name="className" value="joram.bridgejms.BridgeTest6"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="jvmadminArgs" value=""/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test7" depends="init.a3props,compile"
          description=" --> distribute to 2 JMS servers (using distribution framework)">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.bridgejms.BridgeTest7"/>
      <param name="testid" value="bridge.jms.test7"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test8x" depends="init.a3props,compile"
          description=" --> Use 2 bridge queues to send and receive messages through a foreign queue">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test8xA"/>
      <param name="className" value="joram.bridgejms.BridgeTest8x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test8xB"/>
      <param name="className" value="joram.bridgejms.BridgeTest8x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=false"/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test9x" depends="init.a3props,compile"
          description=" --> Use 2 bridge queues to send and receive messages through a foreign queue">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test9xA"/>
      <param name="className" value="joram.bridgejms.BridgeTest9x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test9xB"/>
      <param name="className" value="joram.bridgejms.BridgeTest9x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=false"/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test10x" depends="init.a3props,compile"
          description=" --> Use 2 bridge queues to send and receive messages through a foreign queue">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test10xA"/>
      <param name="className" value="joram.bridgejms.BridgeTest10x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test10xB"/>
      <param name="className" value="joram.bridgejms.BridgeTest10x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=false"/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test11x" depends="init.a3props,compile"
          description=" --> Creates and configures a distribution queue as the foreign server is not already running.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test11xA"/>
      <param name="className" value="joram.bridgejms.BridgeTest11x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test11xB"/>
      <param name="className" value="joram.bridgejms.BridgeTest11x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=false"/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test12x" depends="init.a3props,compile"
          description=" --> Tests various behavior about the distribution queue and JMSConnectionService">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test12xA"/>
      <param name="className" value="joram.bridgejms.BridgeTest12x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers4.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test12xB"/>
      <param name="className" value="joram.bridgejms.BridgeTest12x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers4.xml"/>
      <param name="jvmargs" value="-Dasync=false"/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test13x" depends="init.a3props,compile"
          description=" --> Tests behavior of the acquisition queue during foreign server failures">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test13x"/>
      <param name="className" value="joram.bridgejms.BridgeTest13x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
    </antcall>
  </target>
  
  <target name="bridge.jms.test14x" depends="init.a3props,compile"
          description=" --> Test the bridge with Bytes, Stream or Map messages">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.test14x"/>
      <param name="className" value="joram.bridgejms.BridgeTest14x"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
    </antcall>
  </target>

  <target name="bridge.jms.testX" depends="init.a3props,compile"
          description=" --> ">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.testXa"/>
      <param name="className" value="joram.bridgejms.BridgeTestX"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.testXb"/>
      <param name="className" value="joram.bridgejms.BridgeTestX"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=false"/>
    </antcall>
  </target>
  
  <target name="bridge.jms.testX2" depends="init.a3props,compile"
          description=" --> ">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.testX2a"/>
      <param name="className" value="joram.bridgejms.BridgeTestX2"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=true"/>
    </antcall>
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.testX2b"/>
      <param name="className" value="joram.bridgejms.BridgeTestX2"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers.xml"/>
      <param name="jvmargs" value="-Dasync=false"/>
    </antcall>
  </target>
	
	<target name="bridge.jms.asynctest" depends="init.a3props,compile"
	          description=" --> producer on bridge queue and subscriber on foreign queue with slow interceptor">
	      <antcall target="test.run" inheritAll="true">
	        <param name="testid" value="bridge.jms.asynctest"/>
	        <param name="className" value="joram.bridgejms.AsyncBridgeTest"/>
	        <param name="jndiconf" value="bridgejms/jndi.properties"/>
	        <param name="a3conf" value="bridgejms/a3servers3.xml"/>
	        <param name="jvmargs" value=""/>
	        <param name="jvmadminArgs" value=""/>
	      	<param name="manifest.mf" value="joram/bridgejms/manifest.mf"/>
	      	<param name="include.classes" value="joram/bridgejms/Slow*.class"/>
	      </antcall>
	  </target>
	
	<target name="bridge.jms.asyncexctest" depends="init.a3props,compile"
		          description=" --> producer on bridge queue and subscriber on foreign queue with slow interceptor stop/restart server">
	  <antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.jms.asyncexctest"/>
		  <param name="className" value="joram.bridgejms.AsyncBridgeExceptionTest"/>
		  <param name="jndiconf" value="bridgejms/jndi.properties"/>
		  <param name="a3conf" value="bridgejms/a3servers3.xml"/>
		  <param name="jvmargs" value=""/>
		  <param name="jvmadminArgs" value=""/>
		  <param name="manifest.mf" value="joram/bridgejms/manifest.mf"/>
		  <param name="include.classes" value="joram/bridgejms/Slow*.class"/>
		</antcall>
	</target>
		
  <target name="bridge.jms.acquisitiontest" depends="init.a3props,compile"
	        description=" --> producer on foreign queue and subscriber on joram queue with slow interceptor stop/restart server">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="bridge.jms.acquisitiontest"/>
      <param name="className" value="joram.bridgejms.BridgeAcquisitionTest"/>
      <param name="jndiconf" value="bridgejms/jndi.properties"/>
      <param name="a3conf" value="bridgejms/a3servers3.xml"/>
      <param name="jvmargs" value=""/>
      <param name="jvmadminArgs" value=""/>
      <param name="manifest.mf" value="joram/bridgejms/manifest.mf"/>
      <param name="include.classes" value="joram/bridgejms/Slow*.class"/>
    </antcall>
  </target>
	
  <!-- end bridgejms test -->
	
  <!-- start bridgeamqp test -->
	
  <target name="tests.bridge.amqp" description=" --> launch all amqp bridge tests">
  	<antcall target="bridge.amqp.adminTest1a"/>
  	<antcall target="bridge.amqp.adminTest1b"/>
    <antcall target="bridge.amqp.adminTest2a"/>
    <antcall target="bridge.amqp.adminTest2b"/>
    <antcall target="bridge.amqp.test1"/>
    <antcall target="bridge.amqp.test2"/>
    <antcall target="bridge.amqp.test3"/>
    <antcall target="bridge.amqp.test4"/>
    <antcall target="bridge.amqp.test5"/>
  </target>

  <target name="server.amqp" description=" --> start an amqp server" depends="init.a3props">
    <antcall target="init.test" inheritAll="true">
      <param name="a3conf" value="amqp_a3servers.xml" />
	  </antcall>
	  <java classname="fr.dyade.aaa.agent.AgentServer" failonerror="no" fork="no" dir="${test.dir}">
	    <classpath path="${project.class.path}"/>
	    <jvmarg line="-Dcom.sun.management.jmxremote"/>
	    <!-- jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y"/ -->
	    <arg line="1 ./s1"/>
	  </java>
  </target>

  <target name="bridge.amqp.adminTest1a" depends="init.a3props,compile"
	        description=" --> Creates 2 bridge queues through the administration API.">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.adminTest1a"/>
		  <param name="className" value="joram.bridgeamqp.AdminTest1a"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value=""/>
		</antcall>
	  </sequential>
	</parallel>
  </target>

  <target name="bridge.amqp.adminTest1b" depends="init.a3props,compile"
	        description=" --> Creates 2 bridge topics through the administration API.">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.adminTest1b"/>
		  <param name="className" value="joram.bridgeamqp.AdminTest1b"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value=""/>
		</antcall>
	  </sequential>
	</parallel>
  </target>

  <target name="bridge.amqp.adminTest2a" depends="init.a3props,compile"
	        description=" --> Creates 2 bridge queues through the XML administration scripts.">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.adminTest2a"/>
		  <param name="className" value="joram.bridgeamqp.AdminTest2"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
    	<param name="joramAdmin" value="bridgeamqp/joramAdmin-A.xml"/>
		  <param name="jvmargs" value=""/>
		</antcall>
	  </sequential>
	</parallel>
  </target>

  <target name="bridge.amqp.adminTest2b" depends="init.a3props,compile"
	        description=" --> Creates 2 bridge topics through the XML administration scripts.">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.adminTest2b"/>
		  <param name="className" value="joram.bridgeamqp.AdminTest2"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
    	<param name="joramAdmin" value="bridgeamqp/joramAdmin-B.xml"/>
		  <param name="jvmargs" value=""/>
		</antcall>
	  </sequential>
	</parallel>
  </target>

  <target name="bridge.amqp.test1" depends="init.a3props,compile"
	        description=" --> Use 2 bridge queues to send and receive messages from a foreign AMQP queue, stop/start of the Joram bridge server.">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.test1"/>
		  <param name="className" value="joram.bridgeamqp.Test1"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value=""/>
		</antcall>
	  </sequential>
	</parallel>
  </target>
	
  <target name="bridge.amqp.test2" depends="init.a3props,compile"
    description=" --> Use 2 bridge queues to send and receive messages from a foreign AMQP queue, kill/start of the Joram bridge server.">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.test2"/>
		  <param name="className" value="joram.bridgeamqp.Test2"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value=""/>
		</antcall>
	  </sequential>
	</parallel>
  </target>
	
  <target name="bridge.amqp.test3" depends="init.a3props,compile"
    description=" --> Use a bridge queue to send messages to a foreign AMQP queue,randomly kill and start of the Joram bridge server.">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.test3"/>
		  <param name="className" value="joram.bridgeamqp.Test3"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value=""/>
	    </antcall>
	  </sequential>
	</parallel>
  </target>
	
  <target name="bridge.amqp.test4" depends="init.a3props,compile"
    description=" --> ????? .">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.test4"/>
		  <param name="className" value="joram.bridgeamqp.Test4"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value=""/>
		  <param name="jvmargs" value="-DDEBUG=false -Dnbloop=5"/>
		</antcall>
	  </sequential>
	</parallel>
  </target>
	
  <target name="bridge.amqp.test5" depends="init.a3props,compile"
    description=" --> ????? .">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.test5"/>
		  <param name="className" value="joram.bridgeamqp.Test5"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value="-DDEBUG=false -Dnbloop=5"/>
		</antcall>
	  </sequential>
	</parallel>
  </target>
	
  <target name="bridge.amqp.test4.long" depends="init.a3props,compile"
    description=" --> ????? .">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.test4"/>
		  <param name="className" value="joram.bridgeamqp.Test4"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value=""/>
		  <param name="jvmargs" value="-DDEBUG=true -Dnbloop=50"/>
		</antcall>
	  </sequential>
	</parallel>
  </target>
	
  <target name="bridge.amqp.test5.long" depends="init.a3props,compile"
    description=" --> ????? .">
	<parallel>
	  <antcall target="server.amqp" />
	  <sequential>
		<sleep seconds="2"/>
		<antcall target="test.run" inheritAll="true">
		  <param name="testid" value="bridge.amqp.test5"/>
		  <param name="className" value="joram.bridgeamqp.Test5"/>
		  <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
		  <param name="isOSGi" value="true"/>
		  <param name="jndiconf" value="bridgeamqp/jndi.properties"/>
		  <param name="a3conf" value="bridgeamqp/a3servers1.xml"/>
		  <param name="jvmargs" value="-DDEBUG=false -Dnbloop=50"/>
		</antcall>
	  </sequential>
	</parallel>
  </target>
	
  <!-- end bridgeamqp test -->

  <!-- start scheduler test -->
  <target name="schedqueue.test1" depends="init.a3props,compile"
          description=" --> send message specified schedulerdate : first in futur, second in pass">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.schedqueue.Test1"/>
      <param name="testid" value="schedqueue.test1"/>
      <param name="jndiconf" value="schedqueue/jndi.properties"/>
      <param name="a3conf" value="schedqueue/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="schedqueue.test2" depends="init.a3props,compile"
          description=" --> send two message, first with schedulerdate > of second message schedulerdate. check receive the second before the fisrt">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.schedqueue.Test2"/>
      <param name="testid" value="schedqueue.test2"/>
      <param name="jndiconf" value="schedqueue/jndi.properties"/>
      <param name="a3conf" value="schedqueue/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="schedqueue.test3" depends="init.a3props,compile"
          description=" --> check the SchedulerQueue behavior after a server restart">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.schedqueue.Test3"/>
      <param name="testid" value="schedqueue.test3"/>
      <param name="jndiconf" value="schedqueue/jndi.properties"/>
      <param name="a3conf" value="schedqueue/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="schedqueue.test4" depends="init.a3props,compile"
          description=" --> check the SchedulerQueue with a great number of messages">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.schedqueue.Test4"/>
      <param name="testid" value="schedqueue.test4"/>
      <param name="jndiconf" value="schedqueue/jndi.properties"/>
      <param name="a3conf" value="schedqueue/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="schedqueue.test5" depends="init.a3props,compile"
          description=" --> check the creation of SchedulerQueue through XML administration scripts">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.schedqueue.Test5"/>
      <param name="testid" value="schedqueue.test5"/>
      <param name="jndiconf" value="schedqueue/jndi.properties"/>
      <param name="a3conf" value="schedqueue/a3servers.xml"/>
    	<param name="joramAdmin" value="schedqueue/joramAdmin.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
  <!-- end scheduler test -->


  <!-- test cluster -->
  <target name="cluster.testTAdmin" depends="init.a3props,compile"
          description=" --> Test administration of clusters">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testAdmin"/>
      <param name="className" value="joram.cluster.TestTAdmin"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
  
  <target name="cluster.testT1" depends="init.a3props,compile"
          description=" -->  test topic cluster send and receive message">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.cluster.TestT1"/>
      <param name="testid" value="cluster.testT1"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="cluster.testT2" depends="init.a3props,compile"
          description=" -->  Test : cluster an already clustered topic">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.cluster.TestT2"/>
      <param name="testid" value="cluster.testT2"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
  
  <target name="cluster.testT3" depends="init.a3props,compile"
          description=" -->  Test : two clusters in a hierarchy">
    <antcall target="test.run" inheritAll="true">
      <param name="className" value="joram.cluster.TestT3"/>
      <param name="testid" value="cluster.testT3"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
  
  <target name="cluster.testQAdmin" depends="init.a3props,compile"
          description=" --> Test administration of clusters">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testAdmin"/>
      <param name="className" value="joram.cluster.TestQAdmin"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="cluster.testQ1" depends="init.a3props,compile"
          description=" --> Test local receiving if producer and consumer">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testQ1"/>
      <param name="className" value="joram.cluster.TestQ1"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="cluster.testQ2" depends="init.a3props,compile"
          description=" --> Test message forwarding when no consumer">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testQ2"/>
      <param name="className" value="joram.cluster.TestQ2"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="cluster.testQ3" depends="init.a3props,compile"
          description=" --> Test request forwarding when no producer">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testQ3"/>
      <param name="className" value="joram.cluster.TestQ3"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="cluster.testQ4" depends="init.a3props,compile"
          description=" --> check producThreshold property">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testQ4"/>
      <param name="className" value="joram.cluster.TestQ4"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="cluster.testQ5" depends="init.a3props,compile"
          description=" --> check consumThreshold property ">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testQ5"/>
      <param name="className" value="joram.cluster.TestQ5"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="cluster.testQ6" depends="init.a3props,compile"
          description=" --> check ClusterDestination and ClusterConnectionFactory objects">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testQ6"/>
      <param name="className" value="joram.cluster.TestQ6"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <target name="cluster.testQ7" depends="init.a3props,compile"
          description=" --> check XML scripts for clusters">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="cluster.testQ7"/>
      <param name="className" value="joram.cluster.TestQ7"/>
      <param name="jndiconf" value="cluster/jndi.properties"/>
      <param name="a3conf" value="cluster/a3servers.xml"/>
    	<param name="joramAdmin" value="cluster/joramAdmin.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>
  <!-- end test cluster -->

  <!--  test hierarchical -->

  <target name="hierarchical.test1" depends="init.a3props,compile"
          description=" --> test hierarchical topic">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="hierarchical.test1"/>
      <param name="className" value="joram.hierarchical.Test1"/>
      <param name="jndiconf" value="hierarchical/jndi.properties"/>
      <param name="a3conf" value="hierarchical/a3servers.xml"/>
      <param name="jvmargs" value=""/>
    </antcall>
  </target>

  <!-- end  test hierarchical -->


  <!--  test ssl -->

  <!-- Initializes the ssl centralized configuration -->
  <target name="sslsimple_init" depends="init.a3props,compile">
    <property name="keystore" location="${test.dir}/joram_ks"/>
    <property name="keystore_pass" value="jorampass"/>
    <antcall target="init.test" inheritAll="true">
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
      <param name="a3conf" value="ssl/a3servers.xml"/>
      <param name="jndiconf" value="ssl/jndi.properties"/>
    </antcall>
    <copy file="ssl/joram_ks" todir="${test.dir}"/>
  </target>


  <target name="ssl.test" depends="sslsimple_init"
          description=" --> test with ssl conection">
    <java classname="joram.ssl.Test" failonerror="no" fork="yes" dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg line="-Dfelix.dir=${felix.dir} -Dorg.objectweb.joram.keystore=${keystore} -Dorg.objectweb.joram.keystorepass=${keystore_pass} -Dframework.TestCase.OutFile=${report.file} "/>
    </java>
  </target>

  <!-- end test ssl -->

  <!--  start JCA tests -->

  <target name="jca.test1" description=" --> test joram connector (colocated server)">
    <antcall target="jca.test1.1"/>
    <antcall target="jca.test1.2"/>
    <antcall target="jca.test1.3"/>
    <antcall target="jca.test1.4"/>
  </target>

  <target name="jca.test1.1" depends="init.a3props,compile"
	        description=" --> test joram connector (colocated server)">
    <antcall target="jca.test.run" inheritAll="true">
      <param name="className" value="joram.connector.ConnectorTest1"/>
      <param name="testid" value="jca.test1.1"/>
      <param name="jvmargs" value="-Dcolocated=true"/>
      <param name="args" value=""/>
      <param name="a3conf" value="connector/a3servers.xml"/>
      <param name="jndiconf" value="connector/jndi.properties"/>
      <param name="joramAdmin" value="connector/joramAdmin1.xml"/>
    	<param name="joramAdminExport" value="connector/joramAdminExport.xml"/>
    </antcall>
  </target>

  <target name="jca.test1.2" depends="init.a3props,compile"
	        description=" --> test joram connector (colocated server)">
    <antcall target="jca.test.run" inheritAll="true">
      <param name="className" value="joram.connector.ConnectorTest1"/>
      <param name="testid" value="jca.test1.2"/>
      <param name="jvmargs" value="-Dcolocated=true"/>
      <param name="args" value=""/>
      <param name="a3conf" value="connector/a3servers.xml"/>
      <param name="jndiconf" value="connector/jndi.properties"/>
      <param name="joramAdmin" value="connector/joramAdmin2.xml"/>
    	<param name="joramAdminExport" value="connector/joramAdminExport.xml"/>
    </antcall>
  </target>

  <target name="jca.test1.3" depends="init.a3props,compile"
	        description=" --> test joram connector (colocated server)">
    <antcall target="jca.test.run" inheritAll="true">
      <param name="className" value="joram.connector.ConnectorTest1"/>
      <param name="testid" value="jca.test1.3"/>
      <param name="jvmargs" value="-Dcolocated=true"/>
      <param name="args" value=""/>
      <param name="a3conf" value="connector/a3servers.xml"/>
      <param name="jndiconf" value="connector/jndi.properties"/>
      <param name="joramAdmin" value="connector/joramAdmin3.xml"/>
    	<param name="joramAdminExport" value="connector/joramAdminExport.xml"/>
    </antcall>
  </target>
	
  <target name="jca.test1.4" depends="init.a3props,compile"
          description=" --> test joram connector (remote server)">
    <antcall target="jca.test.run" inheritAll="true">
      <param name="className" value="joram.connector.ConnectorTest1"/>
      <param name="testid" value="jca.test1.4"/>
      <param name="jvmargs" value="-Dcolocated=false"/>
      <param name="args" value=""/>
      <param name="a3conf" value="connector/a3servers.xml"/>
      <param name="jndiconf" value="connector/jndi.properties"/>
      <param name="joramAdmin" value="connector/joramAdmin3.xml"/>
    	<param name="joramAdminExport" value="connector/joramAdminExport2.xml"/>
    </antcall>
  </target>
	
  <target name="jca.test2" depends="init.a3props,compile"
          description=" --> test joram connector with external client (colocated server)">
    <antcall target="jca.test.run" inheritAll="true">
      <param name="className" value="joram.connector.ConnectorTest2"/>
      <param name="testid" value="jca.test2"/>
      <param name="args" value=""/>
      <param name="a3conf" value="connector/a3servers.xml"/>
      <param name="jndiconf" value="connector/jndi.properties"/>
      <param name="joramAdmin" value="connector/joramAdmin4.xml"/>
    	<param name="joramAdminExport" value="connector/joramAdminExport.xml"/>
    </antcall>
  </target>

  <target name="jca.test.run">
    <antcall target="init.test" inheritAll="true"/>
    <copy file="connector/joramAdminExport.xml" todir="${test.dir}"/>
    <antcall target="test.start" inheritAll="true"/>
  </target>

  <!-- end JCA tests -->

  <!--  start dmq tests -->
	
  <target name="dmq.TestDmq1" depends="init.a3props,compile"
          description=" --> check threshold of specific queue and user">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.dmq.TestDmq1"/>
      <param name="testid" value="dmq.TestDmq1"/>
      <param name="jndiconf" value="dmq/jndi.properties"/>
      <param name="a3conf" value="dmq/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  <target name="dmq.TestDmq2" depends="init.a3props,compile"
          description=" --> check default threshold">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.dmq.TestDmq2"/>
      <param name="testid" value="dmq.TestDmq2"/>
      <param name="jndiconf" value="dmq/jndi.properties"/>
      <param name="a3conf" value="dmq/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  <target name="dmq.TestDmq3" depends="init.a3props,compile"
          description=" --> check default dmq">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.dmq.TestDmq3"/>
      <param name="testid" value="dmq.TestDmq3"/>
      <param name="jndiconf" value="dmq/jndi.properties"/>
      <param name="a3conf" value="dmq/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  <target name="dmq.TestDmq4" depends="init.a3props,compile"
          description=" --> check default dmq and default threshold for queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.dmq.TestDmq4"/>
      <param name="testid" value="dmq.TestDmq4"/>
      <param name="jndiconf" value="dmq/jndi.properties"/>
      <param name="a3conf" value="dmq/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dmq.TestDmq5" depends="init.a3props,compile"
          description=" --> check default dmq and default threshold for user">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.dmq.TestDmq5"/>
      <param name="testid" value="dmq.TestDmq5"/>
      <param name="jndiconf" value="dmq/jndi.properties"/>
      <param name="a3conf" value="dmq/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="dmq.TestDmq6" depends="init.a3props,compile"
          description=" --> check config dmq with joramAdmin.xml">
    <parallel>
      <antcall target="test.run" inheritAll="true">
        <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
        <param name="className" value="joram.dmq.TestDmq6"/>
        <param name="testid" value="dmq.TestDmq6"/>
        <param name="jndiconf" value="dmq/jndi.properties"/>
        <param name="a3conf" value="dmq/a3servers.xml"/>
        <param name="joramAdmin" value="dmq/joramAdmin.xml"/>
        <param name="jvmargs" value=""/>
        <param name="args" value=""/>
      </antcall>

      <sequential>
        <sleep seconds="3"/>
        <java classname="org.objectweb.joram.client.jms.admin.AdminModule"
              failonerror="no" fork="yes" dir="${test.dir}">
          <classpath path="${project.class.path}"/>
          <arg line="./joramAdmin.xml"/>
        </java>
      </sequential>
    </parallel>
  </target>
  
  <target name="dmq.TestDmq7" depends="init.a3props,compile"
          description=" --> test chaining dmqs">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.dmq.TestDmq7"/>
      <param name="testid" value="dmq.TestDmq7"/>
      <param name="a3conf" value="dmq/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="dmq.ChainedDMQ" depends="init.a3props,compile"
          description=" --> test chaining dmqs">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.dmq.ChainedDMQ"/>
      <param name="testid" value="dmq.ChainedDMQ"/>
      <param name="jndiconf" value="dmq/jndi.properties"/>
      <param name="a3conf" value="dmq/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <!-- end DMQ tests -->

  <!-- TTL tests -->
  <target name="ttl.Test1_Topic" depends="init.a3props,compile"
          description=" --> test ttl with with 2 distributed serveurs and a topic">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="ttl.Test1_Topic"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.ttl.Test1_Topic"/>
      <param name="jndiconf" value="ttl/jndi.properties"/>
      <param name="a3conf" value="ttl/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="ttl.Test2_Queue" depends="init.a3props,compile"
          description=" --> test ttl with with 2 distributed serveurs and a queue">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="ttl.Test2_Queue"/>
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.ttl.Test2_Queue"/>
      <param name="jndiconf" value="ttl/jndi.properties"/>
      <param name="a3conf" value="ttl/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  <!-- end TTL tests -->

  <!-- SUB tests -->
  <target name="sub.Sub" depends="init.a3props,compile"
          description=" --> test about creation of subscriber">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="sub.Sub"/>
      <param name="className" value="joram.sub.Sub"/>
      <param name="jndiconf" value="sub/jndi.properties"/>
      <param name="a3conf" value="sub/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="sub.Sub2" depends="init.a3props,compile"
          description=" --> test about creation of subscriber">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="sub.Sub2"/>
      <param name="className" value="joram.sub.Sub2"/>
      <param name="jndiconf" value="sub/jndi.properties"/>
      <param name="a3conf" value="sub/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="sub.Sub3" depends="init.a3props,compile"
          description=" --> test about creation of subscriber">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="sub.Sub3"/>
      <param name="className" value="joram.sub.Sub3"/>
      <param name="a3conf" value="sub/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="sub.Sub4" depends="init.a3props,compile"
          description=" --> test about creation of subscriber">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="sub.Sub4"/>
      <param name="className" value="joram.sub.Sub4"/>
      <param name="a3conf" value="sub/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="sub.Sub5" depends="init.a3props,compile"
          description=" --> test about creation of subscriber">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="sub.Sub5"/>
      <param name="className" value="joram.sub.Sub5"/>
      <param name="a3conf" value="sub/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  <!-- end SUB tests -->

  <target name="monitoring.TestT1" depends="init.a3props,compile"
          description=" --> Simple monitoring">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="monitoring.TestT1"/>
      <param name="className" value="joram.monitoring.TestMonitoringTopic1"/>
      <param name="jndiconf" value="monitoring/jndi.properties"/>
      <param name="a3conf" value="monitoring/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="monitoring.TestT2" depends="init.a3props,compile"
          description=" --> Tests changing monitoring properties">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="monitoring.TestT2"/>
      <param name="className" value="joram.monitoring.TestMonitoringTopic2"/>
      <param name="jndiconf" value="monitoring/jndi.properties"/>
      <param name="a3conf" value="monitoring/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="monitoring.TestT3" depends="init.a3props,compile"
          description=" --> Tests monitoring as a service.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="monitoring.TestT3"/>
      <param name="className" value="joram.monitoring.TestMonitoringTopic3"/>
      <param name="jndiconf" value="monitoring/jndi.properties"/>
      <param name="a3conf" value="monitoring/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="monitoring.TestQ1" depends="init.a3props,compile"
          description=" --> Simple monitoring">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="monitoring.TestQ1"/>
      <param name="className" value="joram.monitoring.TestMonitoringQueue1"/>
      <param name="jndiconf" value="monitoring/jndi.properties"/>
      <param name="a3conf" value="monitoring/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="monitoring.TestQ2" depends="init.a3props,compile"
          description=" --> Tests changing monitoring properties">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="monitoring.TestQ2"/>
      <param name="className" value="joram.monitoring.TestMonitoringQueue2"/>
      <param name="jndiconf" value="monitoring/jndi.properties"/>
      <param name="a3conf" value="monitoring/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="monitoring.TestQ3" depends="init.a3props,compile"
          description=" --> Tests monitoring as a service.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="monitoring.TestQ3"/>
      <param name="className" value="joram.monitoring.TestMonitoringQueue3"/>
      <param name="jndiconf" value="monitoring/jndi.properties"/>
      <param name="a3conf" value="monitoring/a3servers2.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="collector.AdminTest1" depends="init.a3props,compile"
          description=" --> Test collector creation through XML administration scripts">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.AdminTest1"/>
      <param name="className" value="joram.collector.AdminTest1"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
    	<param name="joramAdmin" value="collector/joramAdmin.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="collector.TestQ1" depends="init.a3props,compile"
          description=" --> Simple collector">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.TestQ1"/>
      <param name="className" value="joram.collector.TestCollectorQueue1"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="collector.TestQ2" depends="init.a3props,compile"
          description=" --> Simple collector">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.TestQ2"/>
      <param name="className" value="joram.collector.TestCollectorQueue2"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
    
  <target name="collector.TestQ3" depends="init.a3props,compile"
          description=" --> Simple collector">
  	<antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.TestQ3"/>
      <param name="className" value="joram.collector.TestCollectorQueue3"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
  		<param name="manifest.mf" value="joram/collector/manifest.mf"/>
  		<param name="include.classes" value="joram/collector/Empty*.class"/>
    </antcall>
  </target>
	
  <target name="collector.TestQ4" depends="init.a3props,compile"
          description=" --> Simple collector">
  	<antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.TestQ4"/>
      <param name="className" value="joram.collector.TestCollectorQueue4"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  	
  <target name="collector.TestT1" depends="init.a3props,compile"
          description=" --> Simple collector">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.TestT1"/>
      <param name="className" value="joram.collector.TestCollectorTopic1"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="collector.TestT2" depends="init.a3props,compile"
          description=" --> Simple collector">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.TestT2"/>
      <param name="className" value="joram.collector.TestCollectorTopic2"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="collector.TestT3" depends="init.a3props,compile"
          description=" --> Simple collector">
  	<antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.TestT3"/>
      <param name="className" value="joram.collector.TestCollectorTopic3"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
  		<param name="manifest.mf" value="joram/collector/manifest.mf"/>
  		<param name="include.classes" value="joram/collector/Empty*.class"/>
    </antcall>
  </target>

  <target name="collector.TestT4" depends="init.a3props,compile"
          description=" --> Simple collector">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="collector.TestT4"/>
      <param name="className" value="joram.collector.TestCollectorTopic4"/>
      <param name="jndiconf" value="collector/jndi.properties"/>
      <param name="a3conf" value="collector/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="pool.Test1" depends="init.a3props,compile"
          description=" --> Tests pool of Connection.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="pool.Test1"/>
      <param name="className" value="joram.pooled.Test1"/>
      <param name="jndiconf" value="pooled/jndi.properties"/>
      <param name="a3conf" value="pooled/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="pool.Test2" depends="init.a3props,compile"
          description=" --> Tests pool of Connection.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="pool.Test2"/>
      <param name="className" value="joram.pooled.Test2"/>
      <param name="jndiconf" value="pooled/jndi.properties"/>
      <param name="a3conf" value="pooled/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
  
  <target name="pool.Test3" depends="init.a3props,compile"
          description=" --> Tests pool of Connection.">
    <antcall target="test.run" inheritAll="true">
      <param name="testid" value="pool.Test3"/>
      <param name="className" value="joram.pooled.Test3"/>
      <param name="jndiconf" value="pooled/jndi.properties"/>
      <param name="a3conf" value="pooled/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>

  <target name="sw.test1" depends="init.a3props,compile"
          description=" --> test SW scenario">
    <antcall target="init.test" inheritAll="true">
  	  <param name="jndiconf" value="distrib/jndi.properties"/>
    	<param name="a3conf" value="sw/a3servers.xml"/>
    </antcall>

  	<parallel>
  		
	    <antcall target="test.start" inheritAll="true">
  	    <param name="className" value="joram.sw.SWClient"/>
	      <param name="jvmargs" value=""/>
  	    <param name="args" value="0 2000"/>
    	</antcall>
  		
	    <antcall target="test.start" inheritAll="true">
  	    <param name="className" value="joram.sw.SWClient"/>
	      <param name="jvmargs" value=""/>
  	    <param name="args" value="1 2000"/>
    	</antcall>
  		
	    <antcall target="test.start" inheritAll="true">
  	    <param name="className" value="joram.sw.SWClient"/>
	      <param name="jvmargs" value=""/>
  	    <param name="args" value="2 2000"/>
    	</antcall>
  		
	    <antcall target="test.start" inheritAll="true">
  	    <param name="className" value="joram.sw.SWClient"/>
	      <param name="jvmargs" value=""/>
  	    <param name="args" value="3 2000"/>
    	</antcall>
  		
	    <antcall target="test.start" inheritAll="true">
  	    <param name="className" value="joram.sw.SWClient"/>
	      <param name="jvmargs" value=""/>
  	    <param name="args" value="4 2000"/>
    	</antcall>
  		
  	</parallel>
  </target>

  <target name="sw.test1-0" depends="init.a3props,compile"
          description=" --> test SW scenario server#0">
    <antcall target="test.run" inheritAll="true">
  	  <param name="jndiconf" value="distrib/jndi.properties"/>
    	<param name="a3conf" value="sw/a3servers1.xml"/>
  	  <param name="className" value="joram.sw.SWClient"/>
	    <param name="jvmargs" value=""/>
      <param name="args" value="0"/>
  	</antcall>
  </target>

  <target name="sw.test1-1" depends="init.a3props,compile"
          description=" --> test SW scenario server#1">
    <antcall target="test.run" inheritAll="true">
  	  <param name="jndiconf" value="distrib/jndi.properties"/>
    	<param name="a3conf" value="sw/a3servers1.xml"/>
  	  <param name="className" value="joram.sw.SWClient"/>
	    <param name="jvmargs" value=""/>
      <param name="args" value="1"/>
  	</antcall>
  </target>

  <target name="sw.test1-2" depends="init.a3props,compile"
          description=" --> test SW scenario server#2">
    <antcall target="test.run" inheritAll="true">
  	  <param name="jndiconf" value="distrib/jndi.properties"/>
    	<param name="a3conf" value="sw/a3servers1.xml"/>
  	  <param name="className" value="joram.sw.SWClient"/>
	    <param name="jvmargs" value=""/>
      <param name="args" value="2"/>
  	</antcall>
  </target>

  <target name="sw.test1-3" depends="init.a3props,compile"
          description=" --> test SW scenario server#3">
    <antcall target="test.run" inheritAll="true">
  	  <param name="jndiconf" value="distrib/jndi.properties"/>
    	<param name="a3conf" value="sw/a3servers1.xml"/>
  	  <param name="className" value="joram.sw.SWClient"/>
	    <param name="jvmargs" value=""/>
      <param name="args" value="3"/>
  	</antcall>
  </target>

  <target name="sw.test1-4" depends="init.a3props,compile"
          description=" --> test SW scenario server#4">
    <antcall target="test.run" inheritAll="true">
  	  <param name="jndiconf" value="distrib/jndi.properties"/>
    	<param name="a3conf" value="sw/a3servers1.xml"/>
  	  <param name="className" value="joram.sw.SWClient"/>
	    <param name="jvmargs" value=""/>
      <param name="args" value="4"/>
  	</antcall>
  </target>

	<!-- interceptors -->	
	<target name="interceptors.test1" depends="init.a3props,compile"
	        description=" --> test interceptors 1">
	  <antcall target="test.run" inheritAll="true">
	    <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
	    <param name="className" value="joram.interceptors.Test1"/>
	    <param name="jndiconf" value="interceptors/jndi.properties"/>
	    <param name="a3conf" value="interceptors/a3servers.xml"/>
	    <param name="jvmargs" value=""/>
	    <param name="testid" value="interceptors.test1"/>
	    <param name="args" value=""/>
	    <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
	    <param name="include.classes" value="joram/interceptors/Exit*.class"/>
	  </antcall>
	</target>
	
	<target name="interceptors.test2" depends="init.a3props,compile"
		      description=" --> test interceptors 2">
    <antcall target="test.run" inheritAll="true">
		  <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
		  <param name="className" value="joram.interceptors.Test2"/>
		  <param name="jndiconf" value="interceptors/jndi.properties"/>
		  <param name="a3conf" value="interceptors/a3servers.xml"/>
		  <param name="jvmargs" value=""/>
		  <param name="testid" value="interceptors.test2"/>
		  <param name="args" value=""/>
	    <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
		  <param name="include.classes" value="joram/interceptors/Exit*.class"/>
		</antcall>
  </target>
	
	<target name="interceptors.test3" depends="init.a3props,compile"
			    description=" --> test interceptors 3">
    <antcall target="test.run" inheritAll="true">
		  <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
			<param name="className" value="joram.interceptors.Test3"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test3"/>
			<param name="args" value=""/>
		  <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
    </antcall>
  </target>
	
	<target name="interceptors.test4" depends="init.a3props,compile"
			    description=" --> test interceptors 4">
    <antcall target="test.run" inheritAll="true">
		  <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
			<param name="className" value="joram.interceptors.Test4"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test4"/>
			<param name="args" value=""/>
		  <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
    </antcall>
  </target>	
	
	<target name="interceptors.test5" depends="init.a3props,compile"
			    description=" --> test interceptors 5">
    <antcall target="test.run" inheritAll="true">
		  <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
			<param name="className" value="joram.interceptors.Test5"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test5"/>
			<param name="args" value=""/>
		  <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
    </antcall>
  </target>
		
  <target name="interceptors.test6" depends="init.a3props,compile"
          description=" --> test interceptors 6">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
  		<param name="className" value="joram.interceptors.Test6"/>
  		<param name="jndiconf" value="interceptors/jndi.properties"/>
  		<param name="a3conf" value="interceptors/a3servers.xml"/>
  		<param name="jvmargs" value=""/>
  		<param name="testid" value="interceptors.test6"/>
  		<param name="args" value=""/>
  	  <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
  		<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
    </antcall>
  </target>

  <target name="interceptors.test7" depends="init.a3props,compile"
          description=" --> test interceptors 7">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
  		<param name="className" value="joram.interceptors.Test7"/>
  		<param name="jndiconf" value="interceptors/jndi.properties"/>
  		<param name="a3conf" value="interceptors/a3servers.xml"/>
  		<param name="jvmargs" value=""/>
  		<param name="testid" value="interceptors.test7"/>
  		<param name="args" value=""/>
  	  <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
  		<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
    </antcall>
  </target>
	
	<target name="interceptors.test_Q" depends="init.a3props,compile"
				  description=" --> test interceptors on a Queue">
    <antcall target="test.run" inheritAll="true">
		  <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
		  <param name="className" value="joram.interceptors.Test_Q"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_Q"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
    </antcall>
  </target>
	
	<target name="interceptors.test_T" depends="init.a3props,compile"
					  description=" --> test interceptors on a Topic">
	  <antcall target="test.run" inheritAll="true">
			<param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
			<param name="className" value="joram.interceptors.Test_T"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_T"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
	  </antcall>
	</target>
	
	<target name="interceptors.test_Q2" depends="init.a3props,compile"
					  description=" --> test2 interceptors on a Queue">
	  <antcall target="test.run" inheritAll="true">
			<param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
			<param name="className" value="joram.interceptors.Test_Q2"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_Q2"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
	  </antcall>
	</target>
	
	<target name="interceptors.test_T2" depends="init.a3props,compile"
					  description=" --> test2 interceptors on a Topic">
	  <antcall target="test.run" inheritAll="true">
			<param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
			<param name="className" value="joram.interceptors.Test_T2"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_T2"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
	  </antcall>
	</target>

	<target name="interceptors.test_Q3" depends="init.a3props,compile"
					  description=" --> test3 interceptors on a Queue creation.">
	  <antcall target="test.run" inheritAll="true">
			<param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
			<param name="className" value="joram.interceptors.Test_Q3"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_Q3"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
	  </antcall>
	</target>	

	<target name="interceptors.test_T3" depends="init.a3props,compile"
					  description=" --> test3 interceptors on a Topic creation.">
	  <antcall target="test.run" inheritAll="true">
			<param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
			<param name="className" value="joram.interceptors.Test_T3"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_T3"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
			<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
	  </antcall>
  </target>

  <target name="interceptors.test_Q4" depends="init.a3props,compile"
				  description=" --> test4 interceptors on a Queue creation.">
	  <antcall target="test.run" inheritAll="true">
			<param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
			<param name="className" value="joram.interceptors.Test_Q4"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_Q4"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
		<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
	  </antcall>
  </target>
	
  <target name="interceptors.test_T4" depends="init.a3props,compile"
          description=" --> test4 interceptors on a Topic creation.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="className" value="joram.interceptors.Test_T4"/>
      <param name="jndiconf" value="interceptors/jndi.properties"/>
      <param name="a3conf" value="interceptors/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="interceptors.test_T4"/>
      <param name="args" value=""/>
      <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
      <param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
   </antcall>
  </target>
	
  <target name="interceptors.test_Q5" depends="init.a3props,compile"
				  description=" --> test5 interceptors on a Queue creation.">
	  <antcall target="test.run" inheritAll="true">
			<param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
			<param name="className" value="joram.interceptors.Test_Q5"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_Q5"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
		<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
	  </antcall>
  </target>
	
  <target name="interceptors.test_T5" depends="init.a3props,compile"
          description=" --> test5 interceptors on a Topic creation.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="className" value="joram.interceptors.Test_T5"/>
      <param name="jndiconf" value="interceptors/jndi.properties"/>
      <param name="a3conf" value="interceptors/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="interceptors.test_T5"/>
      <param name="args" value=""/>
      <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
      <param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
   </antcall>
  </target>
	
  <target name="interceptors.test_Q6" depends="init.a3props,compile"
				  description=" --> test5 interceptors on a Queue creation.">
	  <antcall target="test.run" inheritAll="true">
			<param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
			<param name="className" value="joram.interceptors.Test_Q6"/>
			<param name="jndiconf" value="interceptors/jndi.properties"/>
			<param name="a3conf" value="interceptors/a3servers.xml"/>
			<param name="jvmargs" value=""/>
			<param name="testid" value="interceptors.test_Q6"/>
			<param name="args" value=""/>
			<param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
		<param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
	  </antcall>
  </target>
	
  <target name="interceptors.test_T6" depends="init.a3props,compile"
          description=" --> test5 interceptors on a Topic creation.">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="className" value="joram.interceptors.Test_T6"/>
      <param name="jndiconf" value="interceptors/jndi.properties"/>
      <param name="a3conf" value="interceptors/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="interceptors.test_T6"/>
      <param name="args" value=""/>
      <param name="manifest.mf" value="joram/interceptors/manifest.mf"/>
      <param name="include.classes" value="joram/interceptors/Exit*.class"/>			    	
   </antcall>
  </target>
  
  <target name="distribution.test1" depends="init.a3props,compile"
          description=" --> test re-distribution with a distribution queue and a threshold">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.distribution.DistributionTest"/>
      <param name="a3conf" value="distribution/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="distribution.test1"/>
      <param name="args" value=""/>
      <param name="manifest.mf" value="joram/distribution/manifest.mf"/>
      <param name="include.classes" value="joram/distribution/*Handler*.class"/>
    </antcall>
  </target>
  
  <target name="distribution.test2" depends="init.a3props,compile"
          description=" --> test distribution batch mode (OFF/ON) on a distribution Queue">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="className" value="joram.distribution.DistributionTest2"/>
      <param name="a3conf" value="distribution/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="testid" value="distribution.test2"/>
      <param name="args" value=""/>
      <param name="manifest.mf" value="joram/distribution/manifest.mf"/>
      <param name="include.classes" value="joram/distribution/*Handler*.class"/>
    </antcall>
  </target>
	
	<target name="distribution.test3" depends="init.a3props,compile"
	          description=" --> test distribution async mode (ON and OFF) on a distribution Queue">
	  <antcall target="test.run" inheritAll="true">
	    <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
	    <param name="className" value="joram.distribution.DistributionTest3"/>
	    <param name="a3conf" value="distribution/a3servers.xml"/>
	  	<param name="jvmargs" value="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,address=5000,suspend=n"/>
	    <param name="testid" value="distribution.test3"/>
	    <param name="args" value=""/>
	    <param name="manifest.mf" value="joram/distribution/manifest.mf"/>
	    <param name="include.classes" value="joram/distribution/*Handler*.class"/>
	  </antcall>
	</target>
	
	<!-- amqp test -->
	<target name="amqp.pkill" depends="init.a3props,compile"
	        description=" --> test AMQP Persistence Kill">
	    <antcall target="test.run" inheritAll="true">
	      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
	      <param name="testid" value="amqp.PersistenceKillTest"/>
	      <param name="className" value="joram.amqp.PersistenceKillTest"/>
	      <param name="jndiconf" value=""/>
	      <param name="a3conf" value="amqp/a3servers.xml"/>
	      <param name="jvmargs" value=""/>
	      <param name="args" value=""/>
	    </antcall>
	  </target>
	
	<target name="amqp.simple" depends="init.a3props,compile"
	        description=" --> test AMQP Persistence simple">
	  <antcall target="test.run" inheritAll="true">
		  <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
		  <param name="testid" value="amqp.PersistenceSimpleTest"/>
		  <param name="className" value="joram.amqp.PersistenceSimpleTest"/>
		  <param name="jndiconf" value=""/>
		  <param name="a3conf" value="amqp/a3servers.xml"/>
		  <param name="jvmargs" value=""/>
		  <param name="args" value=""/>
		</antcall>
  </target>
	
	<target name="amqp.queue" depends="init.a3props,compile"
		      description=" --> test AMQP queue declaration">
		<antcall target="test.run" inheritAll="true">
		  <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
		  <param name="testid" value="amqp.QueueTest"/>
		  <param name="className" value="joram.amqp.QueueTest"/>
		  <param name="jndiconf" value=""/>
		  <param name="a3conf" value="amqp/a3servers.xml"/>
		  <param name="jvmargs" value=""/>
		  <param name="args" value=""/>
		</antcall>
	</target>
	
  <target name="tJMS.test1" depends="init.a3props,compile"
          description=" --> test the tJMSInput / tJMSOutput code">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="tJMS.test1"/>
      <param name="className" value="joram.talend.tJMSTest1"/>
      <param name="jndiconf" value="talend/jndi.properties"/>
      <param name="a3conf" value="talend/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
  <target name="tMOM.test1" depends="init.a3props,compile"
          description=" --> test the tMOMInput / tMOMOutput code">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NullTransaction"/>
      <param name="testid" value="tMOM.test1"/>
      <param name="className" value="joram.talend.tMOMTest1"/>
      <param name="jndiconf" value="talend/jndi.properties"/>
      <param name="a3conf" value="talend/a3servers.xml"/>
      <param name="jvmargs" value=""/>
      <param name="args" value=""/>
    </antcall>
  </target>
	
	<!-- shell tests -->
	<!-- shell tests: mom -->
  <target name="shell.mom" depends="init.a3props,compile"
          description=" -- > Tests the MOM shell commands">
    <antcall target="test.run" inheritAll="true">
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
      <param name="testid" value="shell.mom"/>
      <param name="className" value="joram.shell.mom.MOMCommandsTests"/>
      <param name="a3conf" value="shell/a3servers.xml"/>
      <param name="jvmargs" value="-Dosgi.shell.telnet.port=6666"/>
      <param name="manifest.mf" value="joram/shell/mom/manifest.mf"/>
      <param name="isOSGi" value="true"/>
      <param name="SCAdminClass" value="framework.SCAdminOSGi"/>
    	<param name="include.classes" value="joram/shell/mom/MOMTester.class"/>
      <param name="args" value=""/>
    </antcall>
  </target>
</project>
