<?xml version="1.0"?>

<project default="test1" basedir=".">
  
  <!-- Include generic part -->
  



<target name="init" depends="init.src">
    <!-- Initialize the environment properties, use ${env.name} -->
    <property environment="env"/>
  
    <!-- Get the user defined properties from file -->
    <property file="build.properties"/>

    <!-- Detect unix or cygwin unix emulation on windows-->
    <condition property="unix">
      <or>
        <os family="unix"/>
        <equals arg1="${env.OSTYPE}" arg2="cygwin32"/>
      </or>
    </condition >

    <!-- Detect Windows familly OS -->
    <condition property="windows">
      <os family="windows"/>
    </condition >

    <!-- Initialize the directory structure properties -->
    <property name="src.dir" location="../"/>
    <property name="obj.dir" location="../../classes"/>
    <property name="ship.dir" location="../../../ship"/>
    <property name="lib.dir" location="${ship.dir}/lib"/>
    <property name="test.dir" location="../../run"/>
    <property name="testlib.dir" location="../../lib"/>
    <!-- creates the directory when no file has been extracted -->
    <mkdir dir="${testlib.dir}"/>

    <property name="report.file" location="../report.txt"/>

    <!-- Project classpath needed for execution -->
    <path id="project.class.path">
      <pathelement path="${java.class.path}/"/>
      <pathelement path="${test.dir}"/>
      <fileset dir="${lib.dir}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${testlib.dir}">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${obj.dir}"/>
    </path>

    <property name="project.class.path" refid="project.class.path"/>
  </target>

  <target name="clean" depends="init"  description=" --> Clean all generated files" >
    <delete quiet="true" dir="${obj.dir}"/>
    <delete quiet="true" dir="${test.dir}"/>
 <!--   <delete quiet="true" dir="${testlib.dir}"/>  -->
    <delete quiet="true" file="${report.file}"/>
  </target>

  <!-- Prepare compilation phase -->
  <target name="prepare" depends="init"  description=" --> Create the directory structure"> 
    <mkdir dir="${obj.dir}"/>
  </target>

  <target name="compile" depends="prepare" description=" --> Compile all tests">
    <javac srcdir="${src.dir}"
           destdir="${obj.dir}"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}"
           nowarn="${nowarn}"
           verbose="${verbose}">
      <classpath refid="project.class.path"/>
      <include name="framework/*.java"/>
      <patternset refid="specific"/>
      <!--<compilerarg value="-Xlint:unchecked"/>-->
    </javac>
  </target>

  <target name="init.test" depends="init,compile">
    <delete dir="${test.dir}"/>
    <mkdir dir="${test.dir}"/>
    <copy file="${a3conf}" tofile="${test.dir}/a3servers.xml"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@engine@" value="${engine}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@transaction@" value="${transaction}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@network@" value="${network}"/>
    <replace file="${test.dir}/a3servers.xml"
             token="@multiCnxSync@" value="${multiCnx}"/>
    <copy file="a3config.dtd" tofile="${test.dir}/a3config.dtd"/>
    <copy file="${a3debug}" tofile="${test.dir}/a3debug.cfg"/>
  </target>




























  <target name="init.src">
    <!-- Tests specific sources set -->
    <patternset id="specific">
      <include name="**/*.java"/>
    </patternset>
  </target>

  <target name="init.test.jndi2" depends="init">
    <delete dir="${test.dir}"/>
    <mkdir dir="${test.dir}"/>
    <copy file="../a3config.dtd" todir="${test.dir}"/>
    <copy file="a3servers.xml" tofile="${test.dir}/a3servers.xml"/>
    <copy file="a3debug.cfg" tofile="${test.dir}/a3debug.cfg"/>
  </target>

  <target name="init.test.jndi2.distributed" depends="init">
    <delete dir="${test.dir}"/>
    <mkdir dir="${test.dir}"/>
    <copy file="../a3config.dtd" todir="${test.dir}"/>
    <copy file="distributed/a3servers.xml" tofile="${test.dir}/a3servers.xml"/>
    <copy file="a3debug.cfg" tofile="${test.dir}/a3debug.cfg"/>
  </target>

  <target name="client.start">
    <java classname="${className}"
        failonerror="no" fork="yes"
        dir="${test.dir}">
      <classpath path="${project.class.path}"/>
      <jvmarg value="-Dframework.TestCase.TestId=0"/>
      <jvmarg value="-Dframework.TestCase.OutFile=${report.file}"/>
    </java>
  </target>

  <target name="test1" depends="init.test.jndi2,compile">
    <antcall target="client.start" inheritAll="true">
      <param name="className" value="jndi2.Test1"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
    </antcall>
  </target>

  <target name="test2" depends="init.test.jndi2,compile">
    <antcall target="client.start" inheritAll="true">
      <param name="className" value="jndi2.Test2"/>
      <param name="transaction" value="fr.dyade.aaa.util.NTransaction"/>
    </antcall>
  </target>
        
  <target name="tests.dtb" depends="test.dtb,test.dtb2,test.dtb3,test.dtb4,test.dtb5, 
        test.dtb.crash"/>

  <target name="test.dtb" depends="compile">
    <antcall target="init.test.jndi2.distributed" inheritAll="true"/>
    <antcall target="client.start" inheritAll="true">
      <param name="x" value="0"/>
      <param name="className" value="jndi2.distributed.JndiTest"/>
    </antcall>
  </target>

  <target name="test.dtb2" depends="compile">
    <antcall target="init.test.jndi2.distributed" inheritAll="true"/>
    <antcall target="client.start" inheritAll="true">
      <param name="x" value="0"/>
      <param name="className" value="jndi2.distributed.JndiTest2"/>
    </antcall>
  </target>

  <target name="test.dtb3" depends="compile">
    <antcall target="init.test.jndi2.distributed" inheritAll="true"/>
    <antcall target="client.start" inheritAll="true">
      <param name="x" value="0"/>
      <param name="className" value="jndi2.distributed.JndiTest3"/>
    </antcall>
  </target>

  <target name="test.dtb4" depends="compile">
    <antcall target="init.test.jndi2.distributed" inheritAll="true"/>
    <antcall target="client.start" inheritAll="true">
      <param name="x" value="0"/>
      <param name="className" value="jndi2.distributed.JndiTest4"/>
    </antcall>
  </target>

  <target name="test.dtb5" depends="compile">
    <antcall target="init.test.jndi2.distributed" inheritAll="true"/>
    <antcall target="client.start" inheritAll="true">
      <param name="x" value="0"/>
      <param name="className" value="jndi2.distributed.JndiTest5"/>
    </antcall>
  </target>
  
  <target name="test.dtb.crash" depends="compile">
    <antcall target="init.test.jndi2.distributed" inheritAll="true"/>
    <antcall target="client.start" inheritAll="true">
      <param name="x" value="0"/>
      <param name="className" value="jndi2.distributed.JndiCrashTest"/>
    </antcall>
  </target>

</project>
